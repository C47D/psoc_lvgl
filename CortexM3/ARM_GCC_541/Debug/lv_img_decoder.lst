ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"lv_img_decoder.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.lv_img_decoder_built_in_line_true_color,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	lv_img_decoder_built_in_line_true_color, %function
  24              	lv_img_decoder_built_in_line_true_color:
  25              	.LFB52:
  26              		.file 1 "lvgl\\src\\lv_draw\\lv_img_decoder.c"
   1:lvgl\src\lv_draw/lv_img_decoder.c **** /**
   2:lvgl\src\lv_draw/lv_img_decoder.c ****  * @file lv_img_decoder.c
   3:lvgl\src\lv_draw/lv_img_decoder.c ****  *
   4:lvgl\src\lv_draw/lv_img_decoder.c ****  */
   5:lvgl\src\lv_draw/lv_img_decoder.c **** 
   6:lvgl\src\lv_draw/lv_img_decoder.c **** /*********************
   7:lvgl\src\lv_draw/lv_img_decoder.c ****  *      INCLUDES
   8:lvgl\src\lv_draw/lv_img_decoder.c ****  *********************/
   9:lvgl\src\lv_draw/lv_img_decoder.c **** #include "lv_img_decoder.h"
  10:lvgl\src\lv_draw/lv_img_decoder.c **** #include "../lv_misc/lv_debug.h"
  11:lvgl\src\lv_draw/lv_img_decoder.c **** #include "../lv_draw/lv_draw_img.h"
  12:lvgl\src\lv_draw/lv_img_decoder.c **** #include "../lv_misc/lv_ll.h"
  13:lvgl\src\lv_draw/lv_img_decoder.c **** #include "../lv_misc/lv_color.h"
  14:lvgl\src\lv_draw/lv_img_decoder.c **** #include "../lv_misc/lv_gc.h"
  15:lvgl\src\lv_draw/lv_img_decoder.c **** 
  16:lvgl\src\lv_draw/lv_img_decoder.c **** #if defined(LV_GC_INCLUDE)
  17:lvgl\src\lv_draw/lv_img_decoder.c ****     #include LV_GC_INCLUDE
  18:lvgl\src\lv_draw/lv_img_decoder.c **** #endif /* LV_ENABLE_GC */
  19:lvgl\src\lv_draw/lv_img_decoder.c **** 
  20:lvgl\src\lv_draw/lv_img_decoder.c **** /*********************
  21:lvgl\src\lv_draw/lv_img_decoder.c ****  *      DEFINES
  22:lvgl\src\lv_draw/lv_img_decoder.c ****  *********************/
  23:lvgl\src\lv_draw/lv_img_decoder.c **** #define CF_BUILT_IN_FIRST LV_IMG_CF_TRUE_COLOR
  24:lvgl\src\lv_draw/lv_img_decoder.c **** #define CF_BUILT_IN_LAST LV_IMG_CF_ALPHA_8BIT
  25:lvgl\src\lv_draw/lv_img_decoder.c **** 
  26:lvgl\src\lv_draw/lv_img_decoder.c **** /**********************
  27:lvgl\src\lv_draw/lv_img_decoder.c ****  *      TYPEDEFS
  28:lvgl\src\lv_draw/lv_img_decoder.c ****  **********************/
  29:lvgl\src\lv_draw/lv_img_decoder.c **** typedef struct {
  30:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
  31:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_fs_file_t * f;
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 2


  32:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
  33:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_color_t * palette;
  34:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_opa_t * opa;
  35:lvgl\src\lv_draw/lv_img_decoder.c **** } lv_img_decoder_built_in_data_t;
  36:lvgl\src\lv_draw/lv_img_decoder.c **** 
  37:lvgl\src\lv_draw/lv_img_decoder.c **** /**********************
  38:lvgl\src\lv_draw/lv_img_decoder.c ****  *  STATIC PROTOTYPES
  39:lvgl\src\lv_draw/lv_img_decoder.c ****  **********************/
  40:lvgl\src\lv_draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_true_color(lv_img_decoder_dsc_t * dsc, lv_coord_t x, l
  41:lvgl\src\lv_draw/lv_img_decoder.c ****                                                         lv_coord_t len, uint8_t * buf);
  42:lvgl\src\lv_draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_alpha(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coo
  43:lvgl\src\lv_draw/lv_img_decoder.c ****                                                    lv_coord_t len, uint8_t * buf);
  44:lvgl\src\lv_draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_indexed(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_c
  45:lvgl\src\lv_draw/lv_img_decoder.c ****                                                      lv_coord_t len, uint8_t * buf);
  46:lvgl\src\lv_draw/lv_img_decoder.c **** 
  47:lvgl\src\lv_draw/lv_img_decoder.c **** /**********************
  48:lvgl\src\lv_draw/lv_img_decoder.c ****  *  STATIC VARIABLES
  49:lvgl\src\lv_draw/lv_img_decoder.c ****  **********************/
  50:lvgl\src\lv_draw/lv_img_decoder.c **** 
  51:lvgl\src\lv_draw/lv_img_decoder.c **** /**********************
  52:lvgl\src\lv_draw/lv_img_decoder.c ****  *      MACROS
  53:lvgl\src\lv_draw/lv_img_decoder.c ****  **********************/
  54:lvgl\src\lv_draw/lv_img_decoder.c **** 
  55:lvgl\src\lv_draw/lv_img_decoder.c **** /**********************
  56:lvgl\src\lv_draw/lv_img_decoder.c ****  *   GLOBAL FUNCTIONS
  57:lvgl\src\lv_draw/lv_img_decoder.c ****  **********************/
  58:lvgl\src\lv_draw/lv_img_decoder.c **** 
  59:lvgl\src\lv_draw/lv_img_decoder.c **** /**
  60:lvgl\src\lv_draw/lv_img_decoder.c ****  * Initialize the image decoder module
  61:lvgl\src\lv_draw/lv_img_decoder.c ****  * */
  62:lvgl\src\lv_draw/lv_img_decoder.c **** void _lv_img_decoder_init(void)
  63:lvgl\src\lv_draw/lv_img_decoder.c **** {
  64:lvgl\src\lv_draw/lv_img_decoder.c ****     _lv_ll_init(&LV_GC_ROOT(_lv_img_defoder_ll), sizeof(lv_img_decoder_t));
  65:lvgl\src\lv_draw/lv_img_decoder.c **** 
  66:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_t * decoder;
  67:lvgl\src\lv_draw/lv_img_decoder.c **** 
  68:lvgl\src\lv_draw/lv_img_decoder.c ****     /*Create a decoder for the built in color format*/
  69:lvgl\src\lv_draw/lv_img_decoder.c ****     decoder = lv_img_decoder_create();
  70:lvgl\src\lv_draw/lv_img_decoder.c ****     if(decoder == NULL) {
  71:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("lv_img_decoder_init: out of memory");
  72:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(decoder);
  73:lvgl\src\lv_draw/lv_img_decoder.c ****         return;
  74:lvgl\src\lv_draw/lv_img_decoder.c ****     }
  75:lvgl\src\lv_draw/lv_img_decoder.c **** 
  76:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_set_info_cb(decoder, lv_img_decoder_built_in_info);
  77:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_set_open_cb(decoder, lv_img_decoder_built_in_open);
  78:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_set_read_line_cb(decoder, lv_img_decoder_built_in_read_line);
  79:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_set_close_cb(decoder, lv_img_decoder_built_in_close);
  80:lvgl\src\lv_draw/lv_img_decoder.c **** }
  81:lvgl\src\lv_draw/lv_img_decoder.c **** 
  82:lvgl\src\lv_draw/lv_img_decoder.c **** /**
  83:lvgl\src\lv_draw/lv_img_decoder.c ****  * Get information about an image.
  84:lvgl\src\lv_draw/lv_img_decoder.c ****  * Try the created image decoder one by one. Once one is able to get info that info will be used.
  85:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param src the image source. E.g. file name or variable.
  86:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param header the image info will be stored here
  87:lvgl\src\lv_draw/lv_img_decoder.c ****  * @return LV_RES_OK: success; LV_RES_INV: wasn't able to get info about the image
  88:lvgl\src\lv_draw/lv_img_decoder.c ****  */
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 3


  89:lvgl\src\lv_draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_get_info(const char * src, lv_img_header_t * header)
  90:lvgl\src\lv_draw/lv_img_decoder.c **** {
  91:lvgl\src\lv_draw/lv_img_decoder.c ****     header->always_zero = 0;
  92:lvgl\src\lv_draw/lv_img_decoder.c ****     header->h = 0;
  93:lvgl\src\lv_draw/lv_img_decoder.c ****     header->w = 0;
  94:lvgl\src\lv_draw/lv_img_decoder.c ****     header->cf = LV_IMG_CF_UNKNOWN;
  95:lvgl\src\lv_draw/lv_img_decoder.c **** 
  96:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
  97:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_t * d;
  98:lvgl\src\lv_draw/lv_img_decoder.c ****     _LV_LL_READ(LV_GC_ROOT(_lv_img_defoder_ll), d) {
  99:lvgl\src\lv_draw/lv_img_decoder.c ****         res = LV_RES_INV;
 100:lvgl\src\lv_draw/lv_img_decoder.c ****         if(d->info_cb) {
 101:lvgl\src\lv_draw/lv_img_decoder.c ****             res = d->info_cb(d, src, header);
 102:lvgl\src\lv_draw/lv_img_decoder.c ****             if(res == LV_RES_OK) break;
 103:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 104:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 105:lvgl\src\lv_draw/lv_img_decoder.c **** 
 106:lvgl\src\lv_draw/lv_img_decoder.c ****     return res;
 107:lvgl\src\lv_draw/lv_img_decoder.c **** }
 108:lvgl\src\lv_draw/lv_img_decoder.c **** 
 109:lvgl\src\lv_draw/lv_img_decoder.c **** /**
 110:lvgl\src\lv_draw/lv_img_decoder.c ****  * Open an image.
 111:lvgl\src\lv_draw/lv_img_decoder.c ****  * Try the created image decoder one by one. Once one is able to open the image that decoder is sav
 112:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param dsc describe a decoding session. Simply a pointer to an `lv_img_decoder_dsc_t` variable.
 113:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param src the image source. Can be
 114:lvgl\src\lv_draw/lv_img_decoder.c ****  *  1) File name: E.g. "S:folder/img1.png" (The drivers needs to registered via `lv_fs_add_drv()`)
 115:lvgl\src\lv_draw/lv_img_decoder.c ****  *  2) Variable: Pointer to an `lv_img_dsc_t` variable
 116:lvgl\src\lv_draw/lv_img_decoder.c ****  *  3) Symbol: E.g. `LV_SYMBOL_OK`
 117:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param color The color of the image with `LV_IMG_CF_ALPHA_...`
 118:lvgl\src\lv_draw/lv_img_decoder.c ****  * @return LV_RES_OK: opened the image. `dsc->img_data` and `dsc->header` are set.
 119:lvgl\src\lv_draw/lv_img_decoder.c ****  *         LV_RES_INV: none of the registered image decoders were able to open the image.
 120:lvgl\src\lv_draw/lv_img_decoder.c ****  */
 121:lvgl\src\lv_draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_open(lv_img_decoder_dsc_t * dsc, const void * src, lv_color_t color)
 122:lvgl\src\lv_draw/lv_img_decoder.c **** {
 123:lvgl\src\lv_draw/lv_img_decoder.c ****     dsc->color     = color;
 124:lvgl\src\lv_draw/lv_img_decoder.c ****     dsc->src_type  = lv_img_src_get_type(src);
 125:lvgl\src\lv_draw/lv_img_decoder.c ****     dsc->user_data = NULL;
 126:lvgl\src\lv_draw/lv_img_decoder.c **** 
 127:lvgl\src\lv_draw/lv_img_decoder.c ****     if(dsc->src_type == LV_IMG_SRC_FILE) {
 128:lvgl\src\lv_draw/lv_img_decoder.c ****         size_t fnlen = strlen(src);
 129:lvgl\src\lv_draw/lv_img_decoder.c ****         dsc->src = lv_mem_alloc(fnlen + 1);
 130:lvgl\src\lv_draw/lv_img_decoder.c ****         strcpy((char *)dsc->src, src);
 131:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 132:lvgl\src\lv_draw/lv_img_decoder.c ****     else {
 133:lvgl\src\lv_draw/lv_img_decoder.c ****         dsc->src       = src;
 134:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 135:lvgl\src\lv_draw/lv_img_decoder.c **** 
 136:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
 137:lvgl\src\lv_draw/lv_img_decoder.c **** 
 138:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_t * d;
 139:lvgl\src\lv_draw/lv_img_decoder.c ****     _LV_LL_READ(LV_GC_ROOT(_lv_img_defoder_ll), d) {
 140:lvgl\src\lv_draw/lv_img_decoder.c ****         /*Info an Open callbacks are required*/
 141:lvgl\src\lv_draw/lv_img_decoder.c ****         if(d->info_cb == NULL || d->open_cb == NULL) continue;
 142:lvgl\src\lv_draw/lv_img_decoder.c **** 
 143:lvgl\src\lv_draw/lv_img_decoder.c ****         res = d->info_cb(d, src, &dsc->header);
 144:lvgl\src\lv_draw/lv_img_decoder.c ****         if(res != LV_RES_OK) continue;
 145:lvgl\src\lv_draw/lv_img_decoder.c **** 
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 4


 146:lvgl\src\lv_draw/lv_img_decoder.c ****         dsc->error_msg = NULL;
 147:lvgl\src\lv_draw/lv_img_decoder.c ****         dsc->img_data  = NULL;
 148:lvgl\src\lv_draw/lv_img_decoder.c ****         dsc->decoder   = d;
 149:lvgl\src\lv_draw/lv_img_decoder.c **** 
 150:lvgl\src\lv_draw/lv_img_decoder.c ****         res = d->open_cb(d, dsc);
 151:lvgl\src\lv_draw/lv_img_decoder.c **** 
 152:lvgl\src\lv_draw/lv_img_decoder.c ****         /*Opened successfully. It is a good decoder to for this image source*/
 153:lvgl\src\lv_draw/lv_img_decoder.c ****         if(res == LV_RES_OK) break;
 154:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 155:lvgl\src\lv_draw/lv_img_decoder.c **** 
 156:lvgl\src\lv_draw/lv_img_decoder.c ****     return res;
 157:lvgl\src\lv_draw/lv_img_decoder.c **** }
 158:lvgl\src\lv_draw/lv_img_decoder.c **** 
 159:lvgl\src\lv_draw/lv_img_decoder.c **** /**
 160:lvgl\src\lv_draw/lv_img_decoder.c ****  * Read a line from an opened image
 161:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param dsc pointer to `lv_img_decoder_dsc_t` used in `lv_img_decoder_open`
 162:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param x start X coordinate (from left)
 163:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param y start Y coordinate (from top)
 164:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param len number of pixels to read
 165:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param buf store the data here
 166:lvgl\src\lv_draw/lv_img_decoder.c ****  * @return LV_RES_OK: success; LV_RES_INV: an error occurred
 167:lvgl\src\lv_draw/lv_img_decoder.c ****  */
 168:lvgl\src\lv_draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_read_line(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_coord_
 169:lvgl\src\lv_draw/lv_img_decoder.c **** {
 170:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
 171:lvgl\src\lv_draw/lv_img_decoder.c ****     if(dsc->decoder->read_line_cb) res = dsc->decoder->read_line_cb(dsc->decoder, dsc, x, y, len, b
 172:lvgl\src\lv_draw/lv_img_decoder.c **** 
 173:lvgl\src\lv_draw/lv_img_decoder.c ****     return res;
 174:lvgl\src\lv_draw/lv_img_decoder.c **** }
 175:lvgl\src\lv_draw/lv_img_decoder.c **** 
 176:lvgl\src\lv_draw/lv_img_decoder.c **** /**
 177:lvgl\src\lv_draw/lv_img_decoder.c ****  * Close a decoding session
 178:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param dsc pointer to `lv_img_decoder_dsc_t` used in `lv_img_decoder_open`
 179:lvgl\src\lv_draw/lv_img_decoder.c ****  */
 180:lvgl\src\lv_draw/lv_img_decoder.c **** void lv_img_decoder_close(lv_img_decoder_dsc_t * dsc)
 181:lvgl\src\lv_draw/lv_img_decoder.c **** {
 182:lvgl\src\lv_draw/lv_img_decoder.c ****     if(dsc->decoder) {
 183:lvgl\src\lv_draw/lv_img_decoder.c ****         if(dsc->decoder->close_cb) dsc->decoder->close_cb(dsc->decoder, dsc);
 184:lvgl\src\lv_draw/lv_img_decoder.c **** 
 185:lvgl\src\lv_draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_FILE) {
 186:lvgl\src\lv_draw/lv_img_decoder.c ****             lv_mem_free(dsc->src);
 187:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->src = NULL;
 188:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 189:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 190:lvgl\src\lv_draw/lv_img_decoder.c **** }
 191:lvgl\src\lv_draw/lv_img_decoder.c **** 
 192:lvgl\src\lv_draw/lv_img_decoder.c **** /**
 193:lvgl\src\lv_draw/lv_img_decoder.c ****  * Create a new image decoder
 194:lvgl\src\lv_draw/lv_img_decoder.c ****  * @return pointer to the new image decoder
 195:lvgl\src\lv_draw/lv_img_decoder.c ****  */
 196:lvgl\src\lv_draw/lv_img_decoder.c **** lv_img_decoder_t * lv_img_decoder_create(void)
 197:lvgl\src\lv_draw/lv_img_decoder.c **** {
 198:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_t * decoder;
 199:lvgl\src\lv_draw/lv_img_decoder.c ****     decoder = _lv_ll_ins_head(&LV_GC_ROOT(_lv_img_defoder_ll));
 200:lvgl\src\lv_draw/lv_img_decoder.c ****     LV_ASSERT_MEM(decoder);
 201:lvgl\src\lv_draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 202:lvgl\src\lv_draw/lv_img_decoder.c **** 
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 5


 203:lvgl\src\lv_draw/lv_img_decoder.c ****     _lv_memset_00(decoder, sizeof(lv_img_decoder_t));
 204:lvgl\src\lv_draw/lv_img_decoder.c **** 
 205:lvgl\src\lv_draw/lv_img_decoder.c ****     return decoder;
 206:lvgl\src\lv_draw/lv_img_decoder.c **** }
 207:lvgl\src\lv_draw/lv_img_decoder.c **** 
 208:lvgl\src\lv_draw/lv_img_decoder.c **** /**
 209:lvgl\src\lv_draw/lv_img_decoder.c ****  * Delete an image decoder
 210:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param decoder pointer to an image decoder
 211:lvgl\src\lv_draw/lv_img_decoder.c ****  */
 212:lvgl\src\lv_draw/lv_img_decoder.c **** void lv_img_decoder_delete(lv_img_decoder_t * decoder)
 213:lvgl\src\lv_draw/lv_img_decoder.c **** {
 214:lvgl\src\lv_draw/lv_img_decoder.c ****     _lv_ll_remove(&LV_GC_ROOT(_lv_img_defoder_ll), decoder);
 215:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_mem_free(decoder);
 216:lvgl\src\lv_draw/lv_img_decoder.c **** }
 217:lvgl\src\lv_draw/lv_img_decoder.c **** 
 218:lvgl\src\lv_draw/lv_img_decoder.c **** /**
 219:lvgl\src\lv_draw/lv_img_decoder.c ****  * Set a callback to get information about the image
 220:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param decoder pointer to an image decoder
 221:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param info_cb a function to collect info about an image (fill an `lv_img_header_t` struct)
 222:lvgl\src\lv_draw/lv_img_decoder.c ****  */
 223:lvgl\src\lv_draw/lv_img_decoder.c **** void lv_img_decoder_set_info_cb(lv_img_decoder_t * decoder, lv_img_decoder_info_f_t info_cb)
 224:lvgl\src\lv_draw/lv_img_decoder.c **** {
 225:lvgl\src\lv_draw/lv_img_decoder.c ****     decoder->info_cb = info_cb;
 226:lvgl\src\lv_draw/lv_img_decoder.c **** }
 227:lvgl\src\lv_draw/lv_img_decoder.c **** 
 228:lvgl\src\lv_draw/lv_img_decoder.c **** /**
 229:lvgl\src\lv_draw/lv_img_decoder.c ****  * Set a callback to open an image
 230:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param decoder pointer to an image decoder
 231:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param open_cb a function to open an image
 232:lvgl\src\lv_draw/lv_img_decoder.c ****  */
 233:lvgl\src\lv_draw/lv_img_decoder.c **** void lv_img_decoder_set_open_cb(lv_img_decoder_t * decoder, lv_img_decoder_open_f_t open_cb)
 234:lvgl\src\lv_draw/lv_img_decoder.c **** {
 235:lvgl\src\lv_draw/lv_img_decoder.c ****     decoder->open_cb = open_cb;
 236:lvgl\src\lv_draw/lv_img_decoder.c **** }
 237:lvgl\src\lv_draw/lv_img_decoder.c **** 
 238:lvgl\src\lv_draw/lv_img_decoder.c **** /**
 239:lvgl\src\lv_draw/lv_img_decoder.c ****  * Set a callback to a decoded line of an image
 240:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param decoder pointer to an image decoder
 241:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param read_line_cb a function to read a line of an image
 242:lvgl\src\lv_draw/lv_img_decoder.c ****  */
 243:lvgl\src\lv_draw/lv_img_decoder.c **** void lv_img_decoder_set_read_line_cb(lv_img_decoder_t * decoder, lv_img_decoder_read_line_f_t read_
 244:lvgl\src\lv_draw/lv_img_decoder.c **** {
 245:lvgl\src\lv_draw/lv_img_decoder.c ****     decoder->read_line_cb = read_line_cb;
 246:lvgl\src\lv_draw/lv_img_decoder.c **** }
 247:lvgl\src\lv_draw/lv_img_decoder.c **** 
 248:lvgl\src\lv_draw/lv_img_decoder.c **** /**
 249:lvgl\src\lv_draw/lv_img_decoder.c ****  * Set a callback to close a decoding session. E.g. close files and free other resources.
 250:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param decoder pointer to an image decoder
 251:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param close_cb a function to close a decoding session
 252:lvgl\src\lv_draw/lv_img_decoder.c ****  */
 253:lvgl\src\lv_draw/lv_img_decoder.c **** void lv_img_decoder_set_close_cb(lv_img_decoder_t * decoder, lv_img_decoder_close_f_t close_cb)
 254:lvgl\src\lv_draw/lv_img_decoder.c **** {
 255:lvgl\src\lv_draw/lv_img_decoder.c ****     decoder->close_cb = close_cb;
 256:lvgl\src\lv_draw/lv_img_decoder.c **** }
 257:lvgl\src\lv_draw/lv_img_decoder.c **** 
 258:lvgl\src\lv_draw/lv_img_decoder.c **** /**
 259:lvgl\src\lv_draw/lv_img_decoder.c ****  * Get info about a built-in image
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 6


 260:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param decoder the decoder where this function belongs
 261:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param src the image source: pointer to an `lv_img_dsc_t` variable, a file path or a symbol
 262:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param header store the image data here
 263:lvgl\src\lv_draw/lv_img_decoder.c ****  * @return LV_RES_OK: the info is successfully stored in `header`; LV_RES_INV: unknown format or ot
 264:lvgl\src\lv_draw/lv_img_decoder.c ****  */
 265:lvgl\src\lv_draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_built_in_info(lv_img_decoder_t * decoder, const void * src, lv_img_header_t
 266:lvgl\src\lv_draw/lv_img_decoder.c **** {
 267:lvgl\src\lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
 268:lvgl\src\lv_draw/lv_img_decoder.c **** 
 269:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_src_t src_type = lv_img_src_get_type(src);
 270:lvgl\src\lv_draw/lv_img_decoder.c ****     if(src_type == LV_IMG_SRC_VARIABLE) {
 271:lvgl\src\lv_draw/lv_img_decoder.c ****         lv_img_cf_t cf = ((lv_img_dsc_t *)src)->header.cf;
 272:lvgl\src\lv_draw/lv_img_decoder.c ****         if(cf < CF_BUILT_IN_FIRST || cf > CF_BUILT_IN_LAST) return LV_RES_INV;
 273:lvgl\src\lv_draw/lv_img_decoder.c **** 
 274:lvgl\src\lv_draw/lv_img_decoder.c ****         header->w  = ((lv_img_dsc_t *)src)->header.w;
 275:lvgl\src\lv_draw/lv_img_decoder.c ****         header->h  = ((lv_img_dsc_t *)src)->header.h;
 276:lvgl\src\lv_draw/lv_img_decoder.c ****         header->cf = ((lv_img_dsc_t *)src)->header.cf;
 277:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 278:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 279:lvgl\src\lv_draw/lv_img_decoder.c ****     else if(src_type == LV_IMG_SRC_FILE) {
 280:lvgl\src\lv_draw/lv_img_decoder.c ****         lv_fs_file_t file;
 281:lvgl\src\lv_draw/lv_img_decoder.c ****         lv_fs_res_t res;
 282:lvgl\src\lv_draw/lv_img_decoder.c ****         uint32_t rn;
 283:lvgl\src\lv_draw/lv_img_decoder.c ****         res = lv_fs_open(&file, src, LV_FS_MODE_RD);
 284:lvgl\src\lv_draw/lv_img_decoder.c ****         if(res == LV_FS_RES_OK) {
 285:lvgl\src\lv_draw/lv_img_decoder.c ****             res = lv_fs_read(&file, header, sizeof(lv_img_header_t), &rn);
 286:lvgl\src\lv_draw/lv_img_decoder.c ****             lv_fs_close(&file);
 287:lvgl\src\lv_draw/lv_img_decoder.c ****             if(res != LV_FS_RES_OK || rn != sizeof(lv_img_header_t)) {
 288:lvgl\src\lv_draw/lv_img_decoder.c ****                 LV_LOG_WARN("Image get info get read file header");
 289:lvgl\src\lv_draw/lv_img_decoder.c ****                 return LV_RES_INV;
 290:lvgl\src\lv_draw/lv_img_decoder.c ****             }
 291:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 292:lvgl\src\lv_draw/lv_img_decoder.c **** 
 293:lvgl\src\lv_draw/lv_img_decoder.c ****         if(header->cf < CF_BUILT_IN_FIRST || header->cf > CF_BUILT_IN_LAST) return LV_RES_INV;
 294:lvgl\src\lv_draw/lv_img_decoder.c **** 
 295:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 296:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 297:lvgl\src\lv_draw/lv_img_decoder.c ****     else if(src_type == LV_IMG_SRC_SYMBOL) {
 298:lvgl\src\lv_draw/lv_img_decoder.c ****         /*The size depend on the font but it is unknown here. It should be handled outside of the
 299:lvgl\src\lv_draw/lv_img_decoder.c ****          * function*/
 300:lvgl\src\lv_draw/lv_img_decoder.c ****         header->w = 1;
 301:lvgl\src\lv_draw/lv_img_decoder.c ****         header->h = 1;
 302:lvgl\src\lv_draw/lv_img_decoder.c ****         /* Symbols always have transparent parts. Important because of cover check in the design
 303:lvgl\src\lv_draw/lv_img_decoder.c ****          * function. The actual value doesn't matter because lv_draw_label will draw it*/
 304:lvgl\src\lv_draw/lv_img_decoder.c ****         header->cf = LV_IMG_CF_ALPHA_1BIT;
 305:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 306:lvgl\src\lv_draw/lv_img_decoder.c ****     else {
 307:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Image get info found unknown src type");
 308:lvgl\src\lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 309:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 310:lvgl\src\lv_draw/lv_img_decoder.c ****     return LV_RES_OK;
 311:lvgl\src\lv_draw/lv_img_decoder.c **** }
 312:lvgl\src\lv_draw/lv_img_decoder.c **** 
 313:lvgl\src\lv_draw/lv_img_decoder.c **** /**
 314:lvgl\src\lv_draw/lv_img_decoder.c ****  * Open a built in image
 315:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param decoder the decoder where this function belongs
 316:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param dsc pointer to decoder descriptor. `src`, `style` are already initialized in it.
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 7


 317:lvgl\src\lv_draw/lv_img_decoder.c ****  * @return LV_RES_OK: the info is successfully stored in `header`; LV_RES_INV: unknown format or ot
 318:lvgl\src\lv_draw/lv_img_decoder.c ****  */
 319:lvgl\src\lv_draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_built_in_open(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc)
 320:lvgl\src\lv_draw/lv_img_decoder.c **** {
 321:lvgl\src\lv_draw/lv_img_decoder.c ****     /*Open the file if it's a file*/
 322:lvgl\src\lv_draw/lv_img_decoder.c ****     if(dsc->src_type == LV_IMG_SRC_FILE) {
 323:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 324:lvgl\src\lv_draw/lv_img_decoder.c **** 
 325:lvgl\src\lv_draw/lv_img_decoder.c ****         /*Support only "*.bin" files*/
 326:lvgl\src\lv_draw/lv_img_decoder.c ****         if(strcmp(lv_fs_get_ext(dsc->src), "bin")) return LV_RES_INV;
 327:lvgl\src\lv_draw/lv_img_decoder.c **** 
 328:lvgl\src\lv_draw/lv_img_decoder.c ****         lv_fs_file_t f;
 329:lvgl\src\lv_draw/lv_img_decoder.c ****         lv_fs_res_t res = lv_fs_open(&f, dsc->src, LV_FS_MODE_RD);
 330:lvgl\src\lv_draw/lv_img_decoder.c ****         if(res != LV_FS_RES_OK) {
 331:lvgl\src\lv_draw/lv_img_decoder.c ****             LV_LOG_WARN("Built-in image decoder can't open the file");
 332:lvgl\src\lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 333:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 334:lvgl\src\lv_draw/lv_img_decoder.c **** 
 335:lvgl\src\lv_draw/lv_img_decoder.c ****         /*If the file was open successfully save the file descriptor*/
 336:lvgl\src\lv_draw/lv_img_decoder.c ****         if(dsc->user_data == NULL) {
 337:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 338:lvgl\src\lv_draw/lv_img_decoder.c ****             LV_ASSERT_MEM(dsc->user_data);
 339:lvgl\src\lv_draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 340:lvgl\src\lv_draw/lv_img_decoder.c ****                 LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 341:lvgl\src\lv_draw/lv_img_decoder.c ****                 return LV_RES_INV;
 342:lvgl\src\lv_draw/lv_img_decoder.c ****             }
 343:lvgl\src\lv_draw/lv_img_decoder.c ****             _lv_memset_00(dsc->user_data, sizeof(lv_img_decoder_built_in_data_t));
 344:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 345:lvgl\src\lv_draw/lv_img_decoder.c **** 
 346:lvgl\src\lv_draw/lv_img_decoder.c ****         lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 347:lvgl\src\lv_draw/lv_img_decoder.c ****         user_data->f = lv_mem_alloc(sizeof(f));
 348:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(user_data->f);
 349:lvgl\src\lv_draw/lv_img_decoder.c ****         if(user_data->f == NULL) {
 350:lvgl\src\lv_draw/lv_img_decoder.c ****             LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 351:lvgl\src\lv_draw/lv_img_decoder.c ****             lv_img_decoder_built_in_close(decoder, dsc);
 352:lvgl\src\lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 353:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 354:lvgl\src\lv_draw/lv_img_decoder.c **** 
 355:lvgl\src\lv_draw/lv_img_decoder.c ****         _lv_memcpy_small(user_data->f, &f, sizeof(f));
 356:lvgl\src\lv_draw/lv_img_decoder.c **** 
 357:lvgl\src\lv_draw/lv_img_decoder.c **** #else
 358:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Image built-in decoder cannot read file because LV_USE_FILESYSTEM = 0");
 359:lvgl\src\lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 360:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 361:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 362:lvgl\src\lv_draw/lv_img_decoder.c ****     else if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 363:lvgl\src\lv_draw/lv_img_decoder.c ****         /*The variables should have valid data*/
 364:lvgl\src\lv_draw/lv_img_decoder.c ****         if(((lv_img_dsc_t *)dsc->src)->data == NULL) {
 365:lvgl\src\lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 366:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 367:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 368:lvgl\src\lv_draw/lv_img_decoder.c **** 
 369:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_cf_t cf = dsc->header.cf;
 370:lvgl\src\lv_draw/lv_img_decoder.c ****     /*Process true color formats*/
 371:lvgl\src\lv_draw/lv_img_decoder.c ****     if(cf == LV_IMG_CF_TRUE_COLOR || cf == LV_IMG_CF_TRUE_COLOR_ALPHA || cf == LV_IMG_CF_TRUE_COLOR
 372:lvgl\src\lv_draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 373:lvgl\src\lv_draw/lv_img_decoder.c ****             /* In case of uncompressed formats the image stored in the ROM/RAM.
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 8


 374:lvgl\src\lv_draw/lv_img_decoder.c ****              * So simply give its pointer*/
 375:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->img_data = ((lv_img_dsc_t *)dsc->src)->data;
 376:lvgl\src\lv_draw/lv_img_decoder.c ****             return LV_RES_OK;
 377:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 378:lvgl\src\lv_draw/lv_img_decoder.c ****         else {
 379:lvgl\src\lv_draw/lv_img_decoder.c ****             /*If it's a file it need to be read line by line later*/
 380:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->img_data = NULL;
 381:lvgl\src\lv_draw/lv_img_decoder.c ****             return LV_RES_OK;
 382:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 383:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 384:lvgl\src\lv_draw/lv_img_decoder.c ****     /*Process indexed images. Build a palette*/
 385:lvgl\src\lv_draw/lv_img_decoder.c ****     else if(cf == LV_IMG_CF_INDEXED_1BIT || cf == LV_IMG_CF_INDEXED_2BIT || cf == LV_IMG_CF_INDEXED
 386:lvgl\src\lv_draw/lv_img_decoder.c ****             cf == LV_IMG_CF_INDEXED_8BIT) {
 387:lvgl\src\lv_draw/lv_img_decoder.c **** 
 388:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_IMG_CF_INDEXED
 389:lvgl\src\lv_draw/lv_img_decoder.c ****         uint8_t px_size       = lv_img_cf_get_px_size(cf);
 390:lvgl\src\lv_draw/lv_img_decoder.c ****         uint32_t palette_size = 1 << px_size;
 391:lvgl\src\lv_draw/lv_img_decoder.c **** 
 392:lvgl\src\lv_draw/lv_img_decoder.c ****         /*Allocate the palette*/
 393:lvgl\src\lv_draw/lv_img_decoder.c ****         if(dsc->user_data == NULL) {
 394:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 395:lvgl\src\lv_draw/lv_img_decoder.c ****             LV_ASSERT_MEM(dsc->user_data);
 396:lvgl\src\lv_draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 397:lvgl\src\lv_draw/lv_img_decoder.c ****                 LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 398:lvgl\src\lv_draw/lv_img_decoder.c ****                 lv_img_decoder_built_in_close(decoder, dsc);
 399:lvgl\src\lv_draw/lv_img_decoder.c ****                 return LV_RES_INV;
 400:lvgl\src\lv_draw/lv_img_decoder.c ****             }
 401:lvgl\src\lv_draw/lv_img_decoder.c ****             _lv_memset_00(dsc->user_data, sizeof(lv_img_decoder_built_in_data_t));
 402:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 403:lvgl\src\lv_draw/lv_img_decoder.c **** 
 404:lvgl\src\lv_draw/lv_img_decoder.c ****         lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 405:lvgl\src\lv_draw/lv_img_decoder.c ****         user_data->palette                         = lv_mem_alloc(palette_size * sizeof(lv_color_t)
 406:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(user_data->palette);
 407:lvgl\src\lv_draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 408:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(user_data->opa);
 409:lvgl\src\lv_draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 410:lvgl\src\lv_draw/lv_img_decoder.c ****             LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 411:lvgl\src\lv_draw/lv_img_decoder.c ****             lv_img_decoder_built_in_close(decoder, dsc);
 412:lvgl\src\lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 413:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 414:lvgl\src\lv_draw/lv_img_decoder.c **** 
 415:lvgl\src\lv_draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_FILE) {
 416:lvgl\src\lv_draw/lv_img_decoder.c ****             /*Read the palette from file*/
 417:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 418:lvgl\src\lv_draw/lv_img_decoder.c ****             lv_fs_seek(user_data->f, 4); /*Skip the header*/
 419:lvgl\src\lv_draw/lv_img_decoder.c ****             lv_color32_t cur_color;
 420:lvgl\src\lv_draw/lv_img_decoder.c ****             uint32_t i;
 421:lvgl\src\lv_draw/lv_img_decoder.c ****             for(i = 0; i < palette_size; i++) {
 422:lvgl\src\lv_draw/lv_img_decoder.c ****                 lv_fs_read(user_data->f, &cur_color, sizeof(lv_color32_t), NULL);
 423:lvgl\src\lv_draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(cur_color.ch.red, cur_color.ch.green, cur_col
 424:lvgl\src\lv_draw/lv_img_decoder.c ****                 user_data->opa[i]     = cur_color.ch.alpha;
 425:lvgl\src\lv_draw/lv_img_decoder.c ****             }
 426:lvgl\src\lv_draw/lv_img_decoder.c **** #else
 427:lvgl\src\lv_draw/lv_img_decoder.c ****             LV_LOG_WARN("Image built-in decoder can read the palette because LV_USE_FILESYSTEM = 0"
 428:lvgl\src\lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 429:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 430:lvgl\src\lv_draw/lv_img_decoder.c ****         }
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 9


 431:lvgl\src\lv_draw/lv_img_decoder.c ****         else {
 432:lvgl\src\lv_draw/lv_img_decoder.c ****             /*The palette begins in the beginning of the image data. Just point to it.*/
 433:lvgl\src\lv_draw/lv_img_decoder.c ****             lv_color32_t * palette_p = (lv_color32_t *)((lv_img_dsc_t *)dsc->src)->data;
 434:lvgl\src\lv_draw/lv_img_decoder.c **** 
 435:lvgl\src\lv_draw/lv_img_decoder.c **** 
 436:lvgl\src\lv_draw/lv_img_decoder.c ****             uint32_t i;
 437:lvgl\src\lv_draw/lv_img_decoder.c ****             for(i = 0; i < palette_size; i++) {
 438:lvgl\src\lv_draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 439:lvgl\src\lv_draw/lv_img_decoder.c ****                 user_data->opa[i]     = palette_p[i].ch.alpha;
 440:lvgl\src\lv_draw/lv_img_decoder.c ****             }
 441:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 442:lvgl\src\lv_draw/lv_img_decoder.c **** 
 443:lvgl\src\lv_draw/lv_img_decoder.c ****         dsc->img_data = NULL;
 444:lvgl\src\lv_draw/lv_img_decoder.c ****         return LV_RES_OK;
 445:lvgl\src\lv_draw/lv_img_decoder.c **** #else
 446:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Indexed (palette) images are not enabled in lv_conf.h. See LV_IMG_CF_INDEXED")
 447:lvgl\src\lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 448:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 449:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 450:lvgl\src\lv_draw/lv_img_decoder.c ****     /*Alpha indexed images. */
 451:lvgl\src\lv_draw/lv_img_decoder.c ****     else if(cf == LV_IMG_CF_ALPHA_1BIT || cf == LV_IMG_CF_ALPHA_2BIT || cf == LV_IMG_CF_ALPHA_4BIT 
 452:lvgl\src\lv_draw/lv_img_decoder.c ****             cf == LV_IMG_CF_ALPHA_8BIT) {
 453:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_IMG_CF_ALPHA
 454:lvgl\src\lv_draw/lv_img_decoder.c ****         dsc->img_data = NULL;
 455:lvgl\src\lv_draw/lv_img_decoder.c ****         return LV_RES_OK; /*Nothing to process*/
 456:lvgl\src\lv_draw/lv_img_decoder.c **** #else
 457:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Alpha indexed images are not enabled in lv_conf.h. See LV_IMG_CF_ALPHA");
 458:lvgl\src\lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 459:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 460:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 461:lvgl\src\lv_draw/lv_img_decoder.c ****     /*Unknown format. Can't decode it.*/
 462:lvgl\src\lv_draw/lv_img_decoder.c ****     else {
 463:lvgl\src\lv_draw/lv_img_decoder.c ****         /*Free the potentially allocated memories*/
 464:lvgl\src\lv_draw/lv_img_decoder.c ****         lv_img_decoder_built_in_close(decoder, dsc);
 465:lvgl\src\lv_draw/lv_img_decoder.c **** 
 466:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Image decoder open: unknown color format")
 467:lvgl\src\lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 468:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 469:lvgl\src\lv_draw/lv_img_decoder.c **** }
 470:lvgl\src\lv_draw/lv_img_decoder.c **** 
 471:lvgl\src\lv_draw/lv_img_decoder.c **** /**
 472:lvgl\src\lv_draw/lv_img_decoder.c ****  * Decode `len` pixels starting from the given `x`, `y` coordinates and store them in `buf`.
 473:lvgl\src\lv_draw/lv_img_decoder.c ****  * Required only if the "open" function can't return with the whole decoded pixel array.
 474:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param decoder pointer to the decoder the function associated with
 475:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param dsc pointer to decoder descriptor
 476:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param x start x coordinate
 477:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param y start y coordinate
 478:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param len number of pixels to decode
 479:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param buf a buffer to store the decoded pixels
 480:lvgl\src\lv_draw/lv_img_decoder.c ****  * @return LV_RES_OK: ok; LV_RES_INV: failed
 481:lvgl\src\lv_draw/lv_img_decoder.c ****  */
 482:lvgl\src\lv_draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_built_in_read_line(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc, 
 483:lvgl\src\lv_draw/lv_img_decoder.c ****                                            lv_coord_t y, lv_coord_t len, uint8_t * buf)
 484:lvgl\src\lv_draw/lv_img_decoder.c **** {
 485:lvgl\src\lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
 486:lvgl\src\lv_draw/lv_img_decoder.c **** 
 487:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 10


 488:lvgl\src\lv_draw/lv_img_decoder.c **** 
 489:lvgl\src\lv_draw/lv_img_decoder.c ****     if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR || dsc->header.cf == LV_IMG_CF_TRUE_COLOR_ALPHA ||
 490:lvgl\src\lv_draw/lv_img_decoder.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 491:lvgl\src\lv_draw/lv_img_decoder.c ****         /* For TRUE_COLOR images read line required only for files.
 492:lvgl\src\lv_draw/lv_img_decoder.c ****          * For variables the image data was returned in `open`*/
 493:lvgl\src\lv_draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_FILE) {
 494:lvgl\src\lv_draw/lv_img_decoder.c ****             res = lv_img_decoder_built_in_line_true_color(dsc, x, y, len, buf);
 495:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 496:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 497:lvgl\src\lv_draw/lv_img_decoder.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_1BIT || dsc->header.cf == LV_IMG_CF_ALPHA_2BIT ||
 498:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_4BIT || dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 499:lvgl\src\lv_draw/lv_img_decoder.c **** 
 500:lvgl\src\lv_draw/lv_img_decoder.c ****         res = lv_img_decoder_built_in_line_alpha(dsc, x, y, len, buf);
 501:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 502:lvgl\src\lv_draw/lv_img_decoder.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_1BIT || dsc->header.cf == LV_IMG_CF_INDEXED_2BIT ||
 503:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_INDEXED_4BIT || dsc->header.cf == LV_IMG_CF_INDEXED_8BIT) {
 504:lvgl\src\lv_draw/lv_img_decoder.c ****         res = lv_img_decoder_built_in_line_indexed(dsc, x, y, len, buf);
 505:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 506:lvgl\src\lv_draw/lv_img_decoder.c ****     else {
 507:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Built-in image decoder read not supports the color format");
 508:lvgl\src\lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 509:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 510:lvgl\src\lv_draw/lv_img_decoder.c **** 
 511:lvgl\src\lv_draw/lv_img_decoder.c ****     return res;
 512:lvgl\src\lv_draw/lv_img_decoder.c **** }
 513:lvgl\src\lv_draw/lv_img_decoder.c **** 
 514:lvgl\src\lv_draw/lv_img_decoder.c **** /**
 515:lvgl\src\lv_draw/lv_img_decoder.c ****  * Close the pending decoding. Free resources etc.
 516:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param decoder pointer to the decoder the function associated with
 517:lvgl\src\lv_draw/lv_img_decoder.c ****  * @param dsc pointer to decoder descriptor
 518:lvgl\src\lv_draw/lv_img_decoder.c ****  */
 519:lvgl\src\lv_draw/lv_img_decoder.c **** void lv_img_decoder_built_in_close(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc)
 520:lvgl\src\lv_draw/lv_img_decoder.c **** {
 521:lvgl\src\lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
 522:lvgl\src\lv_draw/lv_img_decoder.c **** 
 523:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 524:lvgl\src\lv_draw/lv_img_decoder.c ****     if(user_data) {
 525:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 526:lvgl\src\lv_draw/lv_img_decoder.c ****         if(user_data->f) {
 527:lvgl\src\lv_draw/lv_img_decoder.c ****             lv_fs_close(user_data->f);
 528:lvgl\src\lv_draw/lv_img_decoder.c ****             lv_mem_free(user_data->f);
 529:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 530:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 531:lvgl\src\lv_draw/lv_img_decoder.c ****         if(user_data->palette) lv_mem_free(user_data->palette);
 532:lvgl\src\lv_draw/lv_img_decoder.c ****         if(user_data->opa) lv_mem_free(user_data->opa);
 533:lvgl\src\lv_draw/lv_img_decoder.c **** 
 534:lvgl\src\lv_draw/lv_img_decoder.c ****         lv_mem_free(user_data);
 535:lvgl\src\lv_draw/lv_img_decoder.c **** 
 536:lvgl\src\lv_draw/lv_img_decoder.c ****         dsc->user_data = NULL;
 537:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 538:lvgl\src\lv_draw/lv_img_decoder.c **** }
 539:lvgl\src\lv_draw/lv_img_decoder.c **** 
 540:lvgl\src\lv_draw/lv_img_decoder.c **** 
 541:lvgl\src\lv_draw/lv_img_decoder.c **** /**********************
 542:lvgl\src\lv_draw/lv_img_decoder.c ****  *   STATIC FUNCTIONS
 543:lvgl\src\lv_draw/lv_img_decoder.c ****  **********************/
 544:lvgl\src\lv_draw/lv_img_decoder.c **** 
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 11


 545:lvgl\src\lv_draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_true_color(lv_img_decoder_dsc_t * dsc, lv_coord_t x, l
 546:lvgl\src\lv_draw/lv_img_decoder.c ****                                                         lv_coord_t len, uint8_t * buf)
 547:lvgl\src\lv_draw/lv_img_decoder.c **** {
  27              		.loc 1 547 0
  28              		.cfi_startproc
  29              		@ args = 4, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 548:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 549:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 550:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_fs_res_t res;
 551:lvgl\src\lv_draw/lv_img_decoder.c ****     uint8_t px_size = lv_img_cf_get_px_size(dsc->header.cf);
 552:lvgl\src\lv_draw/lv_img_decoder.c **** 
 553:lvgl\src\lv_draw/lv_img_decoder.c ****     uint32_t pos = ((y * dsc->header.w + x) * px_size) >> 3;
 554:lvgl\src\lv_draw/lv_img_decoder.c ****     pos += 4; /*Skip the header*/
 555:lvgl\src\lv_draw/lv_img_decoder.c ****     res = lv_fs_seek(user_data->f, pos);
 556:lvgl\src\lv_draw/lv_img_decoder.c ****     if(res != LV_FS_RES_OK) {
 557:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Built-in image decoder seek failed");
 558:lvgl\src\lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 559:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 560:lvgl\src\lv_draw/lv_img_decoder.c ****     uint32_t btr = len * (px_size >> 3);
 561:lvgl\src\lv_draw/lv_img_decoder.c ****     uint32_t br  = 0;
 562:lvgl\src\lv_draw/lv_img_decoder.c ****     res = lv_fs_read(user_data->f, buf, btr, &br);
 563:lvgl\src\lv_draw/lv_img_decoder.c ****     if(res != LV_FS_RES_OK || btr != br) {
 564:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Built-in image decoder read failed");
 565:lvgl\src\lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 566:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 567:lvgl\src\lv_draw/lv_img_decoder.c **** 
 568:lvgl\src\lv_draw/lv_img_decoder.c ****     return LV_RES_OK;
 569:lvgl\src\lv_draw/lv_img_decoder.c **** #else
 570:lvgl\src\lv_draw/lv_img_decoder.c ****     LV_UNUSED(dsc);
 571:lvgl\src\lv_draw/lv_img_decoder.c ****     LV_UNUSED(x);
 572:lvgl\src\lv_draw/lv_img_decoder.c ****     LV_UNUSED(y);
 573:lvgl\src\lv_draw/lv_img_decoder.c ****     LV_UNUSED(len);
 574:lvgl\src\lv_draw/lv_img_decoder.c ****     LV_UNUSED(buf);
 575:lvgl\src\lv_draw/lv_img_decoder.c ****     LV_LOG_WARN("Image built-in decoder cannot read file because LV_USE_FILESYSTEM = 0");
 576:lvgl\src\lv_draw/lv_img_decoder.c ****     return LV_RES_INV;
 577:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 578:lvgl\src\lv_draw/lv_img_decoder.c **** }
  33              		.loc 1 578 0
  34 0000 0020     		movs	r0, #0
  35              	.LVL1:
  36 0002 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE52:
  39              		.size	lv_img_decoder_built_in_line_true_color, .-lv_img_decoder_built_in_line_true_color
  40              		.section	.text.lv_img_decoder_built_in_info,"ax",%progbits
  41              		.align	2
  42              		.global	lv_img_decoder_built_in_info
  43              		.thumb
  44              		.thumb_func
  45              		.type	lv_img_decoder_built_in_info, %function
  46              	lv_img_decoder_built_in_info:
  47              	.LFB48:
 266:lvgl\src\lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
  48              		.loc 1 266 0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 12


  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              	.LVL2:
  53 0000 38B5     		push	{r3, r4, r5, lr}
  54              		.cfi_def_cfa_offset 16
  55              		.cfi_offset 3, -16
  56              		.cfi_offset 4, -12
  57              		.cfi_offset 5, -8
  58              		.cfi_offset 14, -4
  59 0002 0D46     		mov	r5, r1
  60 0004 1446     		mov	r4, r2
 269:lvgl\src\lv_draw/lv_img_decoder.c ****     if(src_type == LV_IMG_SRC_VARIABLE) {
  61              		.loc 1 269 0
  62 0006 0846     		mov	r0, r1
  63              	.LVL3:
  64 0008 FFF7FEFF 		bl	lv_img_src_get_type
  65              	.LVL4:
 270:lvgl\src\lv_draw/lv_img_decoder.c ****         lv_img_cf_t cf = ((lv_img_dsc_t *)src)->header.cf;
  66              		.loc 1 270 0
  67 000c D8B9     		cbnz	r0, .L3
  68              	.LBB6:
 271:lvgl\src\lv_draw/lv_img_decoder.c ****         if(cf < CF_BUILT_IN_FIRST || cf > CF_BUILT_IN_LAST) return LV_RES_INV;
  69              		.loc 1 271 0
  70 000e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  71 0010 03F01F03 		and	r3, r3, #31
  72              	.LVL5:
 272:lvgl\src\lv_draw/lv_img_decoder.c **** 
  73              		.loc 1 272 0
  74 0014 043B     		subs	r3, r3, #4
  75 0016 DBB2     		uxtb	r3, r3
  76 0018 0A2B     		cmp	r3, #10
  77 001a 24D8     		bhi	.L5
 274:lvgl\src\lv_draw/lv_img_decoder.c ****         header->h  = ((lv_img_dsc_t *)src)->header.h;
  78              		.loc 1 274 0
  79 001c 2B68     		ldr	r3, [r5]
  80 001e C3F38A23 		ubfx	r3, r3, #10, #11
  81 0022 2268     		ldr	r2, [r4]
  82 0024 63F39422 		bfi	r2, r3, #10, #11
  83 0028 2260     		str	r2, [r4]
  84              	.LVL6:
 275:lvgl\src\lv_draw/lv_img_decoder.c ****         header->cf = ((lv_img_dsc_t *)src)->header.cf;
  85              		.loc 1 275 0
  86 002a 6B88     		ldrh	r3, [r5, #2]
  87 002c C3F34A13 		ubfx	r3, r3, #5, #11
  88 0030 6288     		ldrh	r2, [r4, #2]
  89 0032 63F34F12 		bfi	r2, r3, #5, #11
  90 0036 6280     		strh	r2, [r4, #2]	@ movhi
 276:lvgl\src\lv_draw/lv_img_decoder.c ****     }
  91              		.loc 1 276 0
  92 0038 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
  93 003a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  94 003c 62F30403 		bfi	r3, r2, #0, #5
  95 0040 2370     		strb	r3, [r4]
  96              	.LBE6:
 310:lvgl\src\lv_draw/lv_img_decoder.c **** }
  97              		.loc 1 310 0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 13


  98 0042 0120     		movs	r0, #1
  99              	.LVL7:
 100 0044 38BD     		pop	{r3, r4, r5, pc}
 101              	.LVL8:
 102              	.L3:
 297:lvgl\src\lv_draw/lv_img_decoder.c ****         /*The size depend on the font but it is unknown here. It should be handled outside of the
 103              		.loc 1 297 0
 104 0046 0228     		cmp	r0, #2
 105 0048 0FD1     		bne	.L6
 300:lvgl\src\lv_draw/lv_img_decoder.c ****         header->h = 1;
 106              		.loc 1 300 0
 107 004a 2368     		ldr	r3, [r4]
 108 004c 0120     		movs	r0, #1
 109              	.LVL9:
 110 004e 60F39423 		bfi	r3, r0, #10, #11
 111 0052 2360     		str	r3, [r4]
 301:lvgl\src\lv_draw/lv_img_decoder.c ****         /* Symbols always have transparent parts. Important because of cover check in the design
 112              		.loc 1 301 0
 113 0054 1A0C     		lsrs	r2, r3, #16
 114 0056 60F34F12 		bfi	r2, r0, #5, #11
 115 005a 6280     		strh	r2, [r4, #2]	@ movhi
 304:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 116              		.loc 1 304 0
 117 005c 0B22     		movs	r2, #11
 118 005e 62F30403 		bfi	r3, r2, #0, #5
 119 0062 2370     		strb	r3, [r4]
 120 0064 38BD     		pop	{r3, r4, r5, pc}
 121              	.LVL10:
 122              	.L5:
 123              	.LBB7:
 272:lvgl\src\lv_draw/lv_img_decoder.c **** 
 124              		.loc 1 272 0
 125 0066 0020     		movs	r0, #0
 126              	.LVL11:
 127 0068 38BD     		pop	{r3, r4, r5, pc}
 128              	.LVL12:
 129              	.L6:
 130              	.LBE7:
 308:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 131              		.loc 1 308 0
 132 006a 0020     		movs	r0, #0
 133              	.LVL13:
 311:lvgl\src\lv_draw/lv_img_decoder.c **** 
 134              		.loc 1 311 0
 135 006c 38BD     		pop	{r3, r4, r5, pc}
 136              		.cfi_endproc
 137              	.LFE48:
 138              		.size	lv_img_decoder_built_in_info, .-lv_img_decoder_built_in_info
 139 006e 00BF     		.section	.text.lv_img_decoder_built_in_close,"ax",%progbits
 140              		.align	2
 141              		.global	lv_img_decoder_built_in_close
 142              		.thumb
 143              		.thumb_func
 144              		.type	lv_img_decoder_built_in_close, %function
 145              	lv_img_decoder_built_in_close:
 146              	.LFB51:
 520:lvgl\src\lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 14


 147              		.loc 1 520 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              	.LVL14:
 152 0000 38B5     		push	{r3, r4, r5, lr}
 153              		.cfi_def_cfa_offset 16
 154              		.cfi_offset 3, -16
 155              		.cfi_offset 4, -12
 156              		.cfi_offset 5, -8
 157              		.cfi_offset 14, -4
 523:lvgl\src\lv_draw/lv_img_decoder.c ****     if(user_data) {
 158              		.loc 1 523 0
 159 0002 CD69     		ldr	r5, [r1, #28]
 160              	.LVL15:
 524:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 161              		.loc 1 524 0
 162 0004 6DB1     		cbz	r5, .L8
 163 0006 0C46     		mov	r4, r1
 531:lvgl\src\lv_draw/lv_img_decoder.c ****         if(user_data->opa) lv_mem_free(user_data->opa);
 164              		.loc 1 531 0
 165 0008 2868     		ldr	r0, [r5]
 166              	.LVL16:
 167 000a 08B1     		cbz	r0, .L10
 531:lvgl\src\lv_draw/lv_img_decoder.c ****         if(user_data->opa) lv_mem_free(user_data->opa);
 168              		.loc 1 531 0 is_stmt 0 discriminator 1
 169 000c FFF7FEFF 		bl	lv_mem_free
 170              	.LVL17:
 171              	.L10:
 532:lvgl\src\lv_draw/lv_img_decoder.c **** 
 172              		.loc 1 532 0 is_stmt 1
 173 0010 6868     		ldr	r0, [r5, #4]
 174 0012 08B1     		cbz	r0, .L11
 532:lvgl\src\lv_draw/lv_img_decoder.c **** 
 175              		.loc 1 532 0 is_stmt 0 discriminator 1
 176 0014 FFF7FEFF 		bl	lv_mem_free
 177              	.LVL18:
 178              	.L11:
 534:lvgl\src\lv_draw/lv_img_decoder.c **** 
 179              		.loc 1 534 0 is_stmt 1
 180 0018 2846     		mov	r0, r5
 181 001a FFF7FEFF 		bl	lv_mem_free
 182              	.LVL19:
 536:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 183              		.loc 1 536 0
 184 001e 0023     		movs	r3, #0
 185 0020 E361     		str	r3, [r4, #28]
 186              	.LVL20:
 187              	.L8:
 188 0022 38BD     		pop	{r3, r4, r5, pc}
 189              		.cfi_endproc
 190              	.LFE51:
 191              		.size	lv_img_decoder_built_in_close, .-lv_img_decoder_built_in_close
 192              		.section	.text.lv_img_decoder_built_in_open,"ax",%progbits
 193              		.align	2
 194              		.global	lv_img_decoder_built_in_open
 195              		.thumb
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 15


 196              		.thumb_func
 197              		.type	lv_img_decoder_built_in_open, %function
 198              	lv_img_decoder_built_in_open:
 199              	.LFB49:
 320:lvgl\src\lv_draw/lv_img_decoder.c ****     /*Open the file if it's a file*/
 200              		.loc 1 320 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              	.LVL21:
 205 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 206              		.cfi_def_cfa_offset 32
 207              		.cfi_offset 3, -32
 208              		.cfi_offset 4, -28
 209              		.cfi_offset 5, -24
 210              		.cfi_offset 6, -20
 211              		.cfi_offset 7, -16
 212              		.cfi_offset 8, -12
 213              		.cfi_offset 9, -8
 214              		.cfi_offset 14, -4
 322:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 215              		.loc 1 322 0
 216 0004 8B7A     		ldrb	r3, [r1, #10]	@ zero_extendqisi2
 217 0006 012B     		cmp	r3, #1
 218 0008 00F09B80 		beq	.L32
 362:lvgl\src\lv_draw/lv_img_decoder.c ****         /*The variables should have valid data*/
 219              		.loc 1 362 0
 220 000c 23B9     		cbnz	r3, .L15
 364:lvgl\src\lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 221              		.loc 1 364 0
 222 000e 4A68     		ldr	r2, [r1, #4]
 223 0010 9268     		ldr	r2, [r2, #8]
 224 0012 002A     		cmp	r2, #0
 225 0014 00F09880 		beq	.L14
 226              	.L15:
 369:lvgl\src\lv_draw/lv_img_decoder.c ****     /*Process true color formats*/
 227              		.loc 1 369 0
 228 0018 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
 229 001a 02F01F02 		and	r2, r2, #31
 230              	.LVL22:
 371:lvgl\src\lv_draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 231              		.loc 1 371 0
 232 001e 141F     		subs	r4, r2, #4
 233 0020 E4B2     		uxtb	r4, r4
 234 0022 022C     		cmp	r4, #2
 235 0024 09D8     		bhi	.L16
 372:lvgl\src\lv_draw/lv_img_decoder.c ****             /* In case of uncompressed formats the image stored in the ROM/RAM.
 236              		.loc 1 372 0
 237 0026 23B9     		cbnz	r3, .L17
 375:lvgl\src\lv_draw/lv_img_decoder.c ****             return LV_RES_OK;
 238              		.loc 1 375 0
 239 0028 4B68     		ldr	r3, [r1, #4]
 240 002a 9B68     		ldr	r3, [r3, #8]
 241 002c 0B61     		str	r3, [r1, #16]
 376:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 242              		.loc 1 376 0
 243 002e 0123     		movs	r3, #1
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 16


 244 0030 8AE0     		b	.L14
 245              	.L17:
 380:lvgl\src\lv_draw/lv_img_decoder.c ****             return LV_RES_OK;
 246              		.loc 1 380 0
 247 0032 0023     		movs	r3, #0
 248 0034 0B61     		str	r3, [r1, #16]
 381:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 249              		.loc 1 381 0
 250 0036 0123     		movs	r3, #1
 251 0038 86E0     		b	.L14
 252              	.L16:
 253 003a 0C46     		mov	r4, r1
 254 003c 0746     		mov	r7, r0
 385:lvgl\src\lv_draw/lv_img_decoder.c ****             cf == LV_IMG_CF_INDEXED_8BIT) {
 255              		.loc 1 385 0
 256 003e D31F     		subs	r3, r2, #7
 257 0040 DBB2     		uxtb	r3, r3
 258 0042 032B     		cmp	r3, #3
 259 0044 70D8     		bhi	.L18
 260              	.LBB8:
 389:lvgl\src\lv_draw/lv_img_decoder.c ****         uint32_t palette_size = 1 << px_size;
 261              		.loc 1 389 0
 262 0046 1046     		mov	r0, r2
 263              	.LVL23:
 264 0048 FFF7FEFF 		bl	lv_img_cf_get_px_size
 265              	.LVL24:
 390:lvgl\src\lv_draw/lv_img_decoder.c **** 
 266              		.loc 1 390 0
 267 004c 4FF00108 		mov	r8, #1
 268 0050 08FA00F8 		lsl	r8, r8, r0
 269              	.LVL25:
 393:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 270              		.loc 1 393 0
 271 0054 E369     		ldr	r3, [r4, #28]
 272 0056 BBB9     		cbnz	r3, .L19
 394:lvgl\src\lv_draw/lv_img_decoder.c ****             LV_ASSERT_MEM(dsc->user_data);
 273              		.loc 1 394 0
 274 0058 0820     		movs	r0, #8
 275              	.LVL26:
 276 005a FFF7FEFF 		bl	lv_mem_alloc
 277              	.LVL27:
 278 005e E061     		str	r0, [r4, #28]
 395:lvgl\src\lv_draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 279              		.loc 1 395 0
 280 0060 FFF7FEFF 		bl	lv_debug_check_null
 281              	.LVL28:
 282 0064 28B9     		cbnz	r0, .L20
 395:lvgl\src\lv_draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 283              		.loc 1 395 0 is_stmt 0 discriminator 1
 284 0066 E269     		ldr	r2, [r4, #28]
 285 0068 0023     		movs	r3, #0
 286 006a 3948     		ldr	r0, .L35
 287 006c FFF7FEFF 		bl	lv_debug_log_error
 288              	.LVL29:
 289              	.L21:
 290 0070 FEE7     		b	.L21
 291              	.L20:
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 17


 396:lvgl\src\lv_draw/lv_img_decoder.c ****                 LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 292              		.loc 1 396 0 is_stmt 1
 293 0072 E069     		ldr	r0, [r4, #28]
 294 0074 28B9     		cbnz	r0, .L22
 398:lvgl\src\lv_draw/lv_img_decoder.c ****                 return LV_RES_INV;
 295              		.loc 1 398 0
 296 0076 2146     		mov	r1, r4
 297 0078 3846     		mov	r0, r7
 298 007a FFF7FEFF 		bl	lv_img_decoder_built_in_close
 299              	.LVL30:
 399:lvgl\src\lv_draw/lv_img_decoder.c ****             }
 300              		.loc 1 399 0
 301 007e 0023     		movs	r3, #0
 302 0080 62E0     		b	.L14
 303              	.L22:
 401:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 304              		.loc 1 401 0
 305 0082 0821     		movs	r1, #8
 306 0084 FFF7FEFF 		bl	_lv_memset_00
 307              	.LVL31:
 308              	.L19:
 404:lvgl\src\lv_draw/lv_img_decoder.c ****         user_data->palette                         = lv_mem_alloc(palette_size * sizeof(lv_color_t)
 309              		.loc 1 404 0
 310 0088 E569     		ldr	r5, [r4, #28]
 311              	.LVL32:
 405:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(user_data->palette);
 312              		.loc 1 405 0
 313 008a 4FEA4800 		lsl	r0, r8, #1
 314 008e FFF7FEFF 		bl	lv_mem_alloc
 315              	.LVL33:
 316 0092 2860     		str	r0, [r5]
 406:lvgl\src\lv_draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 317              		.loc 1 406 0
 318 0094 FFF7FEFF 		bl	lv_debug_check_null
 319              	.LVL34:
 320 0098 28B9     		cbnz	r0, .L23
 406:lvgl\src\lv_draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 321              		.loc 1 406 0 is_stmt 0 discriminator 1
 322 009a 2A68     		ldr	r2, [r5]
 323 009c 0023     		movs	r3, #0
 324 009e 2C48     		ldr	r0, .L35
 325 00a0 FFF7FEFF 		bl	lv_debug_log_error
 326              	.LVL35:
 327              	.L24:
 328 00a4 FEE7     		b	.L24
 329              	.L23:
 407:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_ASSERT_MEM(user_data->opa);
 330              		.loc 1 407 0 is_stmt 1
 331 00a6 4046     		mov	r0, r8
 332 00a8 FFF7FEFF 		bl	lv_mem_alloc
 333              	.LVL36:
 334 00ac 6860     		str	r0, [r5, #4]
 408:lvgl\src\lv_draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 335              		.loc 1 408 0
 336 00ae FFF7FEFF 		bl	lv_debug_check_null
 337              	.LVL37:
 338 00b2 28B9     		cbnz	r0, .L25
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 18


 408:lvgl\src\lv_draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 339              		.loc 1 408 0 is_stmt 0 discriminator 1
 340 00b4 6A68     		ldr	r2, [r5, #4]
 341 00b6 0023     		movs	r3, #0
 342 00b8 2548     		ldr	r0, .L35
 343 00ba FFF7FEFF 		bl	lv_debug_log_error
 344              	.LVL38:
 345              	.L26:
 346 00be FEE7     		b	.L26
 347              	.L25:
 409:lvgl\src\lv_draw/lv_img_decoder.c ****             LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 348              		.loc 1 409 0 is_stmt 1
 349 00c0 2B68     		ldr	r3, [r5]
 350 00c2 0BB1     		cbz	r3, .L27
 409:lvgl\src\lv_draw/lv_img_decoder.c ****             LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 351              		.loc 1 409 0 is_stmt 0 discriminator 1
 352 00c4 6B68     		ldr	r3, [r5, #4]
 353 00c6 2BB9     		cbnz	r3, .L28
 354              	.L27:
 411:lvgl\src\lv_draw/lv_img_decoder.c ****             return LV_RES_INV;
 355              		.loc 1 411 0 is_stmt 1
 356 00c8 2146     		mov	r1, r4
 357 00ca 3846     		mov	r0, r7
 358 00cc FFF7FEFF 		bl	lv_img_decoder_built_in_close
 359              	.LVL39:
 412:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 360              		.loc 1 412 0
 361 00d0 0023     		movs	r3, #0
 362 00d2 39E0     		b	.L14
 363              	.L28:
 415:lvgl\src\lv_draw/lv_img_decoder.c ****             /*Read the palette from file*/
 364              		.loc 1 415 0
 365 00d4 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 366 00d6 012B     		cmp	r3, #1
 367 00d8 35D0     		beq	.L33
 368              	.LBB9:
 433:lvgl\src\lv_draw/lv_img_decoder.c **** 
 369              		.loc 1 433 0
 370 00da 6368     		ldr	r3, [r4, #4]
 371 00dc D3F808C0 		ldr	ip, [r3, #8]
 372              	.LVL40:
 437:lvgl\src\lv_draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 373              		.loc 1 437 0
 374 00e0 0023     		movs	r3, #0
 375 00e2 1BE0     		b	.L29
 376              	.LVL41:
 377              	.L30:
 438:lvgl\src\lv_draw/lv_img_decoder.c ****                 user_data->opa[i]     = palette_p[i].ch.alpha;
 378              		.loc 1 438 0 discriminator 3
 379 00e4 2968     		ldr	r1, [r5]
 380 00e6 0CEB8300 		add	r0, ip, r3, lsl #2
 381 00ea 90F802E0 		ldrb	lr, [r0, #2]	@ zero_extendqisi2
 382 00ee 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 383 00f0 1CF82370 		ldrb	r7, [ip, r3, lsl #2]	@ zero_extendqisi2
 384              	.LVL42:
 385              	.LBB10:
 386              	.LBB11:
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 19


 387              		.file 2 "lvgl\\src\\lv_draw\\../lv_misc/lv_color.h"
   1:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /**
   2:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @file lv_color.h
   3:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *
   4:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  */
   5:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
   6:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
   9:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl\src\lv_draw\../lv_misc/lv_color.h **** extern "C" {
  11:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
  12:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
  13:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /*********************
  14:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *      INCLUDES
  15:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *********************/
  16:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #include "lv_math.h"
  18:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
  19:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /*Error checking*/
  20:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  21:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #error "LV_COLOR_DEPTH  24 is deprecated. Use LV_COLOR_DEPTH  32 instead (lv_conf.h)"
  22:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
  23:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
  24:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  25:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  26:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
  27:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
  28:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  29:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  30:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
  31:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
  32:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #include <stdint.h>
  33:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
  34:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /*********************
  35:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *      DEFINES
  36:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *********************/
  37:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_WHITE LV_COLOR_MAKE(0xFF, 0xFF, 0xFF)
  38:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_SILVER LV_COLOR_MAKE(0xC0, 0xC0, 0xC0)
  39:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_GRAY LV_COLOR_MAKE(0x80, 0x80, 0x80)
  40:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_BLACK LV_COLOR_MAKE(0x00, 0x00, 0x00)
  41:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_RED LV_COLOR_MAKE(0xFF, 0x00, 0x00)
  42:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_MAROON LV_COLOR_MAKE(0x80, 0x00, 0x00)
  43:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_YELLOW LV_COLOR_MAKE(0xFF, 0xFF, 0x00)
  44:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_OLIVE LV_COLOR_MAKE(0x80, 0x80, 0x00)
  45:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_LIME LV_COLOR_MAKE(0x00, 0xFF, 0x00)
  46:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_GREEN LV_COLOR_MAKE(0x00, 0x80, 0x00)
  47:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_CYAN LV_COLOR_MAKE(0x00, 0xFF, 0xFF)
  48:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_AQUA LV_COLOR_CYAN
  49:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_TEAL LV_COLOR_MAKE(0x00, 0x80, 0x80)
  50:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_BLUE LV_COLOR_MAKE(0x00, 0x00, 0xFF)
  51:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_NAVY LV_COLOR_MAKE(0x00, 0x00, 0x80)
  52:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_MAGENTA LV_COLOR_MAKE(0xFF, 0x00, 0xFF)
  53:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_PURPLE LV_COLOR_MAKE(0x80, 0x00, 0x80)
  54:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_ORANGE LV_COLOR_MAKE(0xFF, 0xA5, 0x00)
  55:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
  56:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /**
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 20


  57:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * Opacity percentages.
  58:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  */
  59:lvgl\src\lv_draw\../lv_misc/lv_color.h **** enum {
  60:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  61:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_OPA_0      = 0,
  62:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_OPA_10     = 25,
  63:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_OPA_20     = 51,
  64:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_OPA_30     = 76,
  65:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_OPA_40     = 102,
  66:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_OPA_50     = 127,
  67:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_OPA_60     = 153,
  68:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_OPA_70     = 178,
  69:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_OPA_80     = 204,
  70:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_OPA_90     = 229,
  71:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_OPA_100    = 255,
  72:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_OPA_COVER  = 255,
  73:lvgl\src\lv_draw\../lv_misc/lv_color.h **** };
  74:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
  75:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  76:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  77:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
  78:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  79:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 8
  80:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  81:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 8
  82:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  83:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 16
  84:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  85:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_SIZE 32
  86:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #else
  87:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  88:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
  89:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
  90:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
  91:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /* Adjust color mix functions rounding.
  92:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  93:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * Should be in range of 0..254
  94:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  95:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * 64: round up from x.75
  96:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * 128: round up from half
  97:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * 192: round up from x.25
  98:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * 254: round up */
  99:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
 100:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 32
 101:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
 102:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #else
 103:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
 104:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 105:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 106:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 107:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /*---------------------------------------
 108:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * Macros for all existing  color depths
 109:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * to set/get values of the color channels
 110:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *------------------------------------------*/
 111:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1);
 112:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1);
 113:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1);
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 21


 114:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v)
 115:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 116:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 117:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 118:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 119:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 1
 120:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 121:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)(v) & 0x7U;
 122:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)(v) & 0x7U;
 123:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)(v) & 0x3U;
 124:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 125:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 126:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 127:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 128:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 129:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 130:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 131:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)(v) & 0x1FU;
 132:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)(v) & 0x3FU;
 133:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_G16_SWAP(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l 
 134:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)(v) & 0x1FU;
 135:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 136:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 137:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 138:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 139:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_G16_SWAP(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 140:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 141:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 142:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 143:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint32_t)((v) & 0xFF);
 144:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint32_t)((v) & 0xFF);
 145:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint32_t)((v) & 0xFF);
 146:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint32_t)((v) & 0xFF);
 147:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 148:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 149:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 150:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 151:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 152:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 153:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 154:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /*---------------------------------------
 155:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * Macros for the current color depth
 156:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * to set/get values of the color channels
 157:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *------------------------------------------*/
 158:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 159:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R1(c,v)
 160:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G1(c,v)
 161:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B1(c,v)
 162:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A1(c,v)
 163:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 164:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R1(c)
 165:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G1(c)
 166:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B1(c)
 167:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A1(c)
 168:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 169:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 170:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R8(c,v)
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 22


 171:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G8(c,v)
 172:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B8(c,v)
 173:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A8(c,v)
 174:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 175:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R8(c)
 176:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G8(c)
 177:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B8(c)
 178:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A8(c)
 179:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 180:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 181:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R16(c,v)
 182:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # if LV_COLOR_16_SWAP == 0
 183:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #   define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G16(c,v)
 184:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # else
 185:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #   define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G16_SWAP(c,v)
 186:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # endif
 187:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B16(c,v)
 188:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A16(c,v)
 189:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 190:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R16(c)
 191:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # if LV_COLOR_16_SWAP == 0
 192:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #   define LV_COLOR_GET_G(c) LV_COLOR_GET_G16(c)
 193:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # else
 194:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #   define LV_COLOR_GET_G(c) LV_COLOR_GET_G16_SWAP(c)
 195:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # endif
 196:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c)   LV_COLOR_GET_B16(c)
 197:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c)   LV_COLOR_GET_A16(c)
 198:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 199:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 200:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_R(c, v) LV_COLOR_SET_R32(c,v)
 201:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_G(c, v) LV_COLOR_SET_G32(c,v)
 202:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_B(c, v) LV_COLOR_SET_B32(c,v)
 203:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_SET_A(c, v) LV_COLOR_SET_A32(c,v)
 204:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 205:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_R(c) LV_COLOR_GET_R32(c)
 206:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_G(c) LV_COLOR_GET_G32(c)
 207:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_B(c) LV_COLOR_GET_B32(c)
 208:lvgl\src\lv_draw\../lv_misc/lv_color.h **** # define LV_COLOR_GET_A(c) LV_COLOR_GET_A32(c)
 209:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 210:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 211:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /**********************
 212:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *      TYPEDEFS
 213:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  **********************/
 214:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 215:lvgl\src\lv_draw\../lv_misc/lv_color.h **** typedef union {
 216:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list */
 217:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     union {
 218:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint8_t blue : 1;
 219:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint8_t green : 1;
 220:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint8_t red : 1;
 221:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     } ch;
 222:lvgl\src\lv_draw\../lv_misc/lv_color.h **** } lv_color1_t;
 223:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 224:lvgl\src\lv_draw\../lv_misc/lv_color.h **** typedef union {
 225:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     struct {
 226:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint8_t blue : 2;
 227:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint8_t green : 3;
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 23


 228:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint8_t red : 3;
 229:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     } ch;
 230:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     uint8_t full;
 231:lvgl\src\lv_draw\../lv_misc/lv_color.h **** } lv_color8_t;
 232:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 233:lvgl\src\lv_draw\../lv_misc/lv_color.h **** typedef union {
 234:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     struct {
 235:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 236:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint16_t blue : 5;
 237:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint16_t green : 6;
 238:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint16_t red : 5;
 239:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #else
 240:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint16_t green_h : 3;
 241:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint16_t red : 5;
 242:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint16_t blue : 5;
 243:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint16_t green_l : 3;
 244:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 245:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     } ch;
 246:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     uint16_t full;
 247:lvgl\src\lv_draw\../lv_misc/lv_color.h **** } lv_color16_t;
 248:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 249:lvgl\src\lv_draw\../lv_misc/lv_color.h **** typedef union {
 250:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     struct {
 251:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint8_t blue;
 252:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint8_t green;
 253:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint8_t red;
 254:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         uint8_t alpha;
 255:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     } ch;
 256:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     uint32_t full;
 257:lvgl\src\lv_draw\../lv_misc/lv_color.h **** } lv_color32_t;
 258:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 259:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 260:lvgl\src\lv_draw\../lv_misc/lv_color.h **** typedef uint8_t lv_color_int_t;
 261:lvgl\src\lv_draw\../lv_misc/lv_color.h **** typedef lv_color1_t lv_color_t;
 262:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {0x00}
 263:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 264:lvgl\src\lv_draw\../lv_misc/lv_color.h **** typedef uint8_t lv_color_int_t;
 265:lvgl\src\lv_draw\../lv_misc/lv_color.h **** typedef lv_color8_t lv_color_t;
 266:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00}}
 267:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 268:lvgl\src\lv_draw\../lv_misc/lv_color.h **** typedef uint16_t lv_color_int_t;
 269:lvgl\src\lv_draw\../lv_misc/lv_color.h **** typedef lv_color16_t lv_color_t;
 270:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00}}
 271:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 272:lvgl\src\lv_draw\../lv_misc/lv_color.h **** typedef uint32_t lv_color_int_t;
 273:lvgl\src\lv_draw\../lv_misc/lv_color.h **** typedef lv_color32_t lv_color_t;
 274:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER {{0x00, 0x00, 0x00, 0x00}}
 275:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #else
 276:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
 277:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 278:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 279:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 280:lvgl\src\lv_draw\../lv_misc/lv_color.h **** typedef struct {
 281:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     uint16_t h;
 282:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     uint8_t s;
 283:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     uint8_t v;
 284:lvgl\src\lv_draw\../lv_misc/lv_color.h **** } lv_color_hsv_t;
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 24


 285:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 286:lvgl\src\lv_draw\../lv_misc/lv_color.h **** //! @cond Doxygen_Suppress
 287:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 288:lvgl\src\lv_draw\../lv_misc/lv_color.h **** typedef uint8_t lv_opa_t;
 289:lvgl\src\lv_draw\../lv_misc/lv_color.h **** //! @endcond
 290:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 291:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /**********************
 292:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * GLOBAL PROTOTYPES
 293:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  **********************/
 294:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 295:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /*In color conversations:
 296:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 297:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 298:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *         8 bit Red has 2 bits
 299:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *        ----------------------
 300:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^2 - 1) = 31 / 3 = 10
 301:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *
 302:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 303:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *   E.g.  8 bit Red has 2 bits
 304:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *        16 bit Red has 5 bits
 305:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *        ----------------------
 306:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 307:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  */
 308:lvgl\src\lv_draw\../lv_misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 309:lvgl\src\lv_draw\../lv_misc/lv_color.h **** {
 310:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 311:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     return color.full;
 312:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 313:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 314:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         return 1;
 315:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     }
 316:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     else {
 317:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         return 0;
 318:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     }
 319:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 320:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 321:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         return 1;
 322:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     }
 323:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     else {
 324:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         return 0;
 325:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     }
 326:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 327:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 328:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         return 1;
 329:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     }
 330:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     else {
 331:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         return 0;
 332:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     }
 333:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 334:lvgl\src\lv_draw\../lv_misc/lv_color.h **** }
 335:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 336:lvgl\src\lv_draw\../lv_misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 337:lvgl\src\lv_draw\../lv_misc/lv_color.h **** {
 338:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 339:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     if(color.full == 0)
 340:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         return 0;
 341:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     else
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 25


 342:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         return 0xFF;
 343:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 344:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     return color.full;
 345:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 346:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     lv_color8_t ret;
 347:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2);   /* 5 - 3  = 2*/
 348:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /* 6 - 3  = 3*/
 349:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3);  /* 5 - 2  = 3*/
 350:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     return ret.full;
 351:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 352:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     lv_color8_t ret;
 353:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5);   /* 8 - 3  = 5*/
 354:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /* 8 - 3  = 5*/
 355:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6);  /* 8 - 2  = 6*/
 356:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     return ret.full;
 357:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 358:lvgl\src\lv_draw\../lv_misc/lv_color.h **** }
 359:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 360:lvgl\src\lv_draw\../lv_misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 361:lvgl\src\lv_draw\../lv_misc/lv_color.h **** {
 362:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 363:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     if(color.full == 0)
 364:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         return 0;
 365:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     else
 366:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         return 0xFFFF;
 367:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 368:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     lv_color16_t ret;
 369:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);     /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 370:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 371:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_G16(ret,  LV_COLOR_GET_G(color) * 9); /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 372:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #else
 373:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_G16_SWAP(ret, (LV_COLOR_GET_G(color) * 9)); /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 374:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 375:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10);  /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 376:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     return ret.full;
 377:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 378:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     return color.full;
 379:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 380:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     lv_color16_t ret;
 381:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3);   /* 8 - 5  = 3*/
 382:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 383:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 384:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /* 8 - 6  = 2*/
 385:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #else
 386:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_G16_SWAP(ret, ret.ch.green_h = (LV_COLOR_GET_G(color) >> 2); /*(2^6 - 1)/(2^3 - 1)
 387:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 388:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3);  /* 8 - 5  = 3*/
 389:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     return ret.full;
 390:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 391:lvgl\src\lv_draw\../lv_misc/lv_color.h **** }
 392:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 393:lvgl\src\lv_draw\../lv_misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 394:lvgl\src\lv_draw\../lv_misc/lv_color.h **** {
 395:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 396:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     if(color.full == 0)
 397:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         return 0xFF000000;
 398:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     else
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 26


 399:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         return 0xFFFFFFFF;
 400:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 401:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     lv_color32_t ret;
 402:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36);     /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 403:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 404:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85);   /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 405:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 406:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     return ret.full;
 407:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 408:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     /**
 409:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      * The floating point math for conversion is:
 410:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 411:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      * The faster integer math for conversion is:
 412:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 413:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 414:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *
 415:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 416:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *
 417:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 418:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 419:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *       0           8      7        7       255
 420:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *       1          16     14        7       255
 421:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *       2          32     28        7       255
 422:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *       3          65     25        3       255
 423:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *       4         131     19        1       255
 424:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *       5         263      7        0       255
 425:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *
 426:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 427:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 428:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *       0           4      3        3       255
 429:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *       1           8      6        3       255
 430:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *       2          16     12        3       255
 431:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *       3          32     24        3       255
 432:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *       4          64     48        3       255
 433:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *       5         129     33        1       255
 434:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      *       6         259      3        0       255
 435:lvgl\src\lv_draw\../lv_misc/lv_color.h ****      */
 436:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 437:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     lv_color32_t ret;
 438:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 439:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 440:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 441:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 442:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     return ret.full;
 443:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 444:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     return color.full;
 445:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 446:lvgl\src\lv_draw\../lv_misc/lv_color.h **** }
 447:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 448:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 449:lvgl\src\lv_draw\../lv_misc/lv_color.h **** //! @cond Doxygen_Suppress
 450:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 451:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /**
 452:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * Mix two colors with a given ratio.
 453:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 454:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 455:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 27


 456:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @return the mixed color
 457:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  */
 458:lvgl\src\lv_draw\../lv_misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 459:lvgl\src\lv_draw\../lv_misc/lv_color.h **** {
 460:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     lv_color_t ret;
 461:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 462:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 463:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_MATH_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 464:lvgl\src\lv_draw\../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 465:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_MATH_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 466:lvgl\src\lv_draw\../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 467:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_MATH_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 468:lvgl\src\lv_draw\../lv_misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 469:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 470:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #else
 471:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 472:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 473:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 474:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 475:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     return ret;
 476:lvgl\src\lv_draw\../lv_misc/lv_color.h **** }
 477:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 478:lvgl\src\lv_draw\../lv_misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 479:lvgl\src\lv_draw\../lv_misc/lv_color.h **** {
 480:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 481:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 482:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 483:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 484:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #else
 485:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     (void) mix;
 486:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 487:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 488:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 489:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 490:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 491:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 492:lvgl\src\lv_draw\../lv_misc/lv_color.h **** }
 493:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 494:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 495:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /**
 496:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 497:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @param c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 498:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 499:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half `c2`.
 500:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 501:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @return the mixed color
 502:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 503:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  */
 504:lvgl\src\lv_draw\../lv_misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 505:lvgl\src\lv_draw\../lv_misc/lv_color.h **** {
 506:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     lv_color_t ret;
 507:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 508:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 509:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_MATH_UDIV255((uint16_t) premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_CO
 510:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_MATH_UDIV255((uint16_t) premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_CO
 511:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_MATH_UDIV255((uint16_t) premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_CO
 512:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 28


 513:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #else
 514:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 515:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     /*Restore color1*/
 516:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     lv_color_t c1;
 517:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 518:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 519:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 520:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 521:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 522:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 523:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     return ret;
 524:lvgl\src\lv_draw\../lv_misc/lv_color.h **** }
 525:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 526:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 527:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /**
 528:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * Mix two colors. Both color can have alpha value. It requires ARGB888 colors.
 529:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @param bg_color background color
 530:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @param bg_opa alpha of the background color
 531:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @param fg_color foreground color
 532:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 533:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @param res_color the result color
 534:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @param res_opa the result opacity
 535:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  */
 536:lvgl\src\lv_draw\../lv_misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 537:lvgl\src\lv_draw\../lv_misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 538:lvgl\src\lv_draw\../lv_misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 539:lvgl\src\lv_draw\../lv_misc/lv_color.h **** {
 540:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     /* Pick the foreground if it's fully opaque or the Background is fully transparent*/
 541:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 542:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         res_color->full = fg_color.full;
 543:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         *res_opa = fg_opa;
 544:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     }
 545:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 546:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 547:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         res_color->full = bg_color.full;
 548:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         *res_opa = bg_opa;
 549:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     }
 550:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     /*Opaque background: use simple mix*/
 551:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 552:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 553:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 554:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     }
 555:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 556:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     else {
 557:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 558:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 559:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 560:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 561:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 562:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 563:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 564:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 565:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 566:lvgl\src\lv_draw\../lv_misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 567:lvgl\src\lv_draw\../lv_misc/lv_color.h ****             fg_opa_save        = fg_opa;
 568:lvgl\src\lv_draw\../lv_misc/lv_color.h ****             bg_opa_save        = bg_opa;
 569:lvgl\src\lv_draw\../lv_misc/lv_color.h ****             fg_color_save.full = fg_color.full;
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 29


 570:lvgl\src\lv_draw\../lv_misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 571:lvgl\src\lv_draw\../lv_misc/lv_color.h ****             /*Info:
 572:lvgl\src\lv_draw\../lv_misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 573:lvgl\src\lv_draw\../lv_misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 574:lvgl\src\lv_draw\../lv_misc/lv_color.h ****             if(res_opa_saved == 0) {
 575:lvgl\src\lv_draw\../lv_misc/lv_color.h ****                 while(1)
 576:lvgl\src\lv_draw\../lv_misc/lv_color.h ****                     ;
 577:lvgl\src\lv_draw\../lv_misc/lv_color.h ****             }
 578:lvgl\src\lv_draw\../lv_misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 579:lvgl\src\lv_draw\../lv_misc/lv_color.h ****             res_color_saved  = lv_color_mix(fg_color, bg_color, ratio);
 580:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 581:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         }
 582:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 583:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         res_color->full = res_color_saved.full;
 584:lvgl\src\lv_draw\../lv_misc/lv_color.h ****         *res_opa = res_opa_saved;
 585:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     }
 586:lvgl\src\lv_draw\../lv_misc/lv_color.h **** }
 587:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 588:lvgl\src\lv_draw\../lv_misc/lv_color.h **** //! @endcond
 589:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 590:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /**
 591:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * Get the brightness of a color
 592:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @param color a color
 593:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  * @return the brightness [0..255]
 594:lvgl\src\lv_draw\../lv_misc/lv_color.h ****  */
 595:lvgl\src\lv_draw\../lv_misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 596:lvgl\src\lv_draw\../lv_misc/lv_color.h **** {
 597:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     lv_color32_t c32;
 598:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 599:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 600:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 601:lvgl\src\lv_draw\../lv_misc/lv_color.h **** }
 602:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 603:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
 604:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /**
 605:lvgl\src\lv_draw\../lv_misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
 606:lvgl\src\lv_draw\../lv_misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
 607:lvgl\src\lv_draw\../lv_misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
 608:lvgl\src\lv_draw\../lv_misc/lv_color.h **** */
 609:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #ifdef _MSC_VER
 610:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if _MSC_VER >= 1900 /* Visual Studio 2015 */
 611:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 612:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 613:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #else
 614:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if __cplusplus >= 201103L
 615:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 616:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 617:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 618:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif /* __cplusplus */
 619:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 620:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
 621:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
 622:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 623:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 624:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
 625:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /* Fix msvc compiler error C4576 inside C++ code */
 626:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 30


 627:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #else
 628:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 629:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 630:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 631:lvgl\src\lv_draw\../lv_misc/lv_color.h **** /* The most simple macro to create a color from R,G and B values */
 632:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 633:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) (_LV_COLOR_MAKE_TYPE_HELPER{(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8
 634:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 635:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) (_LV_COLOR_MAKE_TYPE_HELPER{{(uint8_t)((b8 >> 6) & 0x3U), (uint8_
 636:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 637:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 638:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) (_LV_COLOR_MAKE_TYPE_HELPER{{(uint16_t)((b8 >> 3) & 0x1FU), (uint
 639:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #else
 640:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) (_LV_COLOR_MAKE_TYPE_HELPER{{(uint16_t)((g8 >> 5) & 0x7U), (uint1
 641:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 642:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 643:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) (_LV_COLOR_MAKE_TYPE_HELPER{{b8, g8, r8, 0xff}}) /*Fix 0xff alpha
 644:lvgl\src\lv_draw\../lv_misc/lv_color.h **** #endif
 645:lvgl\src\lv_draw\../lv_misc/lv_color.h **** 
 646:lvgl\src\lv_draw\../lv_misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 647:lvgl\src\lv_draw\../lv_misc/lv_color.h **** {
 648:lvgl\src\lv_draw\../lv_misc/lv_color.h ****     return LV_COLOR_MAKE(r, g, b);
 388              		.loc 2 648 0 discriminator 3
 389 00f4 4FEA5219 		lsr	r9, r2, #5
 390 00f8 69F30206 		bfi	r6, r9, #0, #3
 391 00fc 4FEADE0E 		lsr	lr, lr, #3
 392              	.LVL43:
 393 0100 6EF3C706 		bfi	r6, lr, #3, #5
 394 0104 FF08     		lsrs	r7, r7, #3
 395              	.LVL44:
 396 0106 67F30C26 		bfi	r6, r7, #8, #5
 397 010a 9208     		lsrs	r2, r2, #2
 398              	.LVL45:
 399 010c 62F34F36 		bfi	r6, r2, #13, #3
 400              	.LVL46:
 401              	.LBE11:
 402              	.LBE10:
 438:lvgl\src\lv_draw/lv_img_decoder.c ****                 user_data->opa[i]     = palette_p[i].ch.alpha;
 403              		.loc 1 438 0 discriminator 3
 404 0110 21F81360 		strh	r6, [r1, r3, lsl #1]	@ movhi
 439:lvgl\src\lv_draw/lv_img_decoder.c ****             }
 405              		.loc 1 439 0 discriminator 3
 406 0114 6A68     		ldr	r2, [r5, #4]
 407 0116 C178     		ldrb	r1, [r0, #3]	@ zero_extendqisi2
 408 0118 D154     		strb	r1, [r2, r3]
 437:lvgl\src\lv_draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 409              		.loc 1 437 0 discriminator 3
 410 011a 0133     		adds	r3, r3, #1
 411              	.LVL47:
 412              	.L29:
 437:lvgl\src\lv_draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 413              		.loc 1 437 0 is_stmt 0 discriminator 1
 414 011c 4345     		cmp	r3, r8
 415 011e E1D3     		bcc	.L30
 416              	.LBE9:
 443:lvgl\src\lv_draw/lv_img_decoder.c ****         return LV_RES_OK;
 417              		.loc 1 443 0 is_stmt 1
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 31


 418 0120 0023     		movs	r3, #0
 419              	.LVL48:
 420 0122 2361     		str	r3, [r4, #16]
 444:lvgl\src\lv_draw/lv_img_decoder.c **** #else
 421              		.loc 1 444 0
 422 0124 0123     		movs	r3, #1
 423 0126 0FE0     		b	.L14
 424              	.LVL49:
 425              	.L18:
 426              	.LBE8:
 451:lvgl\src\lv_draw/lv_img_decoder.c ****             cf == LV_IMG_CF_ALPHA_8BIT) {
 427              		.loc 1 451 0
 428 0128 A2F10B03 		sub	r3, r2, #11
 429 012c DBB2     		uxtb	r3, r3
 430 012e 032B     		cmp	r3, #3
 431 0130 03D8     		bhi	.L31
 454:lvgl\src\lv_draw/lv_img_decoder.c ****         return LV_RES_OK; /*Nothing to process*/
 432              		.loc 1 454 0
 433 0132 0023     		movs	r3, #0
 434 0134 0B61     		str	r3, [r1, #16]
 455:lvgl\src\lv_draw/lv_img_decoder.c **** #else
 435              		.loc 1 455 0
 436 0136 0123     		movs	r3, #1
 437 0138 06E0     		b	.L14
 438              	.L31:
 464:lvgl\src\lv_draw/lv_img_decoder.c **** 
 439              		.loc 1 464 0
 440 013a FFF7FEFF 		bl	lv_img_decoder_built_in_close
 441              	.LVL50:
 467:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 442              		.loc 1 467 0
 443 013e 0023     		movs	r3, #0
 444 0140 02E0     		b	.L14
 445              	.LVL51:
 446              	.L32:
 359:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 447              		.loc 1 359 0
 448 0142 0023     		movs	r3, #0
 449 0144 00E0     		b	.L14
 450              	.LVL52:
 451              	.L33:
 452              	.LBB12:
 428:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 453              		.loc 1 428 0
 454 0146 0023     		movs	r3, #0
 455              	.LVL53:
 456              	.L14:
 457              	.LBE12:
 469:lvgl\src\lv_draw/lv_img_decoder.c **** 
 458              		.loc 1 469 0
 459 0148 1846     		mov	r0, r3
 460 014a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 461              	.L36:
 462 014e 00BF     		.align	2
 463              	.L35:
 464 0150 00000000 		.word	.LC2
 465              		.cfi_endproc
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 32


 466              	.LFE49:
 467              		.size	lv_img_decoder_built_in_open, .-lv_img_decoder_built_in_open
 468              		.section	.text.lv_img_decoder_built_in_line_alpha,"ax",%progbits
 469              		.align	2
 470              		.thumb
 471              		.thumb_func
 472              		.type	lv_img_decoder_built_in_line_alpha, %function
 473              	lv_img_decoder_built_in_line_alpha:
 474              	.LFB53:
 579:lvgl\src\lv_draw/lv_img_decoder.c **** 
 580:lvgl\src\lv_draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_alpha(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coo
 581:lvgl\src\lv_draw/lv_img_decoder.c ****                                                    lv_coord_t len, uint8_t * buf)
 582:lvgl\src\lv_draw/lv_img_decoder.c **** {
 475              		.loc 1 582 0
 476              		.cfi_startproc
 477              		@ args = 4, pretend = 0, frame = 24
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479              	.LVL54:
 480 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 481              		.cfi_def_cfa_offset 32
 482              		.cfi_offset 4, -32
 483              		.cfi_offset 5, -28
 484              		.cfi_offset 6, -24
 485              		.cfi_offset 7, -20
 486              		.cfi_offset 8, -16
 487              		.cfi_offset 9, -12
 488              		.cfi_offset 10, -8
 489              		.cfi_offset 14, -4
 490 0004 86B0     		sub	sp, sp, #24
 491              		.cfi_def_cfa_offset 56
 492 0006 8046     		mov	r8, r0
 493 0008 0D46     		mov	r5, r1
 494 000a 9146     		mov	r9, r2
 495 000c 1F46     		mov	r7, r3
 496 000e 0E9E     		ldr	r6, [sp, #56]
 583:lvgl\src\lv_draw/lv_img_decoder.c **** 
 584:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_IMG_CF_ALPHA
 585:lvgl\src\lv_draw/lv_img_decoder.c ****     const lv_opa_t alpha1_opa_table[2]  = {0, 255};          /*Opacity mapping with bpp = 1 (Just f
 497              		.loc 1 585 0
 498 0010 0024     		movs	r4, #0
 499 0012 8DF81440 		strb	r4, [sp, #20]
 500 0016 FF23     		movs	r3, #255
 501              	.LVL55:
 502 0018 8DF81530 		strb	r3, [sp, #21]
 586:lvgl\src\lv_draw/lv_img_decoder.c ****     const lv_opa_t alpha2_opa_table[4]  = {0, 85, 170, 255}; /*Opacity mapping with bpp = 2*/
 503              		.loc 1 586 0
 504 001c 574B     		ldr	r3, .L59
 505 001e 1868     		ldr	r0, [r3]	@ unaligned
 506              	.LVL56:
 507 0020 0490     		str	r0, [sp, #16]	@ unaligned
 587:lvgl\src\lv_draw/lv_img_decoder.c ****     const lv_opa_t alpha4_opa_table[16] = {0,  17, 34,  51,  /*Opacity mapping with bpp = 4*/
 508              		.loc 1 587 0
 509 0022 EE46     		mov	lr, sp
 510 0024 53F8040F 		ldr	r0, [r3, #4]!	@ unaligned
 511 0028 5968     		ldr	r1, [r3, #4]	@ unaligned
 512              	.LVL57:
 513 002a 9A68     		ldr	r2, [r3, #8]	@ unaligned
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 33


 514              	.LVL58:
 515 002c DB68     		ldr	r3, [r3, #12]	@ unaligned
 516 002e AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 588:lvgl\src\lv_draw/lv_img_decoder.c ****                                            68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255
 589:lvgl\src\lv_draw/lv_img_decoder.c ****                                           };
 590:lvgl\src\lv_draw/lv_img_decoder.c **** 
 591:lvgl\src\lv_draw/lv_img_decoder.c ****     /*Simply fill the buffer with the color. Later only the alpha value will be modified.*/
 592:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_color_t bg_color = dsc->color;
 517              		.loc 1 592 0
 518 0032 B8F80800 		ldrh	r0, [r8, #8]
 519              	.LVL59:
 593:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_coord_t i;
 594:lvgl\src\lv_draw/lv_img_decoder.c ****     for(i = 0; i < len; i++) {
 520              		.loc 1 594 0
 521 0036 2346     		mov	r3, r4
 522 0038 08E0     		b	.L38
 523              	.LVL60:
 524              	.L39:
 595:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 596:lvgl\src\lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE] = bg_color.full;
 597:lvgl\src\lv_draw/lv_img_decoder.c **** #elif LV_COLOR_DEPTH == 16
 598:lvgl\src\lv_draw/lv_img_decoder.c ****         /*Because of Alpha byte 16 bit color can start on odd address which can cause crash*/
 599:lvgl\src\lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE] = bg_color.full & 0xFF;
 525              		.loc 1 599 0 discriminator 3
 526 003a 03EB4302 		add	r2, r3, r3, lsl #1
 527 003e 81B2     		uxth	r1, r0
 528 0040 B154     		strb	r1, [r6, r2]
 600:lvgl\src\lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + 1] = (bg_color.full >> 8) & 0xFF;
 529              		.loc 1 600 0 discriminator 3
 530 0042 0132     		adds	r2, r2, #1
 531 0044 090A     		lsrs	r1, r1, #8
 532 0046 B154     		strb	r1, [r6, r2]
 594:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 533              		.loc 1 594 0 discriminator 3
 534 0048 0133     		adds	r3, r3, #1
 535              	.LVL61:
 536 004a 1BB2     		sxth	r3, r3
 537              	.LVL62:
 538              	.L38:
 594:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 539              		.loc 1 594 0 is_stmt 0 discriminator 1
 540 004c BB42     		cmp	r3, r7
 541 004e F4DB     		blt	.L39
 542              	.LVL63:
 601:lvgl\src\lv_draw/lv_img_decoder.c **** #elif LV_COLOR_DEPTH == 32
 602:lvgl\src\lv_draw/lv_img_decoder.c ****         *((uint32_t *)&buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE]) = bg_color.full;
 603:lvgl\src\lv_draw/lv_img_decoder.c **** #else
 604:lvgl\src\lv_draw/lv_img_decoder.c **** #error "Invalid LV_COLOR_DEPTH. Check it in lv_conf.h"
 605:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 606:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 607:lvgl\src\lv_draw/lv_img_decoder.c **** 
 608:lvgl\src\lv_draw/lv_img_decoder.c ****     const lv_opa_t * opa_table = NULL;
 609:lvgl\src\lv_draw/lv_img_decoder.c ****     uint8_t px_size            = lv_img_cf_get_px_size(dsc->header.cf);
 543              		.loc 1 609 0 is_stmt 1
 544 0050 98F80C00 		ldrb	r0, [r8, #12]	@ zero_extendqisi2
 545              	.LVL64:
 546 0054 00F01F00 		and	r0, r0, #31
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 34


 547 0058 FFF7FEFF 		bl	lv_img_cf_get_px_size
 548              	.LVL65:
 610:lvgl\src\lv_draw/lv_img_decoder.c ****     uint16_t mask              = (1 << px_size) - 1; /*E.g. px_size = 2; mask = 0x03*/
 549              		.loc 1 610 0
 550 005c 4FF0010E 		mov	lr, #1
 551 0060 0EFA00FE 		lsl	lr, lr, r0
 552 0064 0EF1FF3E 		add	lr, lr, #-1
 553 0068 1FFA8EFE 		uxth	lr, lr
 554              	.LVL66:
 611:lvgl\src\lv_draw/lv_img_decoder.c **** 
 612:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_coord_t w = 0;
 613:lvgl\src\lv_draw/lv_img_decoder.c ****     uint32_t ofs = 0;
 614:lvgl\src\lv_draw/lv_img_decoder.c ****     int8_t pos   = 0;
 615:lvgl\src\lv_draw/lv_img_decoder.c ****     switch(dsc->header.cf) {
 555              		.loc 1 615 0
 556 006c 98F80C30 		ldrb	r3, [r8, #12]	@ zero_extendqisi2
 557 0070 03F01F03 		and	r3, r3, #31
 558 0074 0B3B     		subs	r3, r3, #11
 559 0076 032B     		cmp	r3, #3
 560 0078 45D8     		bhi	.L54
 561 007a DFE803F0 		tbb	[pc, r3]
 562              	.L42:
 563 007e 02       		.byte	(.L41-.L42)/2
 564 007f 14       		.byte	(.L43-.L42)/2
 565 0080 28       		.byte	(.L44-.L42)/2
 566 0081 3B       		.byte	(.L45-.L42)/2
 567              		.p2align 1
 568              	.L41:
 616:lvgl\src\lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_1BIT:
 617:lvgl\src\lv_draw/lv_img_decoder.c ****             w = (dsc->header.w >> 3); /*E.g. w = 20 -> w = 2 + 1*/
 569              		.loc 1 617 0
 570 0082 D8F80C30 		ldr	r3, [r8, #12]
 571 0086 C3F38A23 		ubfx	r3, r3, #10, #11
 572 008a D910     		asrs	r1, r3, #3
 573 008c 0AB2     		sxth	r2, r1
 574              	.LVL67:
 618:lvgl\src\lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x7) w++;
 575              		.loc 1 618 0
 576 008e 13F0070F 		tst	r3, #7
 577 0092 00D0     		beq	.L46
 578              		.loc 1 618 0 is_stmt 0 discriminator 1
 579 0094 4A1C     		adds	r2, r1, #1
 580              	.LVL68:
 581              	.L46:
 619:lvgl\src\lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 3); /*First pixel*/
 582              		.loc 1 619 0 is_stmt 1
 583 0096 EB10     		asrs	r3, r5, #3
 584 0098 09FB0239 		mla	r9, r9, r2, r3
 585              	.LVL69:
 620:lvgl\src\lv_draw/lv_img_decoder.c ****             pos       = 7 - (x & 0x7);
 586              		.loc 1 620 0
 587 009c EB43     		mvns	r3, r5
 588 009e 03F00703 		and	r3, r3, #7
 589              	.LVL70:
 621:lvgl\src\lv_draw/lv_img_decoder.c ****             opa_table = alpha1_opa_table;
 590              		.loc 1 621 0
 591 00a2 05AD     		add	r5, sp, #20
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 35


 592              	.LVL71:
 622:lvgl\src\lv_draw/lv_img_decoder.c ****             break;
 593              		.loc 1 622 0
 594 00a4 35E0     		b	.L40
 595              	.LVL72:
 596              	.L43:
 623:lvgl\src\lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_2BIT:
 624:lvgl\src\lv_draw/lv_img_decoder.c ****             w = (dsc->header.w >> 2); /*E.g. w = 13 -> w = 3 + 1 (bytes)*/
 597              		.loc 1 624 0
 598 00a6 D8F80C30 		ldr	r3, [r8, #12]
 599 00aa C3F38A23 		ubfx	r3, r3, #10, #11
 600 00ae 9910     		asrs	r1, r3, #2
 601 00b0 0AB2     		sxth	r2, r1
 602              	.LVL73:
 625:lvgl\src\lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x3) w++;
 603              		.loc 1 625 0
 604 00b2 13F0030F 		tst	r3, #3
 605 00b6 00D0     		beq	.L47
 606              		.loc 1 625 0 is_stmt 0 discriminator 1
 607 00b8 4A1C     		adds	r2, r1, #1
 608              	.LVL74:
 609              	.L47:
 626:lvgl\src\lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 610              		.loc 1 626 0 is_stmt 1
 611 00ba AB10     		asrs	r3, r5, #2
 612 00bc 09FB0239 		mla	r9, r9, r2, r3
 613              	.LVL75:
 627:lvgl\src\lv_draw/lv_img_decoder.c ****             pos       = 6 - ((x & 0x3) * 2);
 614              		.loc 1 627 0
 615 00c0 ABB2     		uxth	r3, r5
 616 00c2 DB43     		mvns	r3, r3
 617 00c4 03F00303 		and	r3, r3, #3
 618 00c8 5B00     		lsls	r3, r3, #1
 619              	.LVL76:
 628:lvgl\src\lv_draw/lv_img_decoder.c ****             opa_table = alpha2_opa_table;
 620              		.loc 1 628 0
 621 00ca 04AD     		add	r5, sp, #16
 622              	.LVL77:
 629:lvgl\src\lv_draw/lv_img_decoder.c ****             break;
 623              		.loc 1 629 0
 624 00cc 21E0     		b	.L40
 625              	.LVL78:
 626              	.L44:
 630:lvgl\src\lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_4BIT:
 631:lvgl\src\lv_draw/lv_img_decoder.c ****             w = (dsc->header.w >> 1); /*E.g. w = 13 -> w = 6 + 1 (bytes)*/
 627              		.loc 1 631 0
 628 00ce D8F80C30 		ldr	r3, [r8, #12]
 629 00d2 C3F38A23 		ubfx	r3, r3, #10, #11
 630 00d6 5910     		asrs	r1, r3, #1
 631 00d8 0AB2     		sxth	r2, r1
 632              	.LVL79:
 632:lvgl\src\lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x1) w++;
 633              		.loc 1 632 0
 634 00da 13F0010F 		tst	r3, #1
 635 00de 00D0     		beq	.L48
 636              		.loc 1 632 0 is_stmt 0 discriminator 1
 637 00e0 4A1C     		adds	r2, r1, #1
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 36


 638              	.LVL80:
 639              	.L48:
 633:lvgl\src\lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 640              		.loc 1 633 0 is_stmt 1
 641 00e2 6B10     		asrs	r3, r5, #1
 642 00e4 09FB0239 		mla	r9, r9, r2, r3
 643              	.LVL81:
 634:lvgl\src\lv_draw/lv_img_decoder.c ****             pos       = 4 - ((x & 0x1) * 4);
 644              		.loc 1 634 0
 645 00e8 15F0010F 		tst	r5, #1
 646 00ec 0FD1     		bne	.L55
 647 00ee 0423     		movs	r3, #4
 635:lvgl\src\lv_draw/lv_img_decoder.c ****             opa_table = alpha4_opa_table;
 648              		.loc 1 635 0
 649 00f0 6D46     		mov	r5, sp
 650 00f2 0EE0     		b	.L40
 651              	.LVL82:
 652              	.L45:
 636:lvgl\src\lv_draw/lv_img_decoder.c ****             break;
 637:lvgl\src\lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_8BIT:
 638:lvgl\src\lv_draw/lv_img_decoder.c ****             w = dsc->header.w; /*E.g. x = 7 -> w = 7 (bytes)*/
 653              		.loc 1 638 0
 654 00f4 D8F80C30 		ldr	r3, [r8, #12]
 655 00f8 C3F38A23 		ubfx	r3, r3, #10, #11
 656              	.LVL83:
 639:lvgl\src\lv_draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 657              		.loc 1 639 0
 658 00fc 09FB0359 		mla	r9, r9, r3, r5
 659              	.LVL84:
 640:lvgl\src\lv_draw/lv_img_decoder.c ****             pos = 0;
 660              		.loc 1 640 0
 661 0100 0023     		movs	r3, #0
 608:lvgl\src\lv_draw/lv_img_decoder.c ****     uint8_t px_size            = lv_img_cf_get_px_size(dsc->header.cf);
 662              		.loc 1 608 0
 663 0102 1D46     		mov	r5, r3
 641:lvgl\src\lv_draw/lv_img_decoder.c ****             break;
 664              		.loc 1 641 0
 665 0104 05E0     		b	.L40
 666              	.LVL85:
 667              	.L54:
 614:lvgl\src\lv_draw/lv_img_decoder.c ****     switch(dsc->header.cf) {
 668              		.loc 1 614 0
 669 0106 0023     		movs	r3, #0
 613:lvgl\src\lv_draw/lv_img_decoder.c ****     int8_t pos   = 0;
 670              		.loc 1 613 0
 671 0108 9946     		mov	r9, r3
 608:lvgl\src\lv_draw/lv_img_decoder.c ****     uint8_t px_size            = lv_img_cf_get_px_size(dsc->header.cf);
 672              		.loc 1 608 0
 673 010a 1D46     		mov	r5, r3
 674 010c 01E0     		b	.L40
 675              	.LVL86:
 676              	.L55:
 634:lvgl\src\lv_draw/lv_img_decoder.c ****             opa_table = alpha4_opa_table;
 677              		.loc 1 634 0
 678 010e 0023     		movs	r3, #0
 635:lvgl\src\lv_draw/lv_img_decoder.c ****             break;
 679              		.loc 1 635 0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 37


 680 0110 6D46     		mov	r5, sp
 681              	.LVL87:
 682              	.L40:
 642:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 643:lvgl\src\lv_draw/lv_img_decoder.c **** 
 644:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 645:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 646:lvgl\src\lv_draw/lv_img_decoder.c ****     uint8_t * fs_buf = _lv_mem_buf_get(w);
 647:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 648:lvgl\src\lv_draw/lv_img_decoder.c **** 
 649:lvgl\src\lv_draw/lv_img_decoder.c ****     const uint8_t * data_tmp = NULL;
 650:lvgl\src\lv_draw/lv_img_decoder.c ****     if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 683              		.loc 1 650 0
 684 0112 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
 685 0116 62BB     		cbnz	r2, .L56
 686              	.LBB13:
 651:lvgl\src\lv_draw/lv_img_decoder.c ****         const lv_img_dsc_t * img_dsc = dsc->src;
 687              		.loc 1 651 0
 688 0118 D8F80420 		ldr	r2, [r8, #4]
 689              	.LVL88:
 652:lvgl\src\lv_draw/lv_img_decoder.c **** 
 653:lvgl\src\lv_draw/lv_img_decoder.c ****         data_tmp = img_dsc->data + ofs;
 690              		.loc 1 653 0
 691 011c 9268     		ldr	r2, [r2, #8]
 692              	.LVL89:
 693 011e 9144     		add	r9, r9, r2
 694              	.LVL90:
 695              	.LBE13:
 654:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 655:lvgl\src\lv_draw/lv_img_decoder.c ****     else {
 656:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 657:lvgl\src\lv_draw/lv_img_decoder.c ****         lv_fs_seek(user_data->f, ofs + 4); /*+4 to skip the header*/
 658:lvgl\src\lv_draw/lv_img_decoder.c ****         lv_fs_read(user_data->f, fs_buf, w, NULL);
 659:lvgl\src\lv_draw/lv_img_decoder.c ****         data_tmp = fs_buf;
 660:lvgl\src\lv_draw/lv_img_decoder.c **** #else
 661:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Image built-in alpha line reader can't read file because LV_USE_FILESYSTEM = 0
 662:lvgl\src\lv_draw/lv_img_decoder.c ****         data_tmp = NULL; /*To avoid warnings*/
 663:lvgl\src\lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
 664:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 665:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 666:lvgl\src\lv_draw/lv_img_decoder.c **** 
 667:lvgl\src\lv_draw/lv_img_decoder.c ****     for(i = 0; i < len; i++) {
 696              		.loc 1 667 0
 697 0120 0024     		movs	r4, #0
 698 0122 22E0     		b	.L50
 699              	.LVL91:
 700              	.L53:
 701              	.LBB14:
 668:lvgl\src\lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 702              		.loc 1 668 0
 703 0124 99F80010 		ldrb	r1, [r9]	@ zero_extendqisi2
 704 0128 0EFA03F2 		lsl	r2, lr, r3
 705 012c 0A40     		ands	r2, r2, r1
 706 012e 1A41     		asrs	r2, r2, r3
 707 0130 5FFA82FA 		uxtb	r10, r2
 708              	.LVL92:
 669:lvgl\src\lv_draw/lv_img_decoder.c **** 
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 38


 670:lvgl\src\lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + LV_IMG_PX_SIZE_ALPHA_BYTE - 1] =
 709              		.loc 1 670 0
 710 0134 04EB440C 		add	ip, r4, r4, lsl #1
 711 0138 0CF1020C 		add	ip, ip, #2
 671:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 712              		.loc 1 671 0
 713 013c 98F80C10 		ldrb	r1, [r8, #12]	@ zero_extendqisi2
 714 0140 01F01F01 		and	r1, r1, #31
 670:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 715              		.loc 1 670 0
 716 0144 0E29     		cmp	r1, #14
 717 0146 02D0     		beq	.L57
 670:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 718              		.loc 1 670 0 is_stmt 0 discriminator 1
 719 0148 15F80A20 		ldrb	r2, [r5, r10]	@ zero_extendqisi2
 720 014c 00E0     		b	.L51
 721              	.L57:
 670:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 722              		.loc 1 670 0
 723 014e 5246     		mov	r2, r10
 724              	.L51:
 670:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 725              		.loc 1 670 0 discriminator 4
 726 0150 06F80C20 		strb	r2, [r6, ip]
 672:lvgl\src\lv_draw/lv_img_decoder.c **** 
 673:lvgl\src\lv_draw/lv_img_decoder.c ****         pos -= px_size;
 727              		.loc 1 673 0 is_stmt 1 discriminator 4
 728 0154 1B1A     		subs	r3, r3, r0
 729              	.LVL93:
 730 0156 5BB2     		sxtb	r3, r3
 731              	.LVL94:
 674:lvgl\src\lv_draw/lv_img_decoder.c ****         if(pos < 0) {
 732              		.loc 1 674 0 discriminator 4
 733 0158 002B     		cmp	r3, #0
 734 015a 04DA     		bge	.L52
 675:lvgl\src\lv_draw/lv_img_decoder.c ****             pos = 8 - px_size;
 735              		.loc 1 675 0
 736 015c C0F10803 		rsb	r3, r0, #8
 737              	.LVL95:
 738 0160 5BB2     		sxtb	r3, r3
 739              	.LVL96:
 676:lvgl\src\lv_draw/lv_img_decoder.c ****             data_tmp++;
 740              		.loc 1 676 0
 741 0162 09F10109 		add	r9, r9, #1
 742              	.LVL97:
 743              	.L52:
 744              	.LBE14:
 667:lvgl\src\lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 745              		.loc 1 667 0 discriminator 2
 746 0166 0134     		adds	r4, r4, #1
 747              	.LVL98:
 748 0168 24B2     		sxth	r4, r4
 749              	.LVL99:
 750              	.L50:
 667:lvgl\src\lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 751              		.loc 1 667 0 is_stmt 0 discriminator 1
 752 016a BC42     		cmp	r4, r7
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 39


 753 016c DADB     		blt	.L53
 677:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 678:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 679:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 680:lvgl\src\lv_draw/lv_img_decoder.c ****     _lv_mem_buf_release(fs_buf);
 681:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 682:lvgl\src\lv_draw/lv_img_decoder.c ****     return LV_RES_OK;
 754              		.loc 1 682 0 is_stmt 1
 755 016e 0120     		movs	r0, #1
 756              	.LVL100:
 757 0170 00E0     		b	.L49
 758              	.LVL101:
 759              	.L56:
 663:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 760              		.loc 1 663 0
 761 0172 0020     		movs	r0, #0
 762              	.LVL102:
 763              	.L49:
 683:lvgl\src\lv_draw/lv_img_decoder.c **** 
 684:lvgl\src\lv_draw/lv_img_decoder.c **** #else
 685:lvgl\src\lv_draw/lv_img_decoder.c ****     LV_LOG_WARN("Image built-in alpha line reader failed because LV_IMG_CF_ALPHA is 0 in lv_conf.h"
 686:lvgl\src\lv_draw/lv_img_decoder.c ****     return LV_RES_INV;
 687:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 688:lvgl\src\lv_draw/lv_img_decoder.c **** }
 764              		.loc 1 688 0
 765 0174 06B0     		add	sp, sp, #24
 766              		.cfi_def_cfa_offset 32
 767              		@ sp needed
 768 0176 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 769              	.LVL103:
 770              	.L60:
 771 017a 00BF     		.align	2
 772              	.L59:
 773 017c 00000000 		.word	.LANCHOR0
 774              		.cfi_endproc
 775              	.LFE53:
 776              		.size	lv_img_decoder_built_in_line_alpha, .-lv_img_decoder_built_in_line_alpha
 777              		.section	.text.lv_img_decoder_built_in_line_indexed,"ax",%progbits
 778              		.align	2
 779              		.thumb
 780              		.thumb_func
 781              		.type	lv_img_decoder_built_in_line_indexed, %function
 782              	lv_img_decoder_built_in_line_indexed:
 783              	.LFB54:
 689:lvgl\src\lv_draw/lv_img_decoder.c **** 
 690:lvgl\src\lv_draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_indexed(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_c
 691:lvgl\src\lv_draw/lv_img_decoder.c ****                                                      lv_coord_t len, uint8_t * buf)
 692:lvgl\src\lv_draw/lv_img_decoder.c **** {
 784              		.loc 1 692 0
 785              		.cfi_startproc
 786              		@ args = 4, pretend = 0, frame = 0
 787              		@ frame_needed = 0, uses_anonymous_args = 0
 788              	.LVL104:
 789 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 790              		.cfi_def_cfa_offset 32
 791              		.cfi_offset 4, -32
 792              		.cfi_offset 5, -28
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 40


 793              		.cfi_offset 6, -24
 794              		.cfi_offset 7, -20
 795              		.cfi_offset 8, -16
 796              		.cfi_offset 9, -12
 797              		.cfi_offset 10, -8
 798              		.cfi_offset 14, -4
 799 0004 0446     		mov	r4, r0
 800 0006 8846     		mov	r8, r1
 801 0008 1746     		mov	r7, r2
 802 000a 9A46     		mov	r10, r3
 803 000c 089D     		ldr	r5, [sp, #32]
 693:lvgl\src\lv_draw/lv_img_decoder.c **** 
 694:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_IMG_CF_INDEXED
 695:lvgl\src\lv_draw/lv_img_decoder.c ****     uint8_t px_size = lv_img_cf_get_px_size(dsc->header.cf);
 804              		.loc 1 695 0
 805 000e 007B     		ldrb	r0, [r0, #12]	@ zero_extendqisi2
 806              	.LVL105:
 807 0010 00F01F00 		and	r0, r0, #31
 808 0014 FFF7FEFF 		bl	lv_img_cf_get_px_size
 809              	.LVL106:
 696:lvgl\src\lv_draw/lv_img_decoder.c ****     uint16_t mask   = (1 << px_size) - 1; /*E.g. px_size = 2; mask = 0x03*/
 810              		.loc 1 696 0
 811 0018 4FF0010C 		mov	ip, #1
 812 001c 0CFA00FC 		lsl	ip, ip, r0
 813 0020 0CF1FF3C 		add	ip, ip, #-1
 814 0024 1FFA8CFC 		uxth	ip, ip
 815              	.LVL107:
 697:lvgl\src\lv_draw/lv_img_decoder.c **** 
 698:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_coord_t w = 0;
 699:lvgl\src\lv_draw/lv_img_decoder.c ****     int8_t pos   = 0;
 700:lvgl\src\lv_draw/lv_img_decoder.c ****     uint32_t ofs = 0;
 701:lvgl\src\lv_draw/lv_img_decoder.c ****     switch(dsc->header.cf) {
 816              		.loc 1 701 0
 817 0028 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 818 002a 03F01F03 		and	r3, r3, #31
 819 002e 073B     		subs	r3, r3, #7
 820 0030 032B     		cmp	r3, #3
 821 0032 47D8     		bhi	.L75
 822 0034 DFE803F0 		tbb	[pc, r3]
 823              	.L64:
 824 0038 02       		.byte	(.L63-.L64)/2
 825 0039 15       		.byte	(.L65-.L64)/2
 826 003a 2A       		.byte	(.L66-.L64)/2
 827 003b 3D       		.byte	(.L67-.L64)/2
 828              		.p2align 1
 829              	.L63:
 702:lvgl\src\lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_1BIT:
 703:lvgl\src\lv_draw/lv_img_decoder.c ****             w = (dsc->header.w >> 3); /*E.g. w = 20 -> w = 2 + 1*/
 830              		.loc 1 703 0
 831 003c E368     		ldr	r3, [r4, #12]
 832 003e C3F38A23 		ubfx	r3, r3, #10, #11
 833 0042 D910     		asrs	r1, r3, #3
 834 0044 0AB2     		sxth	r2, r1
 835              	.LVL108:
 704:lvgl\src\lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x7) w++;
 836              		.loc 1 704 0
 837 0046 13F0070F 		tst	r3, #7
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 41


 838 004a 00D0     		beq	.L68
 839              		.loc 1 704 0 is_stmt 0 discriminator 1
 840 004c 4A1C     		adds	r2, r1, #1
 841              	.LVL109:
 842              	.L68:
 705:lvgl\src\lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 3); /*First pixel*/
 843              		.loc 1 705 0 is_stmt 1
 844 004e 4FEAE803 		asr	r3, r8, #3
 845 0052 07FB0237 		mla	r7, r7, r2, r3
 846              	.LVL110:
 706:lvgl\src\lv_draw/lv_img_decoder.c ****             ofs += 8;                /*Skip the palette*/
 847              		.loc 1 706 0
 848 0056 0837     		adds	r7, r7, #8
 849              	.LVL111:
 707:lvgl\src\lv_draw/lv_img_decoder.c ****             pos = 7 - (x & 0x7);
 850              		.loc 1 707 0
 851 0058 6FEA0802 		mvn	r2, r8
 852              	.LVL112:
 853 005c 02F00702 		and	r2, r2, #7
 854              	.LVL113:
 708:lvgl\src\lv_draw/lv_img_decoder.c ****             break;
 855              		.loc 1 708 0
 856 0060 34E0     		b	.L62
 857              	.LVL114:
 858              	.L65:
 709:lvgl\src\lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_2BIT:
 710:lvgl\src\lv_draw/lv_img_decoder.c ****             w = (dsc->header.w >> 2); /*E.g. w = 13 -> w = 3 + 1 (bytes)*/
 859              		.loc 1 710 0
 860 0062 E368     		ldr	r3, [r4, #12]
 861 0064 C3F38A23 		ubfx	r3, r3, #10, #11
 862 0068 9910     		asrs	r1, r3, #2
 863 006a 0AB2     		sxth	r2, r1
 864              	.LVL115:
 711:lvgl\src\lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x3) w++;
 865              		.loc 1 711 0
 866 006c 13F0030F 		tst	r3, #3
 867 0070 00D0     		beq	.L69
 868              		.loc 1 711 0 is_stmt 0 discriminator 1
 869 0072 4A1C     		adds	r2, r1, #1
 870              	.LVL116:
 871              	.L69:
 712:lvgl\src\lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 872              		.loc 1 712 0 is_stmt 1
 873 0074 4FEAA803 		asr	r3, r8, #2
 874 0078 07FB0237 		mla	r7, r7, r2, r3
 875              	.LVL117:
 713:lvgl\src\lv_draw/lv_img_decoder.c ****             ofs += 16;               /*Skip the palette*/
 876              		.loc 1 713 0
 877 007c 1037     		adds	r7, r7, #16
 878              	.LVL118:
 714:lvgl\src\lv_draw/lv_img_decoder.c ****             pos = 6 - ((x & 0x3) * 2);
 879              		.loc 1 714 0
 880 007e 1FFA88F2 		uxth	r2, r8
 881              	.LVL119:
 882 0082 D243     		mvns	r2, r2
 883 0084 02F00302 		and	r2, r2, #3
 884 0088 5200     		lsls	r2, r2, #1
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 42


 885              	.LVL120:
 715:lvgl\src\lv_draw/lv_img_decoder.c ****             break;
 886              		.loc 1 715 0
 887 008a 1FE0     		b	.L62
 888              	.LVL121:
 889              	.L66:
 716:lvgl\src\lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_4BIT:
 717:lvgl\src\lv_draw/lv_img_decoder.c ****             w = (dsc->header.w >> 1); /*E.g. w = 13 -> w = 6 + 1 (bytes)*/
 890              		.loc 1 717 0
 891 008c E368     		ldr	r3, [r4, #12]
 892 008e C3F38A23 		ubfx	r3, r3, #10, #11
 893 0092 5910     		asrs	r1, r3, #1
 894 0094 0AB2     		sxth	r2, r1
 895              	.LVL122:
 718:lvgl\src\lv_draw/lv_img_decoder.c ****             if(dsc->header.w & 0x1) w++;
 896              		.loc 1 718 0
 897 0096 13F0010F 		tst	r3, #1
 898 009a 00D0     		beq	.L70
 899              		.loc 1 718 0 is_stmt 0 discriminator 1
 900 009c 4A1C     		adds	r2, r1, #1
 901              	.LVL123:
 902              	.L70:
 719:lvgl\src\lv_draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 903              		.loc 1 719 0 is_stmt 1
 904 009e 4FEA6803 		asr	r3, r8, #1
 905 00a2 07FB0237 		mla	r7, r7, r2, r3
 906              	.LVL124:
 720:lvgl\src\lv_draw/lv_img_decoder.c ****             ofs += 64;               /*Skip the palette*/
 907              		.loc 1 720 0
 908 00a6 4037     		adds	r7, r7, #64
 909              	.LVL125:
 721:lvgl\src\lv_draw/lv_img_decoder.c ****             pos = 4 - ((x & 0x1) * 4);
 910              		.loc 1 721 0
 911 00a8 18F0010F 		tst	r8, #1
 912 00ac 0DD1     		bne	.L76
 913 00ae 0422     		movs	r2, #4
 914              	.LVL126:
 915 00b0 0CE0     		b	.L62
 916              	.LVL127:
 917              	.L67:
 722:lvgl\src\lv_draw/lv_img_decoder.c ****             break;
 723:lvgl\src\lv_draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_8BIT:
 724:lvgl\src\lv_draw/lv_img_decoder.c ****             w = dsc->header.w; /*E.g. x = 7 -> w = 7 (bytes)*/
 918              		.loc 1 724 0
 919 00b2 E368     		ldr	r3, [r4, #12]
 920 00b4 C3F38A23 		ubfx	r3, r3, #10, #11
 921              	.LVL128:
 725:lvgl\src\lv_draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 922              		.loc 1 725 0
 923 00b8 07FB0387 		mla	r7, r7, r3, r8
 924              	.LVL129:
 726:lvgl\src\lv_draw/lv_img_decoder.c ****             ofs += 1024;       /*Skip the palette*/
 925              		.loc 1 726 0
 926 00bc 07F58067 		add	r7, r7, #1024
 927              	.LVL130:
 727:lvgl\src\lv_draw/lv_img_decoder.c ****             pos = 0;
 928              		.loc 1 727 0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 43


 929 00c0 0022     		movs	r2, #0
 728:lvgl\src\lv_draw/lv_img_decoder.c ****             break;
 930              		.loc 1 728 0
 931 00c2 03E0     		b	.L62
 932              	.LVL131:
 933              	.L75:
 700:lvgl\src\lv_draw/lv_img_decoder.c ****     switch(dsc->header.cf) {
 934              		.loc 1 700 0
 935 00c4 0027     		movs	r7, #0
 699:lvgl\src\lv_draw/lv_img_decoder.c ****     uint32_t ofs = 0;
 936              		.loc 1 699 0
 937 00c6 3A46     		mov	r2, r7
 938 00c8 00E0     		b	.L62
 939              	.LVL132:
 940              	.L76:
 721:lvgl\src\lv_draw/lv_img_decoder.c ****             break;
 941              		.loc 1 721 0
 942 00ca 0022     		movs	r2, #0
 943              	.LVL133:
 944              	.L62:
 729:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 730:lvgl\src\lv_draw/lv_img_decoder.c **** 
 731:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 945              		.loc 1 731 0
 946 00cc D4F81CE0 		ldr	lr, [r4, #28]
 947              	.LVL134:
 732:lvgl\src\lv_draw/lv_img_decoder.c **** 
 733:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 734:lvgl\src\lv_draw/lv_img_decoder.c ****     uint8_t * fs_buf = _lv_mem_buf_get(w);
 735:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 736:lvgl\src\lv_draw/lv_img_decoder.c ****     const uint8_t * data_tmp = NULL;
 737:lvgl\src\lv_draw/lv_img_decoder.c ****     if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 948              		.loc 1 737 0
 949 00d0 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 950 00d2 63BB     		cbnz	r3, .L77
 951              	.LBB15:
 738:lvgl\src\lv_draw/lv_img_decoder.c ****         const lv_img_dsc_t * img_dsc = dsc->src;
 952              		.loc 1 738 0
 953 00d4 6368     		ldr	r3, [r4, #4]
 954              	.LVL135:
 739:lvgl\src\lv_draw/lv_img_decoder.c ****         data_tmp                     = img_dsc->data + ofs;
 955              		.loc 1 739 0
 956 00d6 9B68     		ldr	r3, [r3, #8]
 957              	.LVL136:
 958 00d8 1F44     		add	r7, r7, r3
 959              	.LVL137:
 960              	.LBE15:
 740:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 741:lvgl\src\lv_draw/lv_img_decoder.c ****     else {
 742:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 743:lvgl\src\lv_draw/lv_img_decoder.c ****         lv_fs_seek(user_data->f, ofs + 4); /*+4 to skip the header*/
 744:lvgl\src\lv_draw/lv_img_decoder.c ****         lv_fs_read(user_data->f, fs_buf, w, NULL);
 745:lvgl\src\lv_draw/lv_img_decoder.c ****         data_tmp = fs_buf;
 746:lvgl\src\lv_draw/lv_img_decoder.c **** #else
 747:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("Image built-in indexed line reader can't read file because LV_USE_FILESYSTEM =
 748:lvgl\src\lv_draw/lv_img_decoder.c ****         data_tmp = NULL; /*To avoid warnings*/
 749:lvgl\src\lv_draw/lv_img_decoder.c ****         return LV_RES_INV;
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 44


 750:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 751:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 752:lvgl\src\lv_draw/lv_img_decoder.c **** 
 753:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_coord_t i;
 754:lvgl\src\lv_draw/lv_img_decoder.c ****     for(i = 0; i < len; i++) {
 961              		.loc 1 754 0
 962 00da 0024     		movs	r4, #0
 963              	.LVL138:
 964 00dc 22E0     		b	.L72
 965              	.LVL139:
 966              	.L74:
 967              	.LBB16:
 755:lvgl\src\lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 968              		.loc 1 755 0
 969 00de 3978     		ldrb	r1, [r7]	@ zero_extendqisi2
 970 00e0 0CFA02F3 		lsl	r3, ip, r2
 971 00e4 0B40     		ands	r3, r3, r1
 972 00e6 1341     		asrs	r3, r3, r2
 973              	.LVL140:
 756:lvgl\src\lv_draw/lv_img_decoder.c **** 
 757:lvgl\src\lv_draw/lv_img_decoder.c ****         lv_color_t color = user_data->palette[val_act];
 974              		.loc 1 757 0
 975 00e8 DBB2     		uxtb	r3, r3
 758:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 759:lvgl\src\lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE] = color.full;
 760:lvgl\src\lv_draw/lv_img_decoder.c **** #elif LV_COLOR_DEPTH == 16
 761:lvgl\src\lv_draw/lv_img_decoder.c ****         /*Because of Alpha byte 16 bit color can start on odd address which can cause crash*/
 762:lvgl\src\lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE] = color.full & 0xFF;
 976              		.loc 1 762 0
 977 00ea 04EB4401 		add	r1, r4, r4, lsl #1
 978 00ee DEF80060 		ldr	r6, [lr]
 979 00f2 36F81380 		ldrh	r8, [r6, r3, lsl #1]
 980 00f6 05F80180 		strb	r8, [r5, r1]
 763:lvgl\src\lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + 1] = (color.full >> 8) & 0xFF;
 981              		.loc 1 763 0
 982 00fa 01F10109 		add	r9, r1, #1
 983 00fe 4FEA1828 		lsr	r8, r8, #8
 984 0102 05F80980 		strb	r8, [r5, r9]
 764:lvgl\src\lv_draw/lv_img_decoder.c **** #elif LV_COLOR_DEPTH == 32
 765:lvgl\src\lv_draw/lv_img_decoder.c ****         *((uint32_t *)&buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE]) = color.full;
 766:lvgl\src\lv_draw/lv_img_decoder.c **** #else
 767:lvgl\src\lv_draw/lv_img_decoder.c **** #error "Invalid LV_COLOR_DEPTH. Check it in lv_conf.h"
 768:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 769:lvgl\src\lv_draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + LV_IMG_PX_SIZE_ALPHA_BYTE - 1] = user_data->opa[val_act
 985              		.loc 1 769 0
 986 0106 0231     		adds	r1, r1, #2
 987 0108 DEF80460 		ldr	r6, [lr, #4]
 988 010c F35C     		ldrb	r3, [r6, r3]	@ zero_extendqisi2
 989              	.LVL141:
 990 010e 6B54     		strb	r3, [r5, r1]
 770:lvgl\src\lv_draw/lv_img_decoder.c **** 
 771:lvgl\src\lv_draw/lv_img_decoder.c ****         pos -= px_size;
 991              		.loc 1 771 0
 992 0110 121A     		subs	r2, r2, r0
 993              	.LVL142:
 994 0112 52B2     		sxtb	r2, r2
 995              	.LVL143:
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 45


 772:lvgl\src\lv_draw/lv_img_decoder.c ****         if(pos < 0) {
 996              		.loc 1 772 0
 997 0114 002A     		cmp	r2, #0
 998 0116 03DA     		bge	.L73
 773:lvgl\src\lv_draw/lv_img_decoder.c ****             pos = 8 - px_size;
 999              		.loc 1 773 0
 1000 0118 C0F10802 		rsb	r2, r0, #8
 1001              	.LVL144:
 1002 011c 52B2     		sxtb	r2, r2
 1003              	.LVL145:
 774:lvgl\src\lv_draw/lv_img_decoder.c ****             data_tmp++;
 1004              		.loc 1 774 0
 1005 011e 0137     		adds	r7, r7, #1
 1006              	.LVL146:
 1007              	.L73:
 1008              	.LBE16:
 754:lvgl\src\lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 1009              		.loc 1 754 0 discriminator 2
 1010 0120 0134     		adds	r4, r4, #1
 1011              	.LVL147:
 1012 0122 24B2     		sxth	r4, r4
 1013              	.LVL148:
 1014              	.L72:
 754:lvgl\src\lv_draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp & (mask << pos)) >> pos;
 1015              		.loc 1 754 0 is_stmt 0 discriminator 1
 1016 0124 5445     		cmp	r4, r10
 1017 0126 DADB     		blt	.L74
 775:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 776:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 777:lvgl\src\lv_draw/lv_img_decoder.c **** #if LV_USE_FILESYSTEM
 778:lvgl\src\lv_draw/lv_img_decoder.c ****     _lv_mem_buf_release(fs_buf);
 779:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 780:lvgl\src\lv_draw/lv_img_decoder.c ****     return LV_RES_OK;
 1018              		.loc 1 780 0 is_stmt 1
 1019 0128 0120     		movs	r0, #1
 1020              	.LVL149:
 1021 012a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1022              	.LVL150:
 1023              	.L77:
 749:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 1024              		.loc 1 749 0
 1025 012e 0020     		movs	r0, #0
 1026              	.LVL151:
 781:lvgl\src\lv_draw/lv_img_decoder.c **** #else
 782:lvgl\src\lv_draw/lv_img_decoder.c ****     LV_LOG_WARN("Image built-in indexed line reader failed because LV_IMG_CF_INDEXED is 0 in lv_con
 783:lvgl\src\lv_draw/lv_img_decoder.c ****     return LV_RES_INV;
 784:lvgl\src\lv_draw/lv_img_decoder.c **** #endif
 785:lvgl\src\lv_draw/lv_img_decoder.c **** }
 1027              		.loc 1 785 0
 1028 0130 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1029              		.cfi_endproc
 1030              	.LFE54:
 1031              		.size	lv_img_decoder_built_in_line_indexed, .-lv_img_decoder_built_in_line_indexed
 1032              		.section	.text.lv_img_decoder_built_in_read_line,"ax",%progbits
 1033              		.align	2
 1034              		.global	lv_img_decoder_built_in_read_line
 1035              		.thumb
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 46


 1036              		.thumb_func
 1037              		.type	lv_img_decoder_built_in_read_line, %function
 1038              	lv_img_decoder_built_in_read_line:
 1039              	.LFB50:
 484:lvgl\src\lv_draw/lv_img_decoder.c ****     (void)decoder; /*Unused*/
 1040              		.loc 1 484 0
 1041              		.cfi_startproc
 1042              		@ args = 8, pretend = 0, frame = 0
 1043              		@ frame_needed = 0, uses_anonymous_args = 0
 1044              	.LVL152:
 1045 0000 30B5     		push	{r4, r5, lr}
 1046              		.cfi_def_cfa_offset 12
 1047              		.cfi_offset 4, -12
 1048              		.cfi_offset 5, -8
 1049              		.cfi_offset 14, -4
 1050 0002 83B0     		sub	sp, sp, #12
 1051              		.cfi_def_cfa_offset 24
 1052 0004 0846     		mov	r0, r1
 1053              	.LVL153:
 1054 0006 1146     		mov	r1, r2
 1055              	.LVL154:
 1056 0008 1A46     		mov	r2, r3
 1057              	.LVL155:
 1058 000a BDF91830 		ldrsh	r3, [sp, #24]
 1059              	.LVL156:
 489:lvgl\src\lv_draw/lv_img_decoder.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 1060              		.loc 1 489 0
 1061 000e 047B     		ldrb	r4, [r0, #12]	@ zero_extendqisi2
 1062 0010 04F01F04 		and	r4, r4, #31
 1063 0014 251F     		subs	r5, r4, #4
 1064 0016 EDB2     		uxtb	r5, r5
 1065 0018 022D     		cmp	r5, #2
 1066 001a 07D8     		bhi	.L80
 493:lvgl\src\lv_draw/lv_img_decoder.c ****             res = lv_img_decoder_built_in_line_true_color(dsc, x, y, len, buf);
 1067              		.loc 1 493 0
 1068 001c 847A     		ldrb	r4, [r0, #10]	@ zero_extendqisi2
 1069 001e 012C     		cmp	r4, #1
 1070 0020 17D1     		bne	.L83
 494:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 1071              		.loc 1 494 0
 1072 0022 079C     		ldr	r4, [sp, #28]
 1073 0024 0094     		str	r4, [sp]
 1074 0026 FFF7FEFF 		bl	lv_img_decoder_built_in_line_true_color
 1075              	.LVL157:
 1076 002a 15E0     		b	.L81
 1077              	.LVL158:
 1078              	.L80:
 498:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1079              		.loc 1 498 0
 1080 002c A4F10B05 		sub	r5, r4, #11
 1081 0030 EDB2     		uxtb	r5, r5
 497:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_4BIT || dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 1082              		.loc 1 497 0
 1083 0032 032D     		cmp	r5, #3
 1084 0034 04D8     		bhi	.L82
 500:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 1085              		.loc 1 500 0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 47


 1086 0036 079C     		ldr	r4, [sp, #28]
 1087 0038 0094     		str	r4, [sp]
 1088 003a FFF7FEFF 		bl	lv_img_decoder_built_in_line_alpha
 1089              	.LVL159:
 1090 003e 0BE0     		b	.L81
 1091              	.LVL160:
 1092              	.L82:
 503:lvgl\src\lv_draw/lv_img_decoder.c ****         res = lv_img_decoder_built_in_line_indexed(dsc, x, y, len, buf);
 1093              		.loc 1 503 0
 1094 0040 073C     		subs	r4, r4, #7
 1095 0042 E4B2     		uxtb	r4, r4
 502:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_INDEXED_4BIT || dsc->header.cf == LV_IMG_CF_INDEXED_8BIT) {
 1096              		.loc 1 502 0
 1097 0044 032C     		cmp	r4, #3
 1098 0046 06D8     		bhi	.L84
 504:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 1099              		.loc 1 504 0
 1100 0048 079C     		ldr	r4, [sp, #28]
 1101 004a 0094     		str	r4, [sp]
 1102 004c FFF7FEFF 		bl	lv_img_decoder_built_in_line_indexed
 1103              	.LVL161:
 1104 0050 02E0     		b	.L81
 1105              	.LVL162:
 1106              	.L83:
 487:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1107              		.loc 1 487 0
 1108 0052 0020     		movs	r0, #0
 1109              	.LVL163:
 1110 0054 00E0     		b	.L81
 1111              	.LVL164:
 1112              	.L84:
 508:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 1113              		.loc 1 508 0
 1114 0056 0020     		movs	r0, #0
 1115              	.LVL165:
 1116              	.L81:
 512:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1117              		.loc 1 512 0
 1118 0058 03B0     		add	sp, sp, #12
 1119              		.cfi_def_cfa_offset 12
 1120              		@ sp needed
 1121 005a 30BD     		pop	{r4, r5, pc}
 1122              		.cfi_endproc
 1123              	.LFE50:
 1124              		.size	lv_img_decoder_built_in_read_line, .-lv_img_decoder_built_in_read_line
 1125              		.section	.text.lv_img_decoder_get_info,"ax",%progbits
 1126              		.align	2
 1127              		.global	lv_img_decoder_get_info
 1128              		.thumb
 1129              		.thumb_func
 1130              		.type	lv_img_decoder_get_info, %function
 1131              	lv_img_decoder_get_info:
 1132              	.LFB38:
  90:lvgl\src\lv_draw/lv_img_decoder.c ****     header->always_zero = 0;
 1133              		.loc 1 90 0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 48


 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 1137              	.LVL166:
 1138 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1139              		.cfi_def_cfa_offset 24
 1140              		.cfi_offset 3, -24
 1141              		.cfi_offset 4, -20
 1142              		.cfi_offset 5, -16
 1143              		.cfi_offset 6, -12
 1144              		.cfi_offset 7, -8
 1145              		.cfi_offset 14, -4
 1146 0002 0746     		mov	r7, r0
 1147 0004 0E46     		mov	r6, r1
  91:lvgl\src\lv_draw/lv_img_decoder.c ****     header->h = 0;
 1148              		.loc 1 91 0
 1149 0006 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1150 0008 6FF34713 		bfc	r3, #5, #3
 1151 000c 0B70     		strb	r3, [r1]
  92:lvgl\src\lv_draw/lv_img_decoder.c ****     header->w = 0;
 1152              		.loc 1 92 0
 1153 000e 4B88     		ldrh	r3, [r1, #2]
 1154 0010 6FF34F13 		bfc	r3, #5, #11
 1155 0014 4B80     		strh	r3, [r1, #2]	@ movhi
  93:lvgl\src\lv_draw/lv_img_decoder.c ****     header->cf = LV_IMG_CF_UNKNOWN;
 1156              		.loc 1 93 0
 1157 0016 0B68     		ldr	r3, [r1]
 1158 0018 6FF39423 		bfc	r3, #10, #11
 1159 001c 0B60     		str	r3, [r1]
  94:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1160              		.loc 1 94 0
 1161 001e 6FF30403 		bfc	r3, #0, #5
 1162 0022 0B70     		strb	r3, [r1]
 1163              	.LVL167:
  98:lvgl\src\lv_draw/lv_img_decoder.c ****         res = LV_RES_INV;
 1164              		.loc 1 98 0
 1165 0024 0C48     		ldr	r0, .L93
 1166              	.LVL168:
 1167 0026 FFF7FEFF 		bl	_lv_ll_get_head
 1168              	.LVL169:
 1169 002a 0446     		mov	r4, r0
 1170              	.LVL170:
  96:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_t * d;
 1171              		.loc 1 96 0
 1172 002c 0025     		movs	r5, #0
  98:lvgl\src\lv_draw/lv_img_decoder.c ****         res = LV_RES_INV;
 1173              		.loc 1 98 0
 1174 002e 0FE0     		b	.L87
 1175              	.LVL171:
 1176              	.L90:
 100:lvgl\src\lv_draw/lv_img_decoder.c ****             res = d->info_cb(d, src, header);
 1177              		.loc 1 100 0
 1178 0030 2368     		ldr	r3, [r4]
 1179 0032 3BB1     		cbz	r3, .L91
 101:lvgl\src\lv_draw/lv_img_decoder.c ****             if(res == LV_RES_OK) break;
 1180              		.loc 1 101 0
 1181 0034 3246     		mov	r2, r6
 1182 0036 3946     		mov	r1, r7
 1183 0038 2046     		mov	r0, r4
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 49


 1184 003a 9847     		blx	r3
 1185              	.LVL172:
 1186 003c 0546     		mov	r5, r0
 1187              	.LVL173:
 102:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 1188              		.loc 1 102 0
 1189 003e 0128     		cmp	r0, #1
 1190 0040 01D1     		bne	.L88
 1191 0042 07E0     		b	.L89
 1192              	.LVL174:
 1193              	.L91:
  99:lvgl\src\lv_draw/lv_img_decoder.c ****         if(d->info_cb) {
 1194              		.loc 1 99 0
 1195 0044 0025     		movs	r5, #0
 1196              	.LVL175:
 1197              	.L88:
  98:lvgl\src\lv_draw/lv_img_decoder.c ****         res = LV_RES_INV;
 1198              		.loc 1 98 0 discriminator 2
 1199 0046 2146     		mov	r1, r4
 1200 0048 0348     		ldr	r0, .L93
 1201 004a FFF7FEFF 		bl	_lv_ll_get_next
 1202              	.LVL176:
 1203 004e 0446     		mov	r4, r0
 1204              	.LVL177:
 1205              	.L87:
  98:lvgl\src\lv_draw/lv_img_decoder.c ****         res = LV_RES_INV;
 1206              		.loc 1 98 0 is_stmt 0 discriminator 1
 1207 0050 002C     		cmp	r4, #0
 1208 0052 EDD1     		bne	.L90
 1209              	.LVL178:
 1210              	.L89:
 107:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1211              		.loc 1 107 0 is_stmt 1
 1212 0054 2846     		mov	r0, r5
 1213 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1214              	.LVL179:
 1215              	.L94:
 1216              		.align	2
 1217              	.L93:
 1218 0058 00000000 		.word	_lv_img_defoder_ll
 1219              		.cfi_endproc
 1220              	.LFE38:
 1221              		.size	lv_img_decoder_get_info, .-lv_img_decoder_get_info
 1222              		.section	.text.lv_img_decoder_open,"ax",%progbits
 1223              		.align	2
 1224              		.global	lv_img_decoder_open
 1225              		.thumb
 1226              		.thumb_func
 1227              		.type	lv_img_decoder_open, %function
 1228              	lv_img_decoder_open:
 1229              	.LFB39:
 122:lvgl\src\lv_draw/lv_img_decoder.c ****     dsc->color     = color;
 1230              		.loc 1 122 0
 1231              		.cfi_startproc
 1232              		@ args = 0, pretend = 0, frame = 0
 1233              		@ frame_needed = 0, uses_anonymous_args = 0
 1234              	.LVL180:
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 50


 1235 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1236              		.cfi_def_cfa_offset 24
 1237              		.cfi_offset 3, -24
 1238              		.cfi_offset 4, -20
 1239              		.cfi_offset 5, -16
 1240              		.cfi_offset 6, -12
 1241              		.cfi_offset 7, -8
 1242              		.cfi_offset 14, -4
 1243 0002 0646     		mov	r6, r0
 1244 0004 0F46     		mov	r7, r1
 123:lvgl\src\lv_draw/lv_img_decoder.c ****     dsc->src_type  = lv_img_src_get_type(src);
 1245              		.loc 1 123 0
 1246 0006 0281     		strh	r2, [r0, #8]	@ movhi
 124:lvgl\src\lv_draw/lv_img_decoder.c ****     dsc->user_data = NULL;
 1247              		.loc 1 124 0
 1248 0008 0846     		mov	r0, r1
 1249              	.LVL181:
 1250 000a FFF7FEFF 		bl	lv_img_src_get_type
 1251              	.LVL182:
 1252 000e B072     		strb	r0, [r6, #10]
 125:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1253              		.loc 1 125 0
 1254 0010 0023     		movs	r3, #0
 1255 0012 F361     		str	r3, [r6, #28]
 127:lvgl\src\lv_draw/lv_img_decoder.c ****         size_t fnlen = strlen(src);
 1256              		.loc 1 127 0
 1257 0014 0128     		cmp	r0, #1
 1258 0016 0AD1     		bne	.L96
 1259              	.LBB17:
 128:lvgl\src\lv_draw/lv_img_decoder.c ****         dsc->src = lv_mem_alloc(fnlen + 1);
 1260              		.loc 1 128 0
 1261 0018 3846     		mov	r0, r7
 1262 001a FFF7FEFF 		bl	strlen
 1263              	.LVL183:
 129:lvgl\src\lv_draw/lv_img_decoder.c ****         strcpy((char *)dsc->src, src);
 1264              		.loc 1 129 0
 1265 001e 0130     		adds	r0, r0, #1
 1266              	.LVL184:
 1267 0020 FFF7FEFF 		bl	lv_mem_alloc
 1268              	.LVL185:
 1269 0024 7060     		str	r0, [r6, #4]
 130:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 1270              		.loc 1 130 0
 1271 0026 3946     		mov	r1, r7
 1272 0028 FFF7FEFF 		bl	strcpy
 1273              	.LVL186:
 1274              	.LBE17:
 1275 002c 00E0     		b	.L97
 1276              	.L96:
 133:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 1277              		.loc 1 133 0
 1278 002e 7760     		str	r7, [r6, #4]
 1279              	.L97:
 1280              	.LVL187:
 139:lvgl\src\lv_draw/lv_img_decoder.c ****         /*Info an Open callbacks are required*/
 1281              		.loc 1 139 0
 1282 0030 1248     		ldr	r0, .L103
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 51


 1283 0032 FFF7FEFF 		bl	_lv_ll_get_head
 1284              	.LVL188:
 1285 0036 0446     		mov	r4, r0
 1286              	.LVL189:
 136:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1287              		.loc 1 136 0
 1288 0038 0025     		movs	r5, #0
 139:lvgl\src\lv_draw/lv_img_decoder.c ****         /*Info an Open callbacks are required*/
 1289              		.loc 1 139 0
 1290 003a 1BE0     		b	.L98
 1291              	.LVL190:
 1292              	.L101:
 141:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1293              		.loc 1 141 0
 1294 003c 2368     		ldr	r3, [r4]
 1295 003e A3B1     		cbz	r3, .L99
 141:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1296              		.loc 1 141 0 is_stmt 0 discriminator 2
 1297 0040 6268     		ldr	r2, [r4, #4]
 1298 0042 92B1     		cbz	r2, .L99
 143:lvgl\src\lv_draw/lv_img_decoder.c ****         if(res != LV_RES_OK) continue;
 1299              		.loc 1 143 0 is_stmt 1
 1300 0044 06F10C02 		add	r2, r6, #12
 1301 0048 3946     		mov	r1, r7
 1302 004a 2046     		mov	r0, r4
 1303 004c 9847     		blx	r3
 1304              	.LVL191:
 1305 004e 0546     		mov	r5, r0
 1306              	.LVL192:
 144:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1307              		.loc 1 144 0
 1308 0050 0128     		cmp	r0, #1
 1309 0052 0AD1     		bne	.L99
 146:lvgl\src\lv_draw/lv_img_decoder.c ****         dsc->img_data  = NULL;
 1310              		.loc 1 146 0
 1311 0054 0023     		movs	r3, #0
 1312 0056 B361     		str	r3, [r6, #24]
 147:lvgl\src\lv_draw/lv_img_decoder.c ****         dsc->decoder   = d;
 1313              		.loc 1 147 0
 1314 0058 3361     		str	r3, [r6, #16]
 148:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1315              		.loc 1 148 0
 1316 005a 3460     		str	r4, [r6]
 150:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1317              		.loc 1 150 0
 1318 005c 6368     		ldr	r3, [r4, #4]
 1319 005e 3146     		mov	r1, r6
 1320 0060 2046     		mov	r0, r4
 1321              	.LVL193:
 1322 0062 9847     		blx	r3
 1323              	.LVL194:
 1324 0064 0546     		mov	r5, r0
 1325              	.LVL195:
 153:lvgl\src\lv_draw/lv_img_decoder.c ****     }
 1326              		.loc 1 153 0
 1327 0066 0128     		cmp	r0, #1
 1328 0068 06D0     		beq	.L100
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 52


 1329              	.LVL196:
 1330              	.L99:
 139:lvgl\src\lv_draw/lv_img_decoder.c ****         /*Info an Open callbacks are required*/
 1331              		.loc 1 139 0 discriminator 2
 1332 006a 2146     		mov	r1, r4
 1333 006c 0348     		ldr	r0, .L103
 1334 006e FFF7FEFF 		bl	_lv_ll_get_next
 1335              	.LVL197:
 1336 0072 0446     		mov	r4, r0
 1337              	.LVL198:
 1338              	.L98:
 139:lvgl\src\lv_draw/lv_img_decoder.c ****         /*Info an Open callbacks are required*/
 1339              		.loc 1 139 0 is_stmt 0 discriminator 1
 1340 0074 002C     		cmp	r4, #0
 1341 0076 E1D1     		bne	.L101
 1342              	.LVL199:
 1343              	.L100:
 157:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1344              		.loc 1 157 0 is_stmt 1
 1345 0078 2846     		mov	r0, r5
 1346 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1347              	.LVL200:
 1348              	.L104:
 1349              		.align	2
 1350              	.L103:
 1351 007c 00000000 		.word	_lv_img_defoder_ll
 1352              		.cfi_endproc
 1353              	.LFE39:
 1354              		.size	lv_img_decoder_open, .-lv_img_decoder_open
 1355              		.section	.text.lv_img_decoder_read_line,"ax",%progbits
 1356              		.align	2
 1357              		.global	lv_img_decoder_read_line
 1358              		.thumb
 1359              		.thumb_func
 1360              		.type	lv_img_decoder_read_line, %function
 1361              	lv_img_decoder_read_line:
 1362              	.LFB40:
 169:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
 1363              		.loc 1 169 0
 1364              		.cfi_startproc
 1365              		@ args = 4, pretend = 0, frame = 0
 1366              		@ frame_needed = 0, uses_anonymous_args = 0
 1367              	.LVL201:
 1368 0000 70B5     		push	{r4, r5, r6, lr}
 1369              		.cfi_def_cfa_offset 16
 1370              		.cfi_offset 4, -16
 1371              		.cfi_offset 5, -12
 1372              		.cfi_offset 6, -8
 1373              		.cfi_offset 14, -4
 1374 0002 82B0     		sub	sp, sp, #8
 1375              		.cfi_def_cfa_offset 24
 1376              	.LVL202:
 171:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1377              		.loc 1 171 0
 1378 0004 0668     		ldr	r6, [r0]
 1379 0006 B468     		ldr	r4, [r6, #8]
 1380 0008 4CB1     		cbz	r4, .L107
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 53


 1381 000a 1D46     		mov	r5, r3
 1382 000c 1346     		mov	r3, r2
 1383              	.LVL203:
 1384 000e 0A46     		mov	r2, r1
 1385              	.LVL204:
 1386 0010 0146     		mov	r1, r0
 1387              	.LVL205:
 171:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1388              		.loc 1 171 0 is_stmt 0 discriminator 1
 1389 0012 0698     		ldr	r0, [sp, #24]
 1390              	.LVL206:
 1391 0014 0190     		str	r0, [sp, #4]
 1392 0016 0095     		str	r5, [sp]
 1393 0018 3046     		mov	r0, r6
 1394 001a A047     		blx	r4
 1395              	.LVL207:
 1396 001c 00E0     		b	.L106
 1397              	.LVL208:
 1398              	.L107:
 170:lvgl\src\lv_draw/lv_img_decoder.c ****     if(dsc->decoder->read_line_cb) res = dsc->decoder->read_line_cb(dsc->decoder, dsc, x, y, len, b
 1399              		.loc 1 170 0 is_stmt 1
 1400 001e 0020     		movs	r0, #0
 1401              	.LVL209:
 1402              	.L106:
 174:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1403              		.loc 1 174 0
 1404 0020 02B0     		add	sp, sp, #8
 1405              		.cfi_def_cfa_offset 16
 1406              		@ sp needed
 1407 0022 70BD     		pop	{r4, r5, r6, pc}
 1408              		.cfi_endproc
 1409              	.LFE40:
 1410              		.size	lv_img_decoder_read_line, .-lv_img_decoder_read_line
 1411              		.section	.text.lv_img_decoder_close,"ax",%progbits
 1412              		.align	2
 1413              		.global	lv_img_decoder_close
 1414              		.thumb
 1415              		.thumb_func
 1416              		.type	lv_img_decoder_close, %function
 1417              	lv_img_decoder_close:
 1418              	.LFB41:
 181:lvgl\src\lv_draw/lv_img_decoder.c ****     if(dsc->decoder) {
 1419              		.loc 1 181 0
 1420              		.cfi_startproc
 1421              		@ args = 0, pretend = 0, frame = 0
 1422              		@ frame_needed = 0, uses_anonymous_args = 0
 1423              	.LVL210:
 182:lvgl\src\lv_draw/lv_img_decoder.c ****         if(dsc->decoder->close_cb) dsc->decoder->close_cb(dsc->decoder, dsc);
 1424              		.loc 1 182 0
 1425 0000 0368     		ldr	r3, [r0]
 1426 0002 7BB1     		cbz	r3, .L113
 181:lvgl\src\lv_draw/lv_img_decoder.c ****     if(dsc->decoder) {
 1427              		.loc 1 181 0
 1428 0004 10B5     		push	{r4, lr}
 1429              		.cfi_def_cfa_offset 8
 1430              		.cfi_offset 4, -8
 1431              		.cfi_offset 14, -4
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 54


 1432 0006 0446     		mov	r4, r0
 183:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1433              		.loc 1 183 0
 1434 0008 DA68     		ldr	r2, [r3, #12]
 1435 000a 12B1     		cbz	r2, .L111
 183:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1436              		.loc 1 183 0 is_stmt 0 discriminator 1
 1437 000c 0146     		mov	r1, r0
 1438 000e 1846     		mov	r0, r3
 1439              	.LVL211:
 1440 0010 9047     		blx	r2
 1441              	.LVL212:
 1442              	.L111:
 185:lvgl\src\lv_draw/lv_img_decoder.c ****             lv_mem_free(dsc->src);
 1443              		.loc 1 185 0 is_stmt 1
 1444 0012 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 1445 0014 012B     		cmp	r3, #1
 1446 0016 04D1     		bne	.L109
 186:lvgl\src\lv_draw/lv_img_decoder.c ****             dsc->src = NULL;
 1447              		.loc 1 186 0
 1448 0018 6068     		ldr	r0, [r4, #4]
 1449 001a FFF7FEFF 		bl	lv_mem_free
 1450              	.LVL213:
 187:lvgl\src\lv_draw/lv_img_decoder.c ****         }
 1451              		.loc 1 187 0
 1452 001e 0023     		movs	r3, #0
 1453 0020 6360     		str	r3, [r4, #4]
 1454              	.L109:
 1455 0022 10BD     		pop	{r4, pc}
 1456              	.LVL214:
 1457              	.L113:
 1458              		.cfi_def_cfa_offset 0
 1459              		.cfi_restore 4
 1460              		.cfi_restore 14
 1461 0024 7047     		bx	lr
 1462              		.cfi_endproc
 1463              	.LFE41:
 1464              		.size	lv_img_decoder_close, .-lv_img_decoder_close
 1465 0026 00BF     		.section	.text.lv_img_decoder_create,"ax",%progbits
 1466              		.align	2
 1467              		.global	lv_img_decoder_create
 1468              		.thumb
 1469              		.thumb_func
 1470              		.type	lv_img_decoder_create, %function
 1471              	lv_img_decoder_create:
 1472              	.LFB42:
 197:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_t * decoder;
 1473              		.loc 1 197 0
 1474              		.cfi_startproc
 1475              		@ args = 0, pretend = 0, frame = 0
 1476              		@ frame_needed = 0, uses_anonymous_args = 0
 1477 0000 10B5     		push	{r4, lr}
 1478              		.cfi_def_cfa_offset 8
 1479              		.cfi_offset 4, -8
 1480              		.cfi_offset 14, -4
 199:lvgl\src\lv_draw/lv_img_decoder.c ****     LV_ASSERT_MEM(decoder);
 1481              		.loc 1 199 0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 55


 1482 0002 0B48     		ldr	r0, .L120
 1483 0004 FFF7FEFF 		bl	_lv_ll_ins_head
 1484              	.LVL215:
 1485 0008 0446     		mov	r4, r0
 1486              	.LVL216:
 200:lvgl\src\lv_draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 1487              		.loc 1 200 0
 1488 000a FFF7FEFF 		bl	lv_debug_check_null
 1489              	.LVL217:
 1490 000e 28B9     		cbnz	r0, .L115
 200:lvgl\src\lv_draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 1491              		.loc 1 200 0 is_stmt 0 discriminator 1
 1492 0010 2246     		mov	r2, r4
 1493 0012 0023     		movs	r3, #0
 1494 0014 0748     		ldr	r0, .L120+4
 1495 0016 FFF7FEFF 		bl	lv_debug_log_error
 1496              	.LVL218:
 1497              	.L116:
 1498 001a FEE7     		b	.L116
 1499              	.L115:
 201:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1500              		.loc 1 201 0 is_stmt 1
 1501 001c 2CB1     		cbz	r4, .L118
 203:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1502              		.loc 1 203 0
 1503 001e 1421     		movs	r1, #20
 1504 0020 2046     		mov	r0, r4
 1505 0022 FFF7FEFF 		bl	_lv_memset_00
 1506              	.LVL219:
 205:lvgl\src\lv_draw/lv_img_decoder.c **** }
 1507              		.loc 1 205 0
 1508 0026 2046     		mov	r0, r4
 1509 0028 10BD     		pop	{r4, pc}
 1510              	.LVL220:
 1511              	.L118:
 201:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1512              		.loc 1 201 0
 1513 002a 0020     		movs	r0, #0
 206:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1514              		.loc 1 206 0
 1515 002c 10BD     		pop	{r4, pc}
 1516              	.LVL221:
 1517              	.L121:
 1518 002e 00BF     		.align	2
 1519              	.L120:
 1520 0030 00000000 		.word	_lv_img_defoder_ll
 1521 0034 00000000 		.word	.LC2
 1522              		.cfi_endproc
 1523              	.LFE42:
 1524              		.size	lv_img_decoder_create, .-lv_img_decoder_create
 1525              		.section	.text.lv_img_decoder_delete,"ax",%progbits
 1526              		.align	2
 1527              		.global	lv_img_decoder_delete
 1528              		.thumb
 1529              		.thumb_func
 1530              		.type	lv_img_decoder_delete, %function
 1531              	lv_img_decoder_delete:
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 56


 1532              	.LFB43:
 213:lvgl\src\lv_draw/lv_img_decoder.c ****     _lv_ll_remove(&LV_GC_ROOT(_lv_img_defoder_ll), decoder);
 1533              		.loc 1 213 0
 1534              		.cfi_startproc
 1535              		@ args = 0, pretend = 0, frame = 0
 1536              		@ frame_needed = 0, uses_anonymous_args = 0
 1537              	.LVL222:
 1538 0000 10B5     		push	{r4, lr}
 1539              		.cfi_def_cfa_offset 8
 1540              		.cfi_offset 4, -8
 1541              		.cfi_offset 14, -4
 1542 0002 0446     		mov	r4, r0
 214:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_mem_free(decoder);
 1543              		.loc 1 214 0
 1544 0004 0146     		mov	r1, r0
 1545 0006 0348     		ldr	r0, .L124
 1546              	.LVL223:
 1547 0008 FFF7FEFF 		bl	_lv_ll_remove
 1548              	.LVL224:
 215:lvgl\src\lv_draw/lv_img_decoder.c **** }
 1549              		.loc 1 215 0
 1550 000c 2046     		mov	r0, r4
 1551 000e FFF7FEFF 		bl	lv_mem_free
 1552              	.LVL225:
 1553 0012 10BD     		pop	{r4, pc}
 1554              	.LVL226:
 1555              	.L125:
 1556              		.align	2
 1557              	.L124:
 1558 0014 00000000 		.word	_lv_img_defoder_ll
 1559              		.cfi_endproc
 1560              	.LFE43:
 1561              		.size	lv_img_decoder_delete, .-lv_img_decoder_delete
 1562              		.section	.text.lv_img_decoder_set_info_cb,"ax",%progbits
 1563              		.align	2
 1564              		.global	lv_img_decoder_set_info_cb
 1565              		.thumb
 1566              		.thumb_func
 1567              		.type	lv_img_decoder_set_info_cb, %function
 1568              	lv_img_decoder_set_info_cb:
 1569              	.LFB44:
 224:lvgl\src\lv_draw/lv_img_decoder.c ****     decoder->info_cb = info_cb;
 1570              		.loc 1 224 0
 1571              		.cfi_startproc
 1572              		@ args = 0, pretend = 0, frame = 0
 1573              		@ frame_needed = 0, uses_anonymous_args = 0
 1574              		@ link register save eliminated.
 1575              	.LVL227:
 225:lvgl\src\lv_draw/lv_img_decoder.c **** }
 1576              		.loc 1 225 0
 1577 0000 0160     		str	r1, [r0]
 1578 0002 7047     		bx	lr
 1579              		.cfi_endproc
 1580              	.LFE44:
 1581              		.size	lv_img_decoder_set_info_cb, .-lv_img_decoder_set_info_cb
 1582              		.section	.text.lv_img_decoder_set_open_cb,"ax",%progbits
 1583              		.align	2
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 57


 1584              		.global	lv_img_decoder_set_open_cb
 1585              		.thumb
 1586              		.thumb_func
 1587              		.type	lv_img_decoder_set_open_cb, %function
 1588              	lv_img_decoder_set_open_cb:
 1589              	.LFB45:
 234:lvgl\src\lv_draw/lv_img_decoder.c ****     decoder->open_cb = open_cb;
 1590              		.loc 1 234 0
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 0
 1593              		@ frame_needed = 0, uses_anonymous_args = 0
 1594              		@ link register save eliminated.
 1595              	.LVL228:
 235:lvgl\src\lv_draw/lv_img_decoder.c **** }
 1596              		.loc 1 235 0
 1597 0000 4160     		str	r1, [r0, #4]
 1598 0002 7047     		bx	lr
 1599              		.cfi_endproc
 1600              	.LFE45:
 1601              		.size	lv_img_decoder_set_open_cb, .-lv_img_decoder_set_open_cb
 1602              		.section	.text.lv_img_decoder_set_read_line_cb,"ax",%progbits
 1603              		.align	2
 1604              		.global	lv_img_decoder_set_read_line_cb
 1605              		.thumb
 1606              		.thumb_func
 1607              		.type	lv_img_decoder_set_read_line_cb, %function
 1608              	lv_img_decoder_set_read_line_cb:
 1609              	.LFB46:
 244:lvgl\src\lv_draw/lv_img_decoder.c ****     decoder->read_line_cb = read_line_cb;
 1610              		.loc 1 244 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 0
 1613              		@ frame_needed = 0, uses_anonymous_args = 0
 1614              		@ link register save eliminated.
 1615              	.LVL229:
 245:lvgl\src\lv_draw/lv_img_decoder.c **** }
 1616              		.loc 1 245 0
 1617 0000 8160     		str	r1, [r0, #8]
 1618 0002 7047     		bx	lr
 1619              		.cfi_endproc
 1620              	.LFE46:
 1621              		.size	lv_img_decoder_set_read_line_cb, .-lv_img_decoder_set_read_line_cb
 1622              		.section	.text.lv_img_decoder_set_close_cb,"ax",%progbits
 1623              		.align	2
 1624              		.global	lv_img_decoder_set_close_cb
 1625              		.thumb
 1626              		.thumb_func
 1627              		.type	lv_img_decoder_set_close_cb, %function
 1628              	lv_img_decoder_set_close_cb:
 1629              	.LFB47:
 254:lvgl\src\lv_draw/lv_img_decoder.c ****     decoder->close_cb = close_cb;
 1630              		.loc 1 254 0
 1631              		.cfi_startproc
 1632              		@ args = 0, pretend = 0, frame = 0
 1633              		@ frame_needed = 0, uses_anonymous_args = 0
 1634              		@ link register save eliminated.
 1635              	.LVL230:
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 58


 255:lvgl\src\lv_draw/lv_img_decoder.c **** }
 1636              		.loc 1 255 0
 1637 0000 C160     		str	r1, [r0, #12]
 1638 0002 7047     		bx	lr
 1639              		.cfi_endproc
 1640              	.LFE47:
 1641              		.size	lv_img_decoder_set_close_cb, .-lv_img_decoder_set_close_cb
 1642              		.section	.text._lv_img_decoder_init,"ax",%progbits
 1643              		.align	2
 1644              		.global	_lv_img_decoder_init
 1645              		.thumb
 1646              		.thumb_func
 1647              		.type	_lv_img_decoder_init, %function
 1648              	_lv_img_decoder_init:
 1649              	.LFB37:
  63:lvgl\src\lv_draw/lv_img_decoder.c ****     _lv_ll_init(&LV_GC_ROOT(_lv_img_defoder_ll), sizeof(lv_img_decoder_t));
 1650              		.loc 1 63 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 0
 1653              		@ frame_needed = 0, uses_anonymous_args = 0
 1654 0000 10B5     		push	{r4, lr}
 1655              		.cfi_def_cfa_offset 8
 1656              		.cfi_offset 4, -8
 1657              		.cfi_offset 14, -4
  64:lvgl\src\lv_draw/lv_img_decoder.c **** 
 1658              		.loc 1 64 0
 1659 0002 1421     		movs	r1, #20
 1660 0004 0F48     		ldr	r0, .L135
 1661 0006 FFF7FEFF 		bl	_lv_ll_init
 1662              	.LVL231:
  69:lvgl\src\lv_draw/lv_img_decoder.c ****     if(decoder == NULL) {
 1663              		.loc 1 69 0
 1664 000a FFF7FEFF 		bl	lv_img_decoder_create
 1665              	.LVL232:
  70:lvgl\src\lv_draw/lv_img_decoder.c ****         LV_LOG_WARN("lv_img_decoder_init: out of memory");
 1666              		.loc 1 70 0
 1667 000e 0446     		mov	r4, r0
 1668 0010 40B9     		cbnz	r0, .L131
  72:lvgl\src\lv_draw/lv_img_decoder.c ****         return;
 1669              		.loc 1 72 0
 1670 0012 FFF7FEFF 		bl	lv_debug_check_null
 1671              	.LVL233:
 1672 0016 A0B9     		cbnz	r0, .L130
  72:lvgl\src\lv_draw/lv_img_decoder.c ****         return;
 1673              		.loc 1 72 0 is_stmt 0 discriminator 1
 1674 0018 2246     		mov	r2, r4
 1675 001a 0023     		movs	r3, #0
 1676 001c 0A48     		ldr	r0, .L135+4
 1677 001e FFF7FEFF 		bl	lv_debug_log_error
 1678              	.LVL234:
 1679              	.L133:
 1680 0022 FEE7     		b	.L133
 1681              	.LVL235:
 1682              	.L131:
  76:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_set_open_cb(decoder, lv_img_decoder_built_in_open);
 1683              		.loc 1 76 0 is_stmt 1
 1684 0024 0949     		ldr	r1, .L135+8
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 59


 1685 0026 FFF7FEFF 		bl	lv_img_decoder_set_info_cb
 1686              	.LVL236:
  77:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_set_read_line_cb(decoder, lv_img_decoder_built_in_read_line);
 1687              		.loc 1 77 0
 1688 002a 0949     		ldr	r1, .L135+12
 1689 002c 2046     		mov	r0, r4
 1690 002e FFF7FEFF 		bl	lv_img_decoder_set_open_cb
 1691              	.LVL237:
  78:lvgl\src\lv_draw/lv_img_decoder.c ****     lv_img_decoder_set_close_cb(decoder, lv_img_decoder_built_in_close);
 1692              		.loc 1 78 0
 1693 0032 0849     		ldr	r1, .L135+16
 1694 0034 2046     		mov	r0, r4
 1695 0036 FFF7FEFF 		bl	lv_img_decoder_set_read_line_cb
 1696              	.LVL238:
  79:lvgl\src\lv_draw/lv_img_decoder.c **** }
 1697              		.loc 1 79 0
 1698 003a 0749     		ldr	r1, .L135+20
 1699 003c 2046     		mov	r0, r4
 1700 003e FFF7FEFF 		bl	lv_img_decoder_set_close_cb
 1701              	.LVL239:
 1702              	.L130:
 1703 0042 10BD     		pop	{r4, pc}
 1704              	.LVL240:
 1705              	.L136:
 1706              		.align	2
 1707              	.L135:
 1708 0044 00000000 		.word	_lv_img_defoder_ll
 1709 0048 00000000 		.word	.LC2
 1710 004c 00000000 		.word	lv_img_decoder_built_in_info
 1711 0050 00000000 		.word	lv_img_decoder_built_in_open
 1712 0054 00000000 		.word	lv_img_decoder_built_in_read_line
 1713 0058 00000000 		.word	lv_img_decoder_built_in_close
 1714              		.cfi_endproc
 1715              	.LFE37:
 1716              		.size	_lv_img_decoder_init, .-_lv_img_decoder_init
 1717              		.section	.rodata
 1718              		.align	2
 1719              		.set	.LANCHOR0,. + 0
 1720              	.LC0:
 1721 0000 00       		.byte	0
 1722 0001 55       		.byte	85
 1723 0002 AA       		.byte	-86
 1724 0003 FF       		.byte	-1
 1725              	.LC1:
 1726 0004 00       		.byte	0
 1727 0005 11       		.byte	17
 1728 0006 22       		.byte	34
 1729 0007 33       		.byte	51
 1730 0008 44       		.byte	68
 1731 0009 55       		.byte	85
 1732 000a 66       		.byte	102
 1733 000b 77       		.byte	119
 1734 000c 88       		.byte	-120
 1735 000d 99       		.byte	-103
 1736 000e AA       		.byte	-86
 1737 000f BB       		.byte	-69
 1738 0010 CC       		.byte	-52
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 60


 1739 0011 DD       		.byte	-35
 1740 0012 EE       		.byte	-18
 1741 0013 FF       		.byte	-1
 1742              		.section	.rodata.str1.4,"aMS",%progbits,1
 1743              		.align	2
 1744              	.LC2:
 1745 0000 4F757420 		.ascii	"Out of memory\000"
 1745      6F66206D 
 1745      656D6F72 
 1745      7900
 1746              		.text
 1747              	.Letext0:
 1748              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1749              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1750              		.file 5 "lvgl\\src\\lv_draw\\../../../lv_conf.h"
 1751              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1752              		.file 7 "lvgl\\src\\lv_draw\\../lv_misc/lv_types.h"
 1753              		.file 8 "lvgl\\src\\lv_draw\\lv_img_buf.h"
 1754              		.file 9 "lvgl\\src\\lv_draw\\lv_img_decoder.h"
 1755              		.file 10 "lvgl\\src\\lv_draw\\../lv_misc/lv_ll.h"
 1756              		.file 11 "lvgl\\src\\lv_draw\\../lv_draw/lv_draw_img.h"
 1757              		.file 12 "lvgl\\src\\lv_draw\\../lv_misc/lv_mem.h"
 1758              		.file 13 "lvgl\\src\\lv_draw\\../lv_core/../lv_misc/lv_debug.h"
 1759              		.file 14 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 1760              		.file 15 "lvgl\\src\\lv_draw\\../lv_misc/lv_gc.h"
 1761              		.section	.debug_info,"",%progbits
 1762              	.Ldebug_info0:
 1763 0000 95120000 		.4byte	0x1295
 1764 0004 0400     		.2byte	0x4
 1765 0006 00000000 		.4byte	.Ldebug_abbrev0
 1766 000a 04       		.byte	0x4
 1767 000b 01       		.uleb128 0x1
 1768 000c 26070000 		.4byte	.LASF159
 1769 0010 0C       		.byte	0xc
 1770 0011 E3070000 		.4byte	.LASF160
 1771 0015 E6050000 		.4byte	.LASF161
 1772 0019 30000000 		.4byte	.Ldebug_ranges0+0x30
 1773 001d 00000000 		.4byte	0
 1774 0021 00000000 		.4byte	.Ldebug_line0
 1775 0025 02       		.uleb128 0x2
 1776 0026 29010000 		.4byte	.LASF0
 1777 002a 03       		.byte	0x3
 1778 002b 1B       		.byte	0x1b
 1779 002c 30000000 		.4byte	0x30
 1780 0030 03       		.uleb128 0x3
 1781 0031 01       		.byte	0x1
 1782 0032 06       		.byte	0x6
 1783 0033 77010000 		.4byte	.LASF2
 1784 0037 02       		.uleb128 0x2
 1785 0038 56000000 		.4byte	.LASF1
 1786 003c 03       		.byte	0x3
 1787 003d 1D       		.byte	0x1d
 1788 003e 42000000 		.4byte	0x42
 1789 0042 03       		.uleb128 0x3
 1790 0043 01       		.byte	0x1
 1791 0044 08       		.byte	0x8
 1792 0045 AD060000 		.4byte	.LASF3
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 61


 1793 0049 02       		.uleb128 0x2
 1794 004a 52030000 		.4byte	.LASF4
 1795 004e 03       		.byte	0x3
 1796 004f 29       		.byte	0x29
 1797 0050 54000000 		.4byte	0x54
 1798 0054 03       		.uleb128 0x3
 1799 0055 02       		.byte	0x2
 1800 0056 05       		.byte	0x5
 1801 0057 F7060000 		.4byte	.LASF5
 1802 005b 02       		.uleb128 0x2
 1803 005c 33080000 		.4byte	.LASF6
 1804 0060 03       		.byte	0x3
 1805 0061 2B       		.byte	0x2b
 1806 0062 66000000 		.4byte	0x66
 1807 0066 03       		.uleb128 0x3
 1808 0067 02       		.byte	0x2
 1809 0068 07       		.byte	0x7
 1810 0069 5F040000 		.4byte	.LASF7
 1811 006d 03       		.uleb128 0x3
 1812 006e 04       		.byte	0x4
 1813 006f 05       		.byte	0x5
 1814 0070 BD000000 		.4byte	.LASF8
 1815 0074 02       		.uleb128 0x2
 1816 0075 38030000 		.4byte	.LASF9
 1817 0079 03       		.byte	0x3
 1818 007a 41       		.byte	0x41
 1819 007b 7F000000 		.4byte	0x7f
 1820 007f 03       		.uleb128 0x3
 1821 0080 04       		.byte	0x4
 1822 0081 07       		.byte	0x7
 1823 0082 E0030000 		.4byte	.LASF10
 1824 0086 03       		.uleb128 0x3
 1825 0087 08       		.byte	0x8
 1826 0088 05       		.byte	0x5
 1827 0089 69010000 		.4byte	.LASF11
 1828 008d 02       		.uleb128 0x2
 1829 008e 69060000 		.4byte	.LASF12
 1830 0092 03       		.byte	0x3
 1831 0093 5B       		.byte	0x5b
 1832 0094 98000000 		.4byte	0x98
 1833 0098 03       		.uleb128 0x3
 1834 0099 08       		.byte	0x8
 1835 009a 07       		.byte	0x7
 1836 009b DB000000 		.4byte	.LASF13
 1837 009f 04       		.uleb128 0x4
 1838 00a0 04       		.byte	0x4
 1839 00a1 05       		.byte	0x5
 1840 00a2 696E7400 		.ascii	"int\000"
 1841 00a6 02       		.uleb128 0x2
 1842 00a7 1A070000 		.4byte	.LASF14
 1843 00ab 03       		.byte	0x3
 1844 00ac CA       		.byte	0xca
 1845 00ad B1000000 		.4byte	0xb1
 1846 00b1 03       		.uleb128 0x3
 1847 00b2 04       		.byte	0x4
 1848 00b3 07       		.byte	0x7
 1849 00b4 AE030000 		.4byte	.LASF15
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 62


 1850 00b8 02       		.uleb128 0x2
 1851 00b9 6B090000 		.4byte	.LASF16
 1852 00bd 04       		.byte	0x4
 1853 00be 14       		.byte	0x14
 1854 00bf 25000000 		.4byte	0x25
 1855 00c3 02       		.uleb128 0x2
 1856 00c4 0F0A0000 		.4byte	.LASF17
 1857 00c8 04       		.byte	0x4
 1858 00c9 18       		.byte	0x18
 1859 00ca 37000000 		.4byte	0x37
 1860 00ce 02       		.uleb128 0x2
 1861 00cf 61010000 		.4byte	.LASF18
 1862 00d3 04       		.byte	0x4
 1863 00d4 20       		.byte	0x20
 1864 00d5 49000000 		.4byte	0x49
 1865 00d9 02       		.uleb128 0x2
 1866 00da 19020000 		.4byte	.LASF19
 1867 00de 04       		.byte	0x4
 1868 00df 24       		.byte	0x24
 1869 00e0 5B000000 		.4byte	0x5b
 1870 00e4 02       		.uleb128 0x2
 1871 00e5 DA070000 		.4byte	.LASF20
 1872 00e9 04       		.byte	0x4
 1873 00ea 30       		.byte	0x30
 1874 00eb 74000000 		.4byte	0x74
 1875 00ef 02       		.uleb128 0x2
 1876 00f0 4D000000 		.4byte	.LASF21
 1877 00f4 04       		.byte	0x4
 1878 00f5 3C       		.byte	0x3c
 1879 00f6 8D000000 		.4byte	0x8d
 1880 00fa 02       		.uleb128 0x2
 1881 00fb 43000000 		.4byte	.LASF22
 1882 00ff 04       		.byte	0x4
 1883 0100 48       		.byte	0x48
 1884 0101 A6000000 		.4byte	0xa6
 1885 0105 02       		.uleb128 0x2
 1886 0106 3F010000 		.4byte	.LASF23
 1887 010a 05       		.byte	0x5
 1888 010b 46       		.byte	0x46
 1889 010c CE000000 		.4byte	0xce
 1890 0110 05       		.uleb128 0x5
 1891 0111 04       		.byte	0x4
 1892 0112 02       		.uleb128 0x2
 1893 0113 3E080000 		.4byte	.LASF24
 1894 0117 05       		.byte	0x5
 1895 0118 EA       		.byte	0xea
 1896 0119 10010000 		.4byte	0x110
 1897 011d 06       		.uleb128 0x6
 1898 011e 02       		.byte	0x2
 1899 011f 02       		.byte	0x2
 1900 0120 EA       		.byte	0xea
 1901 0121 62010000 		.4byte	0x162
 1902 0125 07       		.uleb128 0x7
 1903 0126 8A060000 		.4byte	.LASF25
 1904 012a 02       		.byte	0x2
 1905 012b F0       		.byte	0xf0
 1906 012c D9000000 		.4byte	0xd9
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 63


 1907 0130 02       		.byte	0x2
 1908 0131 03       		.byte	0x3
 1909 0132 0D       		.byte	0xd
 1910 0133 00       		.byte	0
 1911 0134 08       		.uleb128 0x8
 1912 0135 72656400 		.ascii	"red\000"
 1913 0139 02       		.byte	0x2
 1914 013a F1       		.byte	0xf1
 1915 013b D9000000 		.4byte	0xd9
 1916 013f 02       		.byte	0x2
 1917 0140 05       		.byte	0x5
 1918 0141 08       		.byte	0x8
 1919 0142 00       		.byte	0
 1920 0143 07       		.uleb128 0x7
 1921 0144 05080000 		.4byte	.LASF26
 1922 0148 02       		.byte	0x2
 1923 0149 F2       		.byte	0xf2
 1924 014a D9000000 		.4byte	0xd9
 1925 014e 02       		.byte	0x2
 1926 014f 05       		.byte	0x5
 1927 0150 03       		.byte	0x3
 1928 0151 00       		.byte	0
 1929 0152 07       		.uleb128 0x7
 1930 0153 92060000 		.4byte	.LASF27
 1931 0157 02       		.byte	0x2
 1932 0158 F3       		.byte	0xf3
 1933 0159 D9000000 		.4byte	0xd9
 1934 015d 02       		.byte	0x2
 1935 015e 03       		.byte	0x3
 1936 015f 00       		.byte	0
 1937 0160 00       		.byte	0
 1938 0161 00       		.byte	0
 1939 0162 09       		.uleb128 0x9
 1940 0163 02       		.byte	0x2
 1941 0164 02       		.byte	0x2
 1942 0165 E9       		.byte	0xe9
 1943 0166 80010000 		.4byte	0x180
 1944 016a 0A       		.uleb128 0xa
 1945 016b 636800   		.ascii	"ch\000"
 1946 016e 02       		.byte	0x2
 1947 016f F5       		.byte	0xf5
 1948 0170 1D010000 		.4byte	0x11d
 1949 0174 0B       		.uleb128 0xb
 1950 0175 8B050000 		.4byte	.LASF28
 1951 0179 02       		.byte	0x2
 1952 017a F6       		.byte	0xf6
 1953 017b D9000000 		.4byte	0xd9
 1954 017f 00       		.byte	0
 1955 0180 02       		.uleb128 0x2
 1956 0181 9A060000 		.4byte	.LASF29
 1957 0185 02       		.byte	0x2
 1958 0186 F7       		.byte	0xf7
 1959 0187 62010000 		.4byte	0x162
 1960 018b 06       		.uleb128 0x6
 1961 018c 04       		.byte	0x4
 1962 018d 02       		.byte	0x2
 1963 018e FA       		.byte	0xfa
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 64


 1964 018f C4010000 		.4byte	0x1c4
 1965 0193 0C       		.uleb128 0xc
 1966 0194 05080000 		.4byte	.LASF26
 1967 0198 02       		.byte	0x2
 1968 0199 FB       		.byte	0xfb
 1969 019a C3000000 		.4byte	0xc3
 1970 019e 00       		.byte	0
 1971 019f 0C       		.uleb128 0xc
 1972 01a0 83010000 		.4byte	.LASF30
 1973 01a4 02       		.byte	0x2
 1974 01a5 FC       		.byte	0xfc
 1975 01a6 C3000000 		.4byte	0xc3
 1976 01aa 01       		.byte	0x1
 1977 01ab 0D       		.uleb128 0xd
 1978 01ac 72656400 		.ascii	"red\000"
 1979 01b0 02       		.byte	0x2
 1980 01b1 FD       		.byte	0xfd
 1981 01b2 C3000000 		.4byte	0xc3
 1982 01b6 02       		.byte	0x2
 1983 01b7 0C       		.uleb128 0xc
 1984 01b8 89010000 		.4byte	.LASF31
 1985 01bc 02       		.byte	0x2
 1986 01bd FE       		.byte	0xfe
 1987 01be C3000000 		.4byte	0xc3
 1988 01c2 03       		.byte	0x3
 1989 01c3 00       		.byte	0
 1990 01c4 09       		.uleb128 0x9
 1991 01c5 04       		.byte	0x4
 1992 01c6 02       		.byte	0x2
 1993 01c7 F9       		.byte	0xf9
 1994 01c8 E3010000 		.4byte	0x1e3
 1995 01cc 0A       		.uleb128 0xa
 1996 01cd 636800   		.ascii	"ch\000"
 1997 01d0 02       		.byte	0x2
 1998 01d1 FF       		.byte	0xff
 1999 01d2 8B010000 		.4byte	0x18b
 2000 01d6 0E       		.uleb128 0xe
 2001 01d7 8B050000 		.4byte	.LASF28
 2002 01db 02       		.byte	0x2
 2003 01dc 0001     		.2byte	0x100
 2004 01de E4000000 		.4byte	0xe4
 2005 01e2 00       		.byte	0
 2006 01e3 0F       		.uleb128 0xf
 2007 01e4 32010000 		.4byte	.LASF32
 2008 01e8 02       		.byte	0x2
 2009 01e9 0101     		.2byte	0x101
 2010 01eb C4010000 		.4byte	0x1c4
 2011 01ef 0F       		.uleb128 0xf
 2012 01f0 82080000 		.4byte	.LASF33
 2013 01f4 02       		.byte	0x2
 2014 01f5 0D01     		.2byte	0x10d
 2015 01f7 80010000 		.4byte	0x180
 2016 01fb 0F       		.uleb128 0xf
 2017 01fc FE040000 		.4byte	.LASF34
 2018 0200 02       		.byte	0x2
 2019 0201 2001     		.2byte	0x120
 2020 0203 C3000000 		.4byte	0xc3
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 65


 2021 0207 02       		.uleb128 0x2
 2022 0208 3C000000 		.4byte	.LASF35
 2023 020c 06       		.byte	0x6
 2024 020d D8       		.byte	0xd8
 2025 020e B1000000 		.4byte	0xb1
 2026 0212 03       		.uleb128 0x3
 2027 0213 08       		.byte	0x8
 2028 0214 04       		.byte	0x4
 2029 0215 7F050000 		.4byte	.LASF36
 2030 0219 03       		.uleb128 0x3
 2031 021a 04       		.byte	0x4
 2032 021b 07       		.byte	0x7
 2033 021c 76050000 		.4byte	.LASF37
 2034 0220 03       		.uleb128 0x3
 2035 0221 01       		.byte	0x1
 2036 0222 08       		.byte	0x8
 2037 0223 17080000 		.4byte	.LASF38
 2038 0227 10       		.uleb128 0x10
 2039 0228 04       		.byte	0x4
 2040 0229 2D020000 		.4byte	0x22d
 2041 022d 11       		.uleb128 0x11
 2042 022e 20020000 		.4byte	0x220
 2043 0232 12       		.uleb128 0x12
 2044 0233 01       		.byte	0x1
 2045 0234 42000000 		.4byte	0x42
 2046 0238 07       		.byte	0x7
 2047 0239 2F       		.byte	0x2f
 2048 023a 4B020000 		.4byte	0x24b
 2049 023e 13       		.uleb128 0x13
 2050 023f F7000000 		.4byte	.LASF39
 2051 0243 00       		.byte	0
 2052 0244 13       		.uleb128 0x13
 2053 0245 72040000 		.4byte	.LASF40
 2054 0249 01       		.byte	0x1
 2055 024a 00       		.byte	0
 2056 024b 02       		.uleb128 0x2
 2057 024c 87030000 		.4byte	.LASF41
 2058 0250 07       		.byte	0x7
 2059 0251 34       		.byte	0x34
 2060 0252 C3000000 		.4byte	0xc3
 2061 0256 12       		.uleb128 0x12
 2062 0257 01       		.byte	0x1
 2063 0258 42000000 		.4byte	0x42
 2064 025c 08       		.byte	0x8
 2065 025d 3B       		.byte	0x3b
 2066 025e 23030000 		.4byte	0x323
 2067 0262 13       		.uleb128 0x13
 2068 0263 68020000 		.4byte	.LASF42
 2069 0267 00       		.byte	0
 2070 0268 13       		.uleb128 0x13
 2071 0269 2E000000 		.4byte	.LASF43
 2072 026d 01       		.byte	0x1
 2073 026e 13       		.uleb128 0x13
 2074 026f 7C000000 		.4byte	.LASF44
 2075 0273 02       		.byte	0x2
 2076 0274 13       		.uleb128 0x13
 2077 0275 BF080000 		.4byte	.LASF45
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 66


 2078 0279 03       		.byte	0x3
 2079 027a 13       		.uleb128 0x13
 2080 027b 3C050000 		.4byte	.LASF46
 2081 027f 04       		.byte	0x4
 2082 0280 13       		.uleb128 0x13
 2083 0281 240A0000 		.4byte	.LASF47
 2084 0285 05       		.byte	0x5
 2085 0286 13       		.uleb128 0x13
 2086 0287 B8040000 		.4byte	.LASF48
 2087 028b 06       		.byte	0x6
 2088 028c 13       		.uleb128 0x13
 2089 028d D0090000 		.4byte	.LASF49
 2090 0291 07       		.byte	0x7
 2091 0292 13       		.uleb128 0x13
 2092 0293 1C080000 		.4byte	.LASF50
 2093 0297 08       		.byte	0x8
 2094 0298 13       		.uleb128 0x13
 2095 0299 CF050000 		.4byte	.LASF51
 2096 029d 09       		.byte	0x9
 2097 029e 13       		.uleb128 0x13
 2098 029f 0A010000 		.4byte	.LASF52
 2099 02a3 0A       		.byte	0xa
 2100 02a4 13       		.uleb128 0x13
 2101 02a5 89040000 		.4byte	.LASF53
 2102 02a9 0B       		.byte	0xb
 2103 02aa 13       		.uleb128 0x13
 2104 02ab 90030000 		.4byte	.LASF54
 2105 02af 0C       		.byte	0xc
 2106 02b0 13       		.uleb128 0x13
 2107 02b1 C6000000 		.4byte	.LASF55
 2108 02b5 0D       		.byte	0xd
 2109 02b6 13       		.uleb128 0x13
 2110 02b7 BB060000 		.4byte	.LASF56
 2111 02bb 0E       		.byte	0xe
 2112 02bc 13       		.uleb128 0x13
 2113 02bd 7A020000 		.4byte	.LASF57
 2114 02c1 0F       		.byte	0xf
 2115 02c2 13       		.uleb128 0x13
 2116 02c3 90020000 		.4byte	.LASF58
 2117 02c7 10       		.byte	0x10
 2118 02c8 13       		.uleb128 0x13
 2119 02c9 A6020000 		.4byte	.LASF59
 2120 02cd 11       		.byte	0x11
 2121 02ce 13       		.uleb128 0x13
 2122 02cf BC020000 		.4byte	.LASF60
 2123 02d3 12       		.byte	0x12
 2124 02d4 13       		.uleb128 0x13
 2125 02d5 D2020000 		.4byte	.LASF61
 2126 02d9 13       		.byte	0x13
 2127 02da 13       		.uleb128 0x13
 2128 02db 07040000 		.4byte	.LASF62
 2129 02df 14       		.byte	0x14
 2130 02e0 13       		.uleb128 0x13
 2131 02e1 1D040000 		.4byte	.LASF63
 2132 02e5 15       		.byte	0x15
 2133 02e6 13       		.uleb128 0x13
 2134 02e7 33040000 		.4byte	.LASF64
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 67


 2135 02eb 16       		.byte	0x16
 2136 02ec 13       		.uleb128 0x13
 2137 02ed 49040000 		.4byte	.LASF65
 2138 02f1 17       		.byte	0x17
 2139 02f2 13       		.uleb128 0x13
 2140 02f3 8D080000 		.4byte	.LASF66
 2141 02f7 18       		.byte	0x18
 2142 02f8 13       		.uleb128 0x13
 2143 02f9 A6080000 		.4byte	.LASF67
 2144 02fd 19       		.byte	0x19
 2145 02fe 13       		.uleb128 0x13
 2146 02ff B7090000 		.4byte	.LASF68
 2147 0303 1A       		.byte	0x1a
 2148 0304 13       		.uleb128 0x13
 2149 0305 DA080000 		.4byte	.LASF69
 2150 0309 1B       		.byte	0x1b
 2151 030a 13       		.uleb128 0x13
 2152 030b F3080000 		.4byte	.LASF70
 2153 030f 1C       		.byte	0x1c
 2154 0310 13       		.uleb128 0x13
 2155 0311 0C090000 		.4byte	.LASF71
 2156 0315 1D       		.byte	0x1d
 2157 0316 13       		.uleb128 0x13
 2158 0317 25090000 		.4byte	.LASF72
 2159 031b 1E       		.byte	0x1e
 2160 031c 13       		.uleb128 0x13
 2161 031d 3E090000 		.4byte	.LASF73
 2162 0321 1F       		.byte	0x1f
 2163 0322 00       		.byte	0
 2164 0323 02       		.uleb128 0x2
 2165 0324 840A0000 		.4byte	.LASF74
 2166 0328 08       		.byte	0x8
 2167 0329 66       		.byte	0x66
 2168 032a C3000000 		.4byte	0xc3
 2169 032e 06       		.uleb128 0x6
 2170 032f 04       		.byte	0x4
 2171 0330 08       		.byte	0x8
 2172 0331 7E       		.byte	0x7e
 2173 0332 7D030000 		.4byte	0x37d
 2174 0336 08       		.uleb128 0x8
 2175 0337 636600   		.ascii	"cf\000"
 2176 033a 08       		.byte	0x8
 2177 033b 80       		.byte	0x80
 2178 033c E4000000 		.4byte	0xe4
 2179 0340 04       		.byte	0x4
 2180 0341 05       		.byte	0x5
 2181 0342 1B       		.byte	0x1b
 2182 0343 00       		.byte	0
 2183 0344 07       		.uleb128 0x7
 2184 0345 3F0A0000 		.4byte	.LASF75
 2185 0349 08       		.byte	0x8
 2186 034a 81       		.byte	0x81
 2187 034b E4000000 		.4byte	0xe4
 2188 034f 04       		.byte	0x4
 2189 0350 03       		.byte	0x3
 2190 0351 18       		.byte	0x18
 2191 0352 00       		.byte	0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 68


 2192 0353 07       		.uleb128 0x7
 2193 0354 5C030000 		.4byte	.LASF76
 2194 0358 08       		.byte	0x8
 2195 0359 84       		.byte	0x84
 2196 035a E4000000 		.4byte	0xe4
 2197 035e 04       		.byte	0x4
 2198 035f 02       		.byte	0x2
 2199 0360 16       		.byte	0x16
 2200 0361 00       		.byte	0
 2201 0362 08       		.uleb128 0x8
 2202 0363 7700     		.ascii	"w\000"
 2203 0365 08       		.byte	0x8
 2204 0366 86       		.byte	0x86
 2205 0367 E4000000 		.4byte	0xe4
 2206 036b 04       		.byte	0x4
 2207 036c 0B       		.byte	0xb
 2208 036d 0B       		.byte	0xb
 2209 036e 00       		.byte	0
 2210 036f 08       		.uleb128 0x8
 2211 0370 6800     		.ascii	"h\000"
 2212 0372 08       		.byte	0x8
 2213 0373 87       		.byte	0x87
 2214 0374 E4000000 		.4byte	0xe4
 2215 0378 04       		.byte	0x4
 2216 0379 0B       		.byte	0xb
 2217 037a 00       		.byte	0
 2218 037b 00       		.byte	0
 2219 037c 00       		.byte	0
 2220 037d 02       		.uleb128 0x2
 2221 037e D3010000 		.4byte	.LASF77
 2222 0382 08       		.byte	0x8
 2223 0383 88       		.byte	0x88
 2224 0384 2E030000 		.4byte	0x32e
 2225 0388 06       		.uleb128 0x6
 2226 0389 0C       		.byte	0xc
 2227 038a 08       		.byte	0x8
 2228 038b 8D       		.byte	0x8d
 2229 038c B5030000 		.4byte	0x3b5
 2230 0390 0C       		.uleb128 0xc
 2231 0391 E80A0000 		.4byte	.LASF78
 2232 0395 08       		.byte	0x8
 2233 0396 8E       		.byte	0x8e
 2234 0397 7D030000 		.4byte	0x37d
 2235 039b 00       		.byte	0
 2236 039c 0C       		.uleb128 0xc
 2237 039d DA040000 		.4byte	.LASF79
 2238 03a1 08       		.byte	0x8
 2239 03a2 8F       		.byte	0x8f
 2240 03a3 E4000000 		.4byte	0xe4
 2241 03a7 04       		.byte	0x4
 2242 03a8 0C       		.uleb128 0xc
 2243 03a9 F2000000 		.4byte	.LASF80
 2244 03ad 08       		.byte	0x8
 2245 03ae 90       		.byte	0x90
 2246 03af B5030000 		.4byte	0x3b5
 2247 03b3 08       		.byte	0x8
 2248 03b4 00       		.byte	0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 69


 2249 03b5 10       		.uleb128 0x10
 2250 03b6 04       		.byte	0x4
 2251 03b7 BB030000 		.4byte	0x3bb
 2252 03bb 11       		.uleb128 0x11
 2253 03bc C3000000 		.4byte	0xc3
 2254 03c0 02       		.uleb128 0x2
 2255 03c1 7C040000 		.4byte	.LASF81
 2256 03c5 08       		.byte	0x8
 2257 03c6 91       		.byte	0x91
 2258 03c7 88030000 		.4byte	0x388
 2259 03cb 10       		.uleb128 0x10
 2260 03cc 04       		.byte	0x4
 2261 03cd D1030000 		.4byte	0x3d1
 2262 03d1 14       		.uleb128 0x14
 2263 03d2 03       		.uleb128 0x3
 2264 03d3 01       		.byte	0x1
 2265 03d4 02       		.byte	0x2
 2266 03d5 A7060000 		.4byte	.LASF82
 2267 03d9 10       		.uleb128 0x10
 2268 03da 04       		.byte	0x4
 2269 03db FB010000 		.4byte	0x1fb
 2270 03df 10       		.uleb128 0x10
 2271 03e0 04       		.byte	0x4
 2272 03e1 E5030000 		.4byte	0x3e5
 2273 03e5 11       		.uleb128 0x11
 2274 03e6 FB010000 		.4byte	0x1fb
 2275 03ea 10       		.uleb128 0x10
 2276 03eb 04       		.byte	0x4
 2277 03ec C3000000 		.4byte	0xc3
 2278 03f0 12       		.uleb128 0x12
 2279 03f1 01       		.byte	0x1
 2280 03f2 42000000 		.4byte	0x42
 2281 03f6 09       		.byte	0x9
 2282 03f7 23       		.byte	0x23
 2283 03f8 15040000 		.4byte	0x415
 2284 03fc 13       		.uleb128 0x13
 2285 03fd 90000000 		.4byte	.LASF83
 2286 0401 00       		.byte	0
 2287 0402 13       		.uleb128 0x13
 2288 0403 11000000 		.4byte	.LASF84
 2289 0407 01       		.byte	0x1
 2290 0408 13       		.uleb128 0x13
 2291 0409 4B0A0000 		.4byte	.LASF85
 2292 040d 02       		.byte	0x2
 2293 040e 13       		.uleb128 0x13
 2294 040f E7090000 		.4byte	.LASF86
 2295 0413 03       		.byte	0x3
 2296 0414 00       		.byte	0
 2297 0415 02       		.uleb128 0x2
 2298 0416 9E040000 		.4byte	.LASF87
 2299 041a 09       		.byte	0x9
 2300 041b 2A       		.byte	0x2a
 2301 041c C3000000 		.4byte	0xc3
 2302 0420 02       		.uleb128 0x2
 2303 0421 51060000 		.4byte	.LASF88
 2304 0425 09       		.byte	0x9
 2305 0426 38       		.byte	0x38
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 70


 2306 0427 2B040000 		.4byte	0x42b
 2307 042b 10       		.uleb128 0x10
 2308 042c 04       		.byte	0x4
 2309 042d 31040000 		.4byte	0x431
 2310 0431 15       		.uleb128 0x15
 2311 0432 4B020000 		.4byte	0x24b
 2312 0436 4A040000 		.4byte	0x44a
 2313 043a 16       		.uleb128 0x16
 2314 043b 4A040000 		.4byte	0x44a
 2315 043f 16       		.uleb128 0x16
 2316 0440 CB030000 		.4byte	0x3cb
 2317 0444 16       		.uleb128 0x16
 2318 0445 99040000 		.4byte	0x499
 2319 0449 00       		.byte	0
 2320 044a 10       		.uleb128 0x10
 2321 044b 04       		.byte	0x4
 2322 044c 50040000 		.4byte	0x450
 2323 0450 17       		.uleb128 0x17
 2324 0451 72090000 		.4byte	.LASF95
 2325 0455 14       		.byte	0x14
 2326 0456 09       		.byte	0x9
 2327 0457 57       		.byte	0x57
 2328 0458 99040000 		.4byte	0x499
 2329 045c 0C       		.uleb128 0xc
 2330 045d 82060000 		.4byte	.LASF89
 2331 0461 09       		.byte	0x9
 2332 0462 58       		.byte	0x58
 2333 0463 20040000 		.4byte	0x420
 2334 0467 00       		.byte	0
 2335 0468 0C       		.uleb128 0xc
 2336 0469 B4070000 		.4byte	.LASF90
 2337 046d 09       		.byte	0x9
 2338 046e 59       		.byte	0x59
 2339 046f 9F040000 		.4byte	0x49f
 2340 0473 04       		.byte	0x4
 2341 0474 0C       		.uleb128 0xc
 2342 0475 170A0000 		.4byte	.LASF91
 2343 0479 09       		.byte	0x9
 2344 047a 5A       		.byte	0x5a
 2345 047b 43050000 		.4byte	0x543
 2346 047f 08       		.byte	0x8
 2347 0480 0C       		.uleb128 0xc
 2348 0481 14050000 		.4byte	.LASF92
 2349 0485 09       		.byte	0x9
 2350 0486 5B       		.byte	0x5b
 2351 0487 7C050000 		.4byte	0x57c
 2352 048b 0C       		.byte	0xc
 2353 048c 0C       		.uleb128 0xc
 2354 048d 48030000 		.4byte	.LASF93
 2355 0491 09       		.byte	0x9
 2356 0492 5E       		.byte	0x5e
 2357 0493 12010000 		.4byte	0x112
 2358 0497 10       		.byte	0x10
 2359 0498 00       		.byte	0
 2360 0499 10       		.uleb128 0x10
 2361 049a 04       		.byte	0x4
 2362 049b 7D030000 		.4byte	0x37d
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 71


 2363 049f 02       		.uleb128 0x2
 2364 04a0 9F090000 		.4byte	.LASF94
 2365 04a4 09       		.byte	0x9
 2366 04a5 40       		.byte	0x40
 2367 04a6 AA040000 		.4byte	0x4aa
 2368 04aa 10       		.uleb128 0x10
 2369 04ab 04       		.byte	0x4
 2370 04ac B0040000 		.4byte	0x4b0
 2371 04b0 15       		.uleb128 0x15
 2372 04b1 4B020000 		.4byte	0x24b
 2373 04b5 C4040000 		.4byte	0x4c4
 2374 04b9 16       		.uleb128 0x16
 2375 04ba 4A040000 		.4byte	0x44a
 2376 04be 16       		.uleb128 0x16
 2377 04bf C4040000 		.4byte	0x4c4
 2378 04c3 00       		.byte	0
 2379 04c4 10       		.uleb128 0x10
 2380 04c5 04       		.byte	0x4
 2381 04c6 CA040000 		.4byte	0x4ca
 2382 04ca 17       		.uleb128 0x17
 2383 04cb D0060000 		.4byte	.LASF96
 2384 04cf 20       		.byte	0x20
 2385 04d0 09       		.byte	0x9
 2386 04d1 63       		.byte	0x63
 2387 04d2 43050000 		.4byte	0x543
 2388 04d6 0C       		.uleb128 0xc
 2389 04d7 90050000 		.4byte	.LASF97
 2390 04db 09       		.byte	0x9
 2391 04dc 65       		.byte	0x65
 2392 04dd A8050000 		.4byte	0x5a8
 2393 04e1 00       		.byte	0
 2394 04e2 0D       		.uleb128 0xd
 2395 04e3 73726300 		.ascii	"src\000"
 2396 04e7 09       		.byte	0x9
 2397 04e8 68       		.byte	0x68
 2398 04e9 CB030000 		.4byte	0x3cb
 2399 04ed 04       		.byte	0x4
 2400 04ee 0C       		.uleb128 0xc
 2401 04ef 07050000 		.4byte	.LASF98
 2402 04f3 09       		.byte	0x9
 2403 04f4 6B       		.byte	0x6b
 2404 04f5 EF010000 		.4byte	0x1ef
 2405 04f9 08       		.byte	0x8
 2406 04fa 0C       		.uleb128 0xc
 2407 04fb 8F010000 		.4byte	.LASF99
 2408 04ff 09       		.byte	0x9
 2409 0500 6E       		.byte	0x6e
 2410 0501 15040000 		.4byte	0x415
 2411 0505 0A       		.byte	0xa
 2412 0506 0C       		.uleb128 0xc
 2413 0507 E80A0000 		.4byte	.LASF78
 2414 050b 09       		.byte	0x9
 2415 050c 71       		.byte	0x71
 2416 050d 7D030000 		.4byte	0x37d
 2417 0511 0C       		.byte	0xc
 2418 0512 0C       		.uleb128 0xc
 2419 0513 00000000 		.4byte	.LASF100
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 72


 2420 0517 09       		.byte	0x9
 2421 0518 75       		.byte	0x75
 2422 0519 B5030000 		.4byte	0x3b5
 2423 051d 10       		.byte	0x10
 2424 051e 0C       		.uleb128 0xc
 2425 051f 54010000 		.4byte	.LASF101
 2426 0523 09       		.byte	0x9
 2427 0524 79       		.byte	0x79
 2428 0525 E4000000 		.4byte	0xe4
 2429 0529 14       		.byte	0x14
 2430 052a 0C       		.uleb128 0xc
 2431 052b E4040000 		.4byte	.LASF102
 2432 052f 09       		.byte	0x9
 2433 0530 7D       		.byte	0x7d
 2434 0531 27020000 		.4byte	0x227
 2435 0535 18       		.byte	0x18
 2436 0536 0C       		.uleb128 0xc
 2437 0537 48030000 		.4byte	.LASF93
 2438 053b 09       		.byte	0x9
 2439 053c 80       		.byte	0x80
 2440 053d 10010000 		.4byte	0x110
 2441 0541 1C       		.byte	0x1c
 2442 0542 00       		.byte	0
 2443 0543 02       		.uleb128 0x2
 2444 0544 34060000 		.4byte	.LASF103
 2445 0548 09       		.byte	0x9
 2446 0549 4D       		.byte	0x4d
 2447 054a 4E050000 		.4byte	0x54e
 2448 054e 10       		.uleb128 0x10
 2449 054f 04       		.byte	0x4
 2450 0550 54050000 		.4byte	0x554
 2451 0554 15       		.uleb128 0x15
 2452 0555 4B020000 		.4byte	0x24b
 2453 0559 7C050000 		.4byte	0x57c
 2454 055d 16       		.uleb128 0x16
 2455 055e 4A040000 		.4byte	0x44a
 2456 0562 16       		.uleb128 0x16
 2457 0563 C4040000 		.4byte	0x4c4
 2458 0567 16       		.uleb128 0x16
 2459 0568 05010000 		.4byte	0x105
 2460 056c 16       		.uleb128 0x16
 2461 056d 05010000 		.4byte	0x105
 2462 0571 16       		.uleb128 0x16
 2463 0572 05010000 		.4byte	0x105
 2464 0576 16       		.uleb128 0x16
 2465 0577 EA030000 		.4byte	0x3ea
 2466 057b 00       		.byte	0
 2467 057c 02       		.uleb128 0x2
 2468 057d B70A0000 		.4byte	.LASF104
 2469 0581 09       		.byte	0x9
 2470 0582 55       		.byte	0x55
 2471 0583 87050000 		.4byte	0x587
 2472 0587 10       		.uleb128 0x10
 2473 0588 04       		.byte	0x4
 2474 0589 8D050000 		.4byte	0x58d
 2475 058d 18       		.uleb128 0x18
 2476 058e 9D050000 		.4byte	0x59d
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 73


 2477 0592 16       		.uleb128 0x16
 2478 0593 4A040000 		.4byte	0x44a
 2479 0597 16       		.uleb128 0x16
 2480 0598 C4040000 		.4byte	0x4c4
 2481 059c 00       		.byte	0
 2482 059d 02       		.uleb128 0x2
 2483 059e 98050000 		.4byte	.LASF105
 2484 05a2 09       		.byte	0x9
 2485 05a3 60       		.byte	0x60
 2486 05a4 50040000 		.4byte	0x450
 2487 05a8 10       		.uleb128 0x10
 2488 05a9 04       		.byte	0x4
 2489 05aa 9D050000 		.4byte	0x59d
 2490 05ae 02       		.uleb128 0x2
 2491 05af 6D080000 		.4byte	.LASF106
 2492 05b3 09       		.byte	0x9
 2493 05b4 81       		.byte	0x81
 2494 05b5 CA040000 		.4byte	0x4ca
 2495 05b9 02       		.uleb128 0x2
 2496 05ba 0A080000 		.4byte	.LASF107
 2497 05be 0A       		.byte	0xa
 2498 05bf 1E       		.byte	0x1e
 2499 05c0 C3000000 		.4byte	0xc3
 2500 05c4 06       		.uleb128 0x6
 2501 05c5 0C       		.byte	0xc
 2502 05c6 0A       		.byte	0xa
 2503 05c7 21       		.byte	0x21
 2504 05c8 F1050000 		.4byte	0x5f1
 2505 05cc 0C       		.uleb128 0xc
 2506 05cd 0D050000 		.4byte	.LASF108
 2507 05d1 0A       		.byte	0xa
 2508 05d2 22       		.byte	0x22
 2509 05d3 E4000000 		.4byte	0xe4
 2510 05d7 00       		.byte	0
 2511 05d8 0C       		.uleb128 0xc
 2512 05d9 CD070000 		.4byte	.LASF109
 2513 05dd 0A       		.byte	0xa
 2514 05de 23       		.byte	0x23
 2515 05df F1050000 		.4byte	0x5f1
 2516 05e3 04       		.byte	0x4
 2517 05e4 0C       		.uleb128 0xc
 2518 05e5 71050000 		.4byte	.LASF110
 2519 05e9 0A       		.byte	0xa
 2520 05ea 24       		.byte	0x24
 2521 05eb F1050000 		.4byte	0x5f1
 2522 05ef 08       		.byte	0x8
 2523 05f0 00       		.byte	0
 2524 05f1 10       		.uleb128 0x10
 2525 05f2 04       		.byte	0x4
 2526 05f3 B9050000 		.4byte	0x5b9
 2527 05f7 02       		.uleb128 0x2
 2528 05f8 21010000 		.4byte	.LASF111
 2529 05fc 0A       		.byte	0xa
 2530 05fd 25       		.byte	0x25
 2531 05fe C4050000 		.4byte	0x5c4
 2532 0602 06       		.uleb128 0x6
 2533 0603 08       		.byte	0x8
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 74


 2534 0604 01       		.byte	0x1
 2535 0605 1D       		.byte	0x1d
 2536 0606 23060000 		.4byte	0x623
 2537 060a 0C       		.uleb128 0xc
 2538 060b D2070000 		.4byte	.LASF112
 2539 060f 01       		.byte	0x1
 2540 0610 21       		.byte	0x21
 2541 0611 23060000 		.4byte	0x623
 2542 0615 00       		.byte	0
 2543 0616 0D       		.uleb128 0xd
 2544 0617 6F706100 		.ascii	"opa\000"
 2545 061b 01       		.byte	0x1
 2546 061c 22       		.byte	0x22
 2547 061d D9030000 		.4byte	0x3d9
 2548 0621 04       		.byte	0x4
 2549 0622 00       		.byte	0
 2550 0623 10       		.uleb128 0x10
 2551 0624 04       		.byte	0x4
 2552 0625 EF010000 		.4byte	0x1ef
 2553 0629 02       		.uleb128 0x2
 2554 062a 1D050000 		.4byte	.LASF113
 2555 062e 01       		.byte	0x1
 2556 062f 23       		.byte	0x23
 2557 0630 02060000 		.4byte	0x602
 2558 0634 19       		.uleb128 0x19
 2559 0635 26060000 		.4byte	.LASF162
 2560 0639 02       		.byte	0x2
 2561 063a 8602     		.2byte	0x286
 2562 063c EF010000 		.4byte	0x1ef
 2563 0640 03       		.byte	0x3
 2564 0641 64060000 		.4byte	0x664
 2565 0645 1A       		.uleb128 0x1a
 2566 0646 7200     		.ascii	"r\000"
 2567 0648 02       		.byte	0x2
 2568 0649 8602     		.2byte	0x286
 2569 064b C3000000 		.4byte	0xc3
 2570 064f 1A       		.uleb128 0x1a
 2571 0650 6700     		.ascii	"g\000"
 2572 0652 02       		.byte	0x2
 2573 0653 8602     		.2byte	0x286
 2574 0655 C3000000 		.4byte	0xc3
 2575 0659 1A       		.uleb128 0x1a
 2576 065a 6200     		.ascii	"b\000"
 2577 065c 02       		.byte	0x2
 2578 065d 8602     		.2byte	0x286
 2579 065f C3000000 		.4byte	0xc3
 2580 0663 00       		.byte	0
 2581 0664 1B       		.uleb128 0x1b
 2582 0665 EF0A0000 		.4byte	.LASF119
 2583 0669 01       		.byte	0x1
 2584 066a 2102     		.2byte	0x221
 2585 066c 4B020000 		.4byte	0x24b
 2586 0670 00000000 		.4byte	.LFB52
 2587 0674 04000000 		.4byte	.LFE52-.LFB52
 2588 0678 01       		.uleb128 0x1
 2589 0679 9C       		.byte	0x9c
 2590 067a C4060000 		.4byte	0x6c4
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 75


 2591 067e 1C       		.uleb128 0x1c
 2592 067f 64736300 		.ascii	"dsc\000"
 2593 0683 01       		.byte	0x1
 2594 0684 2102     		.2byte	0x221
 2595 0686 C4060000 		.4byte	0x6c4
 2596 068a 00000000 		.4byte	.LLST0
 2597 068e 1D       		.uleb128 0x1d
 2598 068f 7800     		.ascii	"x\000"
 2599 0691 01       		.byte	0x1
 2600 0692 2102     		.2byte	0x221
 2601 0694 05010000 		.4byte	0x105
 2602 0698 01       		.uleb128 0x1
 2603 0699 51       		.byte	0x51
 2604 069a 1D       		.uleb128 0x1d
 2605 069b 7900     		.ascii	"y\000"
 2606 069d 01       		.byte	0x1
 2607 069e 2102     		.2byte	0x221
 2608 06a0 05010000 		.4byte	0x105
 2609 06a4 01       		.uleb128 0x1
 2610 06a5 52       		.byte	0x52
 2611 06a6 1D       		.uleb128 0x1d
 2612 06a7 6C656E00 		.ascii	"len\000"
 2613 06ab 01       		.byte	0x1
 2614 06ac 2202     		.2byte	0x222
 2615 06ae 05010000 		.4byte	0x105
 2616 06b2 01       		.uleb128 0x1
 2617 06b3 53       		.byte	0x53
 2618 06b4 1D       		.uleb128 0x1d
 2619 06b5 62756600 		.ascii	"buf\000"
 2620 06b9 01       		.byte	0x1
 2621 06ba 2202     		.2byte	0x222
 2622 06bc EA030000 		.4byte	0x3ea
 2623 06c0 02       		.uleb128 0x2
 2624 06c1 91       		.byte	0x91
 2625 06c2 00       		.sleb128 0
 2626 06c3 00       		.byte	0
 2627 06c4 10       		.uleb128 0x10
 2628 06c5 04       		.byte	0x4
 2629 06c6 AE050000 		.4byte	0x5ae
 2630 06ca 1E       		.uleb128 0x1e
 2631 06cb B2050000 		.4byte	.LASF114
 2632 06cf 01       		.byte	0x1
 2633 06d0 0901     		.2byte	0x109
 2634 06d2 4B020000 		.4byte	0x24b
 2635 06d6 00000000 		.4byte	.LFB48
 2636 06da 6E000000 		.4byte	.LFE48-.LFB48
 2637 06de 01       		.uleb128 0x1
 2638 06df 9C       		.byte	0x9c
 2639 06e0 4E070000 		.4byte	0x74e
 2640 06e4 1F       		.uleb128 0x1f
 2641 06e5 90050000 		.4byte	.LASF97
 2642 06e9 01       		.byte	0x1
 2643 06ea 0901     		.2byte	0x109
 2644 06ec A8050000 		.4byte	0x5a8
 2645 06f0 21000000 		.4byte	.LLST1
 2646 06f4 1C       		.uleb128 0x1c
 2647 06f5 73726300 		.ascii	"src\000"
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 76


 2648 06f9 01       		.byte	0x1
 2649 06fa 0901     		.2byte	0x109
 2650 06fc CB030000 		.4byte	0x3cb
 2651 0700 42000000 		.4byte	.LLST2
 2652 0704 1F       		.uleb128 0x1f
 2653 0705 E80A0000 		.4byte	.LASF78
 2654 0709 01       		.byte	0x1
 2655 070a 0901     		.2byte	0x109
 2656 070c 99040000 		.4byte	0x499
 2657 0710 60000000 		.4byte	.LLST3
 2658 0714 20       		.uleb128 0x20
 2659 0715 8F010000 		.4byte	.LASF99
 2660 0719 01       		.byte	0x1
 2661 071a 0D01     		.2byte	0x10d
 2662 071c 15040000 		.4byte	0x415
 2663 0720 7E000000 		.4byte	.LLST4
 2664 0724 21       		.uleb128 0x21
 2665 0725 00000000 		.4byte	.Ldebug_ranges0+0
 2666 0729 3D070000 		.4byte	0x73d
 2667 072d 22       		.uleb128 0x22
 2668 072e 636600   		.ascii	"cf\000"
 2669 0731 01       		.byte	0x1
 2670 0732 0F01     		.2byte	0x10f
 2671 0734 23030000 		.4byte	0x323
 2672 0738 B2000000 		.4byte	.LLST5
 2673 073c 00       		.byte	0
 2674 073d 23       		.uleb128 0x23
 2675 073e 0C000000 		.4byte	.LVL4
 2676 0742 FE110000 		.4byte	0x11fe
 2677 0746 24       		.uleb128 0x24
 2678 0747 01       		.uleb128 0x1
 2679 0748 50       		.byte	0x50
 2680 0749 02       		.uleb128 0x2
 2681 074a 75       		.byte	0x75
 2682 074b 00       		.sleb128 0
 2683 074c 00       		.byte	0
 2684 074d 00       		.byte	0
 2685 074e 25       		.uleb128 0x25
 2686 074f C2030000 		.4byte	.LASF136
 2687 0753 01       		.byte	0x1
 2688 0754 0702     		.2byte	0x207
 2689 0756 00000000 		.4byte	.LFB51
 2690 075a 24000000 		.4byte	.LFE51-.LFB51
 2691 075e 01       		.uleb128 0x1
 2692 075f 9C       		.byte	0x9c
 2693 0760 B5070000 		.4byte	0x7b5
 2694 0764 1F       		.uleb128 0x1f
 2695 0765 90050000 		.4byte	.LASF97
 2696 0769 01       		.byte	0x1
 2697 076a 0702     		.2byte	0x207
 2698 076c A8050000 		.4byte	0x5a8
 2699 0770 EA000000 		.4byte	.LLST6
 2700 0774 1C       		.uleb128 0x1c
 2701 0775 64736300 		.ascii	"dsc\000"
 2702 0779 01       		.byte	0x1
 2703 077a 0702     		.2byte	0x207
 2704 077c C4060000 		.4byte	0x6c4
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 77


 2705 0780 0B010000 		.4byte	.LLST7
 2706 0784 26       		.uleb128 0x26
 2707 0785 48030000 		.4byte	.LASF93
 2708 0789 01       		.byte	0x1
 2709 078a 0B02     		.2byte	0x20b
 2710 078c B5070000 		.4byte	0x7b5
 2711 0790 01       		.uleb128 0x1
 2712 0791 55       		.byte	0x55
 2713 0792 27       		.uleb128 0x27
 2714 0793 10000000 		.4byte	.LVL17
 2715 0797 09120000 		.4byte	0x1209
 2716 079b 27       		.uleb128 0x27
 2717 079c 18000000 		.4byte	.LVL18
 2718 07a0 09120000 		.4byte	0x1209
 2719 07a4 23       		.uleb128 0x23
 2720 07a5 1E000000 		.4byte	.LVL19
 2721 07a9 09120000 		.4byte	0x1209
 2722 07ad 24       		.uleb128 0x24
 2723 07ae 01       		.uleb128 0x1
 2724 07af 50       		.byte	0x50
 2725 07b0 02       		.uleb128 0x2
 2726 07b1 75       		.byte	0x75
 2727 07b2 00       		.sleb128 0
 2728 07b3 00       		.byte	0
 2729 07b4 00       		.byte	0
 2730 07b5 10       		.uleb128 0x10
 2731 07b6 04       		.byte	0x4
 2732 07b7 29060000 		.4byte	0x629
 2733 07bb 1E       		.uleb128 0x1e
 2734 07bc 82090000 		.4byte	.LASF115
 2735 07c0 01       		.byte	0x1
 2736 07c1 3F01     		.2byte	0x13f
 2737 07c3 4B020000 		.4byte	0x24b
 2738 07c7 00000000 		.4byte	.LFB49
 2739 07cb 54010000 		.4byte	.LFE49-.LFB49
 2740 07cf 01       		.uleb128 0x1
 2741 07d0 9C       		.byte	0x9c
 2742 07d1 89090000 		.4byte	0x989
 2743 07d5 1F       		.uleb128 0x1f
 2744 07d6 90050000 		.4byte	.LASF97
 2745 07da 01       		.byte	0x1
 2746 07db 3F01     		.2byte	0x13f
 2747 07dd A8050000 		.4byte	0x5a8
 2748 07e1 37010000 		.4byte	.LLST8
 2749 07e5 1C       		.uleb128 0x1c
 2750 07e6 64736300 		.ascii	"dsc\000"
 2751 07ea 01       		.byte	0x1
 2752 07eb 3F01     		.2byte	0x13f
 2753 07ed C4060000 		.4byte	0x6c4
 2754 07f1 9D010000 		.4byte	.LLST9
 2755 07f5 22       		.uleb128 0x22
 2756 07f6 636600   		.ascii	"cf\000"
 2757 07f9 01       		.byte	0x1
 2758 07fa 7101     		.2byte	0x171
 2759 07fc 23030000 		.4byte	0x323
 2760 0800 F5010000 		.4byte	.LLST10
 2761 0804 21       		.uleb128 0x21
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 78


 2762 0805 18000000 		.4byte	.Ldebug_ranges0+0x18
 2763 0809 7F090000 		.4byte	0x97f
 2764 080d 20       		.uleb128 0x20
 2765 080e 02010000 		.4byte	.LASF116
 2766 0812 01       		.byte	0x1
 2767 0813 8501     		.2byte	0x185
 2768 0815 C3000000 		.4byte	0xc3
 2769 0819 2D020000 		.4byte	.LLST11
 2770 081d 20       		.uleb128 0x20
 2771 081e 51050000 		.4byte	.LASF117
 2772 0822 01       		.byte	0x1
 2773 0823 8601     		.2byte	0x186
 2774 0825 E4000000 		.4byte	0xe4
 2775 0829 40020000 		.4byte	.LLST12
 2776 082d 20       		.uleb128 0x20
 2777 082e 48030000 		.4byte	.LASF93
 2778 0832 01       		.byte	0x1
 2779 0833 9401     		.2byte	0x194
 2780 0835 B5070000 		.4byte	0x7b5
 2781 0839 5E020000 		.4byte	.LLST13
 2782 083d 28       		.uleb128 0x28
 2783 083e DA000000 		.4byte	.LBB9
 2784 0842 46000000 		.4byte	.LBE9-.LBB9
 2785 0846 95080000 		.4byte	0x895
 2786 084a 20       		.uleb128 0x20
 2787 084b A6010000 		.4byte	.LASF118
 2788 084f 01       		.byte	0x1
 2789 0850 B101     		.2byte	0x1b1
 2790 0852 89090000 		.4byte	0x989
 2791 0856 7C020000 		.4byte	.LLST14
 2792 085a 22       		.uleb128 0x22
 2793 085b 6900     		.ascii	"i\000"
 2794 085d 01       		.byte	0x1
 2795 085e B401     		.2byte	0x1b4
 2796 0860 E4000000 		.4byte	0xe4
 2797 0864 8F020000 		.4byte	.LLST15
 2798 0868 29       		.uleb128 0x29
 2799 0869 34060000 		.4byte	0x634
 2800 086d F4000000 		.4byte	.LBB10
 2801 0871 1C000000 		.4byte	.LBE10-.LBB10
 2802 0875 01       		.byte	0x1
 2803 0876 B601     		.2byte	0x1b6
 2804 0878 2A       		.uleb128 0x2a
 2805 0879 59060000 		.4byte	0x659
 2806 087d AE020000 		.4byte	.LLST16
 2807 0881 2A       		.uleb128 0x2a
 2808 0882 4F060000 		.4byte	0x64f
 2809 0886 CD020000 		.4byte	.LLST17
 2810 088a 2A       		.uleb128 0x2a
 2811 088b 45060000 		.4byte	0x645
 2812 088f EC020000 		.4byte	.LLST18
 2813 0893 00       		.byte	0
 2814 0894 00       		.byte	0
 2815 0895 27       		.uleb128 0x27
 2816 0896 4C000000 		.4byte	.LVL24
 2817 089a 14120000 		.4byte	0x1214
 2818 089e 2B       		.uleb128 0x2b
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 79


 2819 089f 5E000000 		.4byte	.LVL27
 2820 08a3 1F120000 		.4byte	0x121f
 2821 08a7 B1080000 		.4byte	0x8b1
 2822 08ab 24       		.uleb128 0x24
 2823 08ac 01       		.uleb128 0x1
 2824 08ad 50       		.byte	0x50
 2825 08ae 01       		.uleb128 0x1
 2826 08af 38       		.byte	0x38
 2827 08b0 00       		.byte	0
 2828 08b1 27       		.uleb128 0x27
 2829 08b2 64000000 		.4byte	.LVL28
 2830 08b6 2A120000 		.4byte	0x122a
 2831 08ba 2B       		.uleb128 0x2b
 2832 08bb 70000000 		.4byte	.LVL29
 2833 08bf 35120000 		.4byte	0x1235
 2834 08c3 D1080000 		.4byte	0x8d1
 2835 08c7 24       		.uleb128 0x24
 2836 08c8 01       		.uleb128 0x1
 2837 08c9 50       		.byte	0x50
 2838 08ca 05       		.uleb128 0x5
 2839 08cb 03       		.byte	0x3
 2840 08cc 00000000 		.4byte	.LC2
 2841 08d0 00       		.byte	0
 2842 08d1 2B       		.uleb128 0x2b
 2843 08d2 7E000000 		.4byte	.LVL30
 2844 08d6 4E070000 		.4byte	0x74e
 2845 08da EB080000 		.4byte	0x8eb
 2846 08de 24       		.uleb128 0x24
 2847 08df 01       		.uleb128 0x1
 2848 08e0 50       		.byte	0x50
 2849 08e1 02       		.uleb128 0x2
 2850 08e2 77       		.byte	0x77
 2851 08e3 00       		.sleb128 0
 2852 08e4 24       		.uleb128 0x24
 2853 08e5 01       		.uleb128 0x1
 2854 08e6 51       		.byte	0x51
 2855 08e7 02       		.uleb128 0x2
 2856 08e8 74       		.byte	0x74
 2857 08e9 00       		.sleb128 0
 2858 08ea 00       		.byte	0
 2859 08eb 2B       		.uleb128 0x2b
 2860 08ec 88000000 		.4byte	.LVL31
 2861 08f0 40120000 		.4byte	0x1240
 2862 08f4 FE080000 		.4byte	0x8fe
 2863 08f8 24       		.uleb128 0x24
 2864 08f9 01       		.uleb128 0x1
 2865 08fa 51       		.byte	0x51
 2866 08fb 01       		.uleb128 0x1
 2867 08fc 38       		.byte	0x38
 2868 08fd 00       		.byte	0
 2869 08fe 2B       		.uleb128 0x2b
 2870 08ff 92000000 		.4byte	.LVL33
 2871 0903 1F120000 		.4byte	0x121f
 2872 0907 14090000 		.4byte	0x914
 2873 090b 24       		.uleb128 0x24
 2874 090c 01       		.uleb128 0x1
 2875 090d 50       		.byte	0x50
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 80


 2876 090e 04       		.uleb128 0x4
 2877 090f 78       		.byte	0x78
 2878 0910 00       		.sleb128 0
 2879 0911 31       		.byte	0x31
 2880 0912 24       		.byte	0x24
 2881 0913 00       		.byte	0
 2882 0914 27       		.uleb128 0x27
 2883 0915 98000000 		.4byte	.LVL34
 2884 0919 2A120000 		.4byte	0x122a
 2885 091d 2B       		.uleb128 0x2b
 2886 091e A4000000 		.4byte	.LVL35
 2887 0922 35120000 		.4byte	0x1235
 2888 0926 34090000 		.4byte	0x934
 2889 092a 24       		.uleb128 0x24
 2890 092b 01       		.uleb128 0x1
 2891 092c 50       		.byte	0x50
 2892 092d 05       		.uleb128 0x5
 2893 092e 03       		.byte	0x3
 2894 092f 00000000 		.4byte	.LC2
 2895 0933 00       		.byte	0
 2896 0934 2B       		.uleb128 0x2b
 2897 0935 AC000000 		.4byte	.LVL36
 2898 0939 1F120000 		.4byte	0x121f
 2899 093d 48090000 		.4byte	0x948
 2900 0941 24       		.uleb128 0x24
 2901 0942 01       		.uleb128 0x1
 2902 0943 50       		.byte	0x50
 2903 0944 02       		.uleb128 0x2
 2904 0945 78       		.byte	0x78
 2905 0946 00       		.sleb128 0
 2906 0947 00       		.byte	0
 2907 0948 27       		.uleb128 0x27
 2908 0949 B2000000 		.4byte	.LVL37
 2909 094d 2A120000 		.4byte	0x122a
 2910 0951 2B       		.uleb128 0x2b
 2911 0952 BE000000 		.4byte	.LVL38
 2912 0956 35120000 		.4byte	0x1235
 2913 095a 68090000 		.4byte	0x968
 2914 095e 24       		.uleb128 0x24
 2915 095f 01       		.uleb128 0x1
 2916 0960 50       		.byte	0x50
 2917 0961 05       		.uleb128 0x5
 2918 0962 03       		.byte	0x3
 2919 0963 00000000 		.4byte	.LC2
 2920 0967 00       		.byte	0
 2921 0968 23       		.uleb128 0x23
 2922 0969 D0000000 		.4byte	.LVL39
 2923 096d 4E070000 		.4byte	0x74e
 2924 0971 24       		.uleb128 0x24
 2925 0972 01       		.uleb128 0x1
 2926 0973 50       		.byte	0x50
 2927 0974 02       		.uleb128 0x2
 2928 0975 77       		.byte	0x77
 2929 0976 00       		.sleb128 0
 2930 0977 24       		.uleb128 0x24
 2931 0978 01       		.uleb128 0x1
 2932 0979 51       		.byte	0x51
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 81


 2933 097a 02       		.uleb128 0x2
 2934 097b 74       		.byte	0x74
 2935 097c 00       		.sleb128 0
 2936 097d 00       		.byte	0
 2937 097e 00       		.byte	0
 2938 097f 27       		.uleb128 0x27
 2939 0980 3E010000 		.4byte	.LVL50
 2940 0984 4E070000 		.4byte	0x74e
 2941 0988 00       		.byte	0
 2942 0989 10       		.uleb128 0x10
 2943 098a 04       		.byte	0x4
 2944 098b E3010000 		.4byte	0x1e3
 2945 098f 1B       		.uleb128 0x1b
 2946 0990 B0010000 		.4byte	.LASF120
 2947 0994 01       		.byte	0x1
 2948 0995 4402     		.2byte	0x244
 2949 0997 4B020000 		.4byte	0x24b
 2950 099b 00000000 		.4byte	.LFB53
 2951 099f 80010000 		.4byte	.LFE53-.LFB53
 2952 09a3 01       		.uleb128 0x1
 2953 09a4 9C       		.byte	0x9c
 2954 09a5 F20A0000 		.4byte	0xaf2
 2955 09a9 1C       		.uleb128 0x1c
 2956 09aa 64736300 		.ascii	"dsc\000"
 2957 09ae 01       		.byte	0x1
 2958 09af 4402     		.2byte	0x244
 2959 09b1 C4060000 		.4byte	0x6c4
 2960 09b5 0B030000 		.4byte	.LLST19
 2961 09b9 1C       		.uleb128 0x1c
 2962 09ba 7800     		.ascii	"x\000"
 2963 09bc 01       		.byte	0x1
 2964 09bd 4402     		.2byte	0x244
 2965 09bf 05010000 		.4byte	0x105
 2966 09c3 37030000 		.4byte	.LLST20
 2967 09c7 1C       		.uleb128 0x1c
 2968 09c8 7900     		.ascii	"y\000"
 2969 09ca 01       		.byte	0x1
 2970 09cb 4402     		.2byte	0x244
 2971 09cd 05010000 		.4byte	0x105
 2972 09d1 58030000 		.4byte	.LLST21
 2973 09d5 1C       		.uleb128 0x1c
 2974 09d6 6C656E00 		.ascii	"len\000"
 2975 09da 01       		.byte	0x1
 2976 09db 4502     		.2byte	0x245
 2977 09dd 05010000 		.4byte	0x105
 2978 09e1 79030000 		.4byte	.LLST22
 2979 09e5 1C       		.uleb128 0x1c
 2980 09e6 62756600 		.ascii	"buf\000"
 2981 09ea 01       		.byte	0x1
 2982 09eb 4502     		.2byte	0x245
 2983 09ed EA030000 		.4byte	0x3ea
 2984 09f1 9A030000 		.4byte	.LLST23
 2985 09f5 26       		.uleb128 0x26
 2986 09f6 900A0000 		.4byte	.LASF121
 2987 09fa 01       		.byte	0x1
 2988 09fb 4902     		.2byte	0x249
 2989 09fd 020B0000 		.4byte	0xb02
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 82


 2990 0a01 02       		.uleb128 0x2
 2991 0a02 91       		.byte	0x91
 2992 0a03 5C       		.sleb128 -36
 2993 0a04 26       		.uleb128 0x26
 2994 0a05 BC070000 		.4byte	.LASF122
 2995 0a09 01       		.byte	0x1
 2996 0a0a 4A02     		.2byte	0x24a
 2997 0a0c 170B0000 		.4byte	0xb17
 2998 0a10 02       		.uleb128 0x2
 2999 0a11 91       		.byte	0x91
 3000 0a12 58       		.sleb128 -40
 3001 0a13 26       		.uleb128 0x26
 3002 0a14 A4000000 		.4byte	.LASF123
 3003 0a18 01       		.byte	0x1
 3004 0a19 4B02     		.2byte	0x24b
 3005 0a1b 2C0B0000 		.4byte	0xb2c
 3006 0a1f 02       		.uleb128 0x2
 3007 0a20 91       		.byte	0x91
 3008 0a21 48       		.sleb128 -56
 3009 0a22 20       		.uleb128 0x20
 3010 0a23 A9050000 		.4byte	.LASF124
 3011 0a27 01       		.byte	0x1
 3012 0a28 5002     		.2byte	0x250
 3013 0a2a EF010000 		.4byte	0x1ef
 3014 0a2e BA030000 		.4byte	.LLST24
 3015 0a32 22       		.uleb128 0x22
 3016 0a33 6900     		.ascii	"i\000"
 3017 0a35 01       		.byte	0x1
 3018 0a36 5102     		.2byte	0x251
 3019 0a38 05010000 		.4byte	0x105
 3020 0a3c CD030000 		.4byte	.LLST25
 3021 0a40 20       		.uleb128 0x20
 3022 0a41 4A010000 		.4byte	.LASF125
 3023 0a45 01       		.byte	0x1
 3024 0a46 6002     		.2byte	0x260
 3025 0a48 DF030000 		.4byte	0x3df
 3026 0a4c 19040000 		.4byte	.LLST26
 3027 0a50 20       		.uleb128 0x20
 3028 0a51 02010000 		.4byte	.LASF116
 3029 0a55 01       		.byte	0x1
 3030 0a56 6102     		.2byte	0x261
 3031 0a58 C3000000 		.4byte	0xc3
 3032 0a5c 80040000 		.4byte	.LLST27
 3033 0a60 26       		.uleb128 0x26
 3034 0a61 43030000 		.4byte	.LASF126
 3035 0a65 01       		.byte	0x1
 3036 0a66 6202     		.2byte	0x262
 3037 0a68 D9000000 		.4byte	0xd9
 3038 0a6c 01       		.uleb128 0x1
 3039 0a6d 5E       		.byte	0x5e
 3040 0a6e 22       		.uleb128 0x22
 3041 0a6f 7700     		.ascii	"w\000"
 3042 0a71 01       		.byte	0x1
 3043 0a72 6402     		.2byte	0x264
 3044 0a74 05010000 		.4byte	0x105
 3045 0a78 9E040000 		.4byte	.LLST28
 3046 0a7c 22       		.uleb128 0x22
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 83


 3047 0a7d 6F667300 		.ascii	"ofs\000"
 3048 0a81 01       		.byte	0x1
 3049 0a82 6502     		.2byte	0x265
 3050 0a84 E4000000 		.4byte	0xe4
 3051 0a88 22050000 		.4byte	.LLST29
 3052 0a8c 22       		.uleb128 0x22
 3053 0a8d 706F7300 		.ascii	"pos\000"
 3054 0a91 01       		.byte	0x1
 3055 0a92 6602     		.2byte	0x266
 3056 0a94 B8000000 		.4byte	0xb8
 3057 0a98 A8050000 		.4byte	.LLST30
 3058 0a9c 20       		.uleb128 0x20
 3059 0a9d A5030000 		.4byte	.LASF127
 3060 0aa1 01       		.byte	0x1
 3061 0aa2 8902     		.2byte	0x289
 3062 0aa4 B5030000 		.4byte	0x3b5
 3063 0aa8 0B060000 		.4byte	.LLST31
 3064 0aac 28       		.uleb128 0x28
 3065 0aad 18010000 		.4byte	.LBB13
 3066 0ab1 08000000 		.4byte	.LBE13-.LBB13
 3067 0ab5 CA0A0000 		.4byte	0xaca
 3068 0ab9 20       		.uleb128 0x20
 3069 0aba B5000000 		.4byte	.LASF128
 3070 0abe 01       		.byte	0x1
 3071 0abf 8B02     		.2byte	0x28b
 3072 0ac1 310B0000 		.4byte	0xb31
 3073 0ac5 36060000 		.4byte	.LLST32
 3074 0ac9 00       		.byte	0
 3075 0aca 28       		.uleb128 0x28
 3076 0acb 24010000 		.4byte	.LBB14
 3077 0acf 42000000 		.4byte	.LBE14-.LBB14
 3078 0ad3 E80A0000 		.4byte	0xae8
 3079 0ad7 20       		.uleb128 0x20
 3080 0ad8 09000000 		.4byte	.LASF129
 3081 0adc 01       		.byte	0x1
 3082 0add 9C02     		.2byte	0x29c
 3083 0adf C3000000 		.4byte	0xc3
 3084 0ae3 55060000 		.4byte	.LLST33
 3085 0ae7 00       		.byte	0
 3086 0ae8 27       		.uleb128 0x27
 3087 0ae9 5C000000 		.4byte	.LVL65
 3088 0aed 14120000 		.4byte	0x1214
 3089 0af1 00       		.byte	0
 3090 0af2 2C       		.uleb128 0x2c
 3091 0af3 E5030000 		.4byte	0x3e5
 3092 0af7 020B0000 		.4byte	0xb02
 3093 0afb 2D       		.uleb128 0x2d
 3094 0afc 19020000 		.4byte	0x219
 3095 0b00 01       		.byte	0x1
 3096 0b01 00       		.byte	0
 3097 0b02 11       		.uleb128 0x11
 3098 0b03 F20A0000 		.4byte	0xaf2
 3099 0b07 2C       		.uleb128 0x2c
 3100 0b08 E5030000 		.4byte	0x3e5
 3101 0b0c 170B0000 		.4byte	0xb17
 3102 0b10 2D       		.uleb128 0x2d
 3103 0b11 19020000 		.4byte	0x219
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 84


 3104 0b15 03       		.byte	0x3
 3105 0b16 00       		.byte	0
 3106 0b17 11       		.uleb128 0x11
 3107 0b18 070B0000 		.4byte	0xb07
 3108 0b1c 2C       		.uleb128 0x2c
 3109 0b1d E5030000 		.4byte	0x3e5
 3110 0b21 2C0B0000 		.4byte	0xb2c
 3111 0b25 2D       		.uleb128 0x2d
 3112 0b26 19020000 		.4byte	0x219
 3113 0b2a 0F       		.byte	0xf
 3114 0b2b 00       		.byte	0
 3115 0b2c 11       		.uleb128 0x11
 3116 0b2d 1C0B0000 		.4byte	0xb1c
 3117 0b31 10       		.uleb128 0x10
 3118 0b32 04       		.byte	0x4
 3119 0b33 370B0000 		.4byte	0xb37
 3120 0b37 11       		.uleb128 0x11
 3121 0b38 C0030000 		.4byte	0x3c0
 3122 0b3c 1B       		.uleb128 0x1b
 3123 0b3d F8020000 		.4byte	.LASF130
 3124 0b41 01       		.byte	0x1
 3125 0b42 B202     		.2byte	0x2b2
 3126 0b44 4B020000 		.4byte	0x24b
 3127 0b48 00000000 		.4byte	.LFB54
 3128 0b4c 34010000 		.4byte	.LFE54-.LFB54
 3129 0b50 01       		.uleb128 0x1
 3130 0b51 9C       		.byte	0x9c
 3131 0b52 6C0C0000 		.4byte	0xc6c
 3132 0b56 1C       		.uleb128 0x1c
 3133 0b57 64736300 		.ascii	"dsc\000"
 3134 0b5b 01       		.byte	0x1
 3135 0b5c B202     		.2byte	0x2b2
 3136 0b5e C4060000 		.4byte	0x6c4
 3137 0b62 68060000 		.4byte	.LLST34
 3138 0b66 1C       		.uleb128 0x1c
 3139 0b67 7800     		.ascii	"x\000"
 3140 0b69 01       		.byte	0x1
 3141 0b6a B202     		.2byte	0x2b2
 3142 0b6c 05010000 		.4byte	0x105
 3143 0b70 9F060000 		.4byte	.LLST35
 3144 0b74 1C       		.uleb128 0x1c
 3145 0b75 7900     		.ascii	"y\000"
 3146 0b77 01       		.byte	0x1
 3147 0b78 B202     		.2byte	0x2b2
 3148 0b7a 05010000 		.4byte	0x105
 3149 0b7e C0060000 		.4byte	.LLST36
 3150 0b82 1C       		.uleb128 0x1c
 3151 0b83 6C656E00 		.ascii	"len\000"
 3152 0b87 01       		.byte	0x1
 3153 0b88 B302     		.2byte	0x2b3
 3154 0b8a 05010000 		.4byte	0x105
 3155 0b8e E1060000 		.4byte	.LLST37
 3156 0b92 1C       		.uleb128 0x1c
 3157 0b93 62756600 		.ascii	"buf\000"
 3158 0b97 01       		.byte	0x1
 3159 0b98 B302     		.2byte	0x2b3
 3160 0b9a EA030000 		.4byte	0x3ea
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 85


 3161 0b9e 02070000 		.4byte	.LLST38
 3162 0ba2 20       		.uleb128 0x20
 3163 0ba3 02010000 		.4byte	.LASF116
 3164 0ba7 01       		.byte	0x1
 3165 0ba8 B702     		.2byte	0x2b7
 3166 0baa C3000000 		.4byte	0xc3
 3167 0bae 22070000 		.4byte	.LLST39
 3168 0bb2 26       		.uleb128 0x26
 3169 0bb3 43030000 		.4byte	.LASF126
 3170 0bb7 01       		.byte	0x1
 3171 0bb8 B802     		.2byte	0x2b8
 3172 0bba D9000000 		.4byte	0xd9
 3173 0bbe 01       		.uleb128 0x1
 3174 0bbf 5C       		.byte	0x5c
 3175 0bc0 22       		.uleb128 0x22
 3176 0bc1 7700     		.ascii	"w\000"
 3177 0bc3 01       		.byte	0x1
 3178 0bc4 BA02     		.2byte	0x2ba
 3179 0bc6 05010000 		.4byte	0x105
 3180 0bca 40070000 		.4byte	.LLST40
 3181 0bce 22       		.uleb128 0x22
 3182 0bcf 706F7300 		.ascii	"pos\000"
 3183 0bd3 01       		.byte	0x1
 3184 0bd4 BB02     		.2byte	0x2bb
 3185 0bd6 B8000000 		.4byte	0xb8
 3186 0bda C4070000 		.4byte	.LLST41
 3187 0bde 22       		.uleb128 0x22
 3188 0bdf 6F667300 		.ascii	"ofs\000"
 3189 0be3 01       		.byte	0x1
 3190 0be4 BC02     		.2byte	0x2bc
 3191 0be6 E4000000 		.4byte	0xe4
 3192 0bea 27080000 		.4byte	.LLST42
 3193 0bee 26       		.uleb128 0x26
 3194 0bef 48030000 		.4byte	.LASF93
 3195 0bf3 01       		.byte	0x1
 3196 0bf4 DB02     		.2byte	0x2db
 3197 0bf6 B5070000 		.4byte	0x7b5
 3198 0bfa 01       		.uleb128 0x1
 3199 0bfb 5E       		.byte	0x5e
 3200 0bfc 20       		.uleb128 0x20
 3201 0bfd A5030000 		.4byte	.LASF127
 3202 0c01 01       		.byte	0x1
 3203 0c02 E002     		.2byte	0x2e0
 3204 0c04 B5030000 		.4byte	0x3b5
 3205 0c08 AD080000 		.4byte	.LLST43
 3206 0c0c 22       		.uleb128 0x22
 3207 0c0d 6900     		.ascii	"i\000"
 3208 0c0f 01       		.byte	0x1
 3209 0c10 F102     		.2byte	0x2f1
 3210 0c12 05010000 		.4byte	0x105
 3211 0c16 D8080000 		.4byte	.LLST44
 3212 0c1a 28       		.uleb128 0x28
 3213 0c1b D4000000 		.4byte	.LBB15
 3214 0c1f 06000000 		.4byte	.LBE15-.LBB15
 3215 0c23 380C0000 		.4byte	0xc38
 3216 0c27 20       		.uleb128 0x20
 3217 0c28 B5000000 		.4byte	.LASF128
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 86


 3218 0c2c 01       		.byte	0x1
 3219 0c2d E202     		.2byte	0x2e2
 3220 0c2f 310B0000 		.4byte	0xb31
 3221 0c33 02090000 		.4byte	.LLST45
 3222 0c37 00       		.byte	0
 3223 0c38 28       		.uleb128 0x28
 3224 0c39 DE000000 		.4byte	.LBB16
 3225 0c3d 42000000 		.4byte	.LBE16-.LBB16
 3226 0c41 620C0000 		.4byte	0xc62
 3227 0c45 20       		.uleb128 0x20
 3228 0c46 09000000 		.4byte	.LASF129
 3229 0c4a 01       		.byte	0x1
 3230 0c4b F302     		.2byte	0x2f3
 3231 0c4d C3000000 		.4byte	0xc3
 3232 0c51 30090000 		.4byte	.LLST46
 3233 0c55 2E       		.uleb128 0x2e
 3234 0c56 07050000 		.4byte	.LASF98
 3235 0c5a 01       		.byte	0x1
 3236 0c5b F502     		.2byte	0x2f5
 3237 0c5d EF010000 		.4byte	0x1ef
 3238 0c61 00       		.byte	0
 3239 0c62 27       		.uleb128 0x27
 3240 0c63 18000000 		.4byte	.LVL106
 3241 0c67 14120000 		.4byte	0x1214
 3242 0c6b 00       		.byte	0
 3243 0c6c 1E       		.uleb128 0x1e
 3244 0c6d 65030000 		.4byte	.LASF131
 3245 0c71 01       		.byte	0x1
 3246 0c72 E201     		.2byte	0x1e2
 3247 0c74 4B020000 		.4byte	0x24b
 3248 0c78 00000000 		.4byte	.LFB50
 3249 0c7c 5C000000 		.4byte	.LFE50-.LFB50
 3250 0c80 01       		.uleb128 0x1
 3251 0c81 9C       		.byte	0x9c
 3252 0c82 3B0D0000 		.4byte	0xd3b
 3253 0c86 1F       		.uleb128 0x1f
 3254 0c87 90050000 		.4byte	.LASF97
 3255 0c8b 01       		.byte	0x1
 3256 0c8c E201     		.2byte	0x1e2
 3257 0c8e A8050000 		.4byte	0x5a8
 3258 0c92 43090000 		.4byte	.LLST47
 3259 0c96 1C       		.uleb128 0x1c
 3260 0c97 64736300 		.ascii	"dsc\000"
 3261 0c9b 01       		.byte	0x1
 3262 0c9c E201     		.2byte	0x1e2
 3263 0c9e C4060000 		.4byte	0x6c4
 3264 0ca2 64090000 		.4byte	.LLST48
 3265 0ca6 1C       		.uleb128 0x1c
 3266 0ca7 7800     		.ascii	"x\000"
 3267 0ca9 01       		.byte	0x1
 3268 0caa E201     		.2byte	0x1e2
 3269 0cac 05010000 		.4byte	0x105
 3270 0cb0 F4090000 		.4byte	.LLST49
 3271 0cb4 1C       		.uleb128 0x1c
 3272 0cb5 7900     		.ascii	"y\000"
 3273 0cb7 01       		.byte	0x1
 3274 0cb8 E301     		.2byte	0x1e3
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 87


 3275 0cba 05010000 		.4byte	0x105
 3276 0cbe 150A0000 		.4byte	.LLST50
 3277 0cc2 1D       		.uleb128 0x1d
 3278 0cc3 6C656E00 		.ascii	"len\000"
 3279 0cc7 01       		.byte	0x1
 3280 0cc8 E301     		.2byte	0x1e3
 3281 0cca 05010000 		.4byte	0x105
 3282 0cce 02       		.uleb128 0x2
 3283 0ccf 91       		.byte	0x91
 3284 0cd0 00       		.sleb128 0
 3285 0cd1 1D       		.uleb128 0x1d
 3286 0cd2 62756600 		.ascii	"buf\000"
 3287 0cd6 01       		.byte	0x1
 3288 0cd7 E301     		.2byte	0x1e3
 3289 0cd9 EA030000 		.4byte	0x3ea
 3290 0cdd 02       		.uleb128 0x2
 3291 0cde 91       		.byte	0x91
 3292 0cdf 04       		.sleb128 4
 3293 0ce0 22       		.uleb128 0x22
 3294 0ce1 72657300 		.ascii	"res\000"
 3295 0ce5 01       		.byte	0x1
 3296 0ce6 E701     		.2byte	0x1e7
 3297 0ce8 4B020000 		.4byte	0x24b
 3298 0cec 360A0000 		.4byte	.LLST51
 3299 0cf0 2B       		.uleb128 0x2b
 3300 0cf1 2A000000 		.4byte	.LVL157
 3301 0cf5 64060000 		.4byte	0x664
 3302 0cf9 140D0000 		.4byte	0xd14
 3303 0cfd 24       		.uleb128 0x24
 3304 0cfe 01       		.uleb128 0x1
 3305 0cff 50       		.byte	0x50
 3306 0d00 03       		.uleb128 0x3
 3307 0d01 F3       		.byte	0xf3
 3308 0d02 01       		.uleb128 0x1
 3309 0d03 51       		.byte	0x51
 3310 0d04 24       		.uleb128 0x24
 3311 0d05 01       		.uleb128 0x1
 3312 0d06 53       		.byte	0x53
 3313 0d07 04       		.uleb128 0x4
 3314 0d08 91       		.byte	0x91
 3315 0d09 00       		.sleb128 0
 3316 0d0a 94       		.byte	0x94
 3317 0d0b 02       		.byte	0x2
 3318 0d0c 24       		.uleb128 0x24
 3319 0d0d 02       		.uleb128 0x2
 3320 0d0e 7D       		.byte	0x7d
 3321 0d0f 00       		.sleb128 0
 3322 0d10 02       		.uleb128 0x2
 3323 0d11 74       		.byte	0x74
 3324 0d12 00       		.sleb128 0
 3325 0d13 00       		.byte	0
 3326 0d14 2B       		.uleb128 0x2b
 3327 0d15 3E000000 		.4byte	.LVL159
 3328 0d19 8F090000 		.4byte	0x98f
 3329 0d1d 290D0000 		.4byte	0xd29
 3330 0d21 24       		.uleb128 0x24
 3331 0d22 02       		.uleb128 0x2
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 88


 3332 0d23 7D       		.byte	0x7d
 3333 0d24 00       		.sleb128 0
 3334 0d25 02       		.uleb128 0x2
 3335 0d26 74       		.byte	0x74
 3336 0d27 00       		.sleb128 0
 3337 0d28 00       		.byte	0
 3338 0d29 23       		.uleb128 0x23
 3339 0d2a 50000000 		.4byte	.LVL161
 3340 0d2e 3C0B0000 		.4byte	0xb3c
 3341 0d32 24       		.uleb128 0x24
 3342 0d33 02       		.uleb128 0x2
 3343 0d34 7D       		.byte	0x7d
 3344 0d35 00       		.sleb128 0
 3345 0d36 02       		.uleb128 0x2
 3346 0d37 74       		.byte	0x74
 3347 0d38 00       		.sleb128 0
 3348 0d39 00       		.byte	0
 3349 0d3a 00       		.byte	0
 3350 0d3b 2F       		.uleb128 0x2f
 3351 0d3c D00A0000 		.4byte	.LASF132
 3352 0d40 01       		.byte	0x1
 3353 0d41 59       		.byte	0x59
 3354 0d42 4B020000 		.4byte	0x24b
 3355 0d46 00000000 		.4byte	.LFB38
 3356 0d4a 5C000000 		.4byte	.LFE38-.LFB38
 3357 0d4e 01       		.uleb128 0x1
 3358 0d4f 9C       		.byte	0x9c
 3359 0d50 C40D0000 		.4byte	0xdc4
 3360 0d54 30       		.uleb128 0x30
 3361 0d55 73726300 		.ascii	"src\000"
 3362 0d59 01       		.byte	0x1
 3363 0d5a 59       		.byte	0x59
 3364 0d5b 27020000 		.4byte	0x227
 3365 0d5f 8F0A0000 		.4byte	.LLST52
 3366 0d63 31       		.uleb128 0x31
 3367 0d64 E80A0000 		.4byte	.LASF78
 3368 0d68 01       		.byte	0x1
 3369 0d69 59       		.byte	0x59
 3370 0d6a 99040000 		.4byte	0x499
 3371 0d6e BB0A0000 		.4byte	.LLST53
 3372 0d72 32       		.uleb128 0x32
 3373 0d73 72657300 		.ascii	"res\000"
 3374 0d77 01       		.byte	0x1
 3375 0d78 60       		.byte	0x60
 3376 0d79 4B020000 		.4byte	0x24b
 3377 0d7d E70A0000 		.4byte	.LLST54
 3378 0d81 32       		.uleb128 0x32
 3379 0d82 6400     		.ascii	"d\000"
 3380 0d84 01       		.byte	0x1
 3381 0d85 61       		.byte	0x61
 3382 0d86 A8050000 		.4byte	0x5a8
 3383 0d8a 1D0B0000 		.4byte	.LLST55
 3384 0d8e 27       		.uleb128 0x27
 3385 0d8f 2A000000 		.4byte	.LVL169
 3386 0d93 4B120000 		.4byte	0x124b
 3387 0d97 33       		.uleb128 0x33
 3388 0d98 3C000000 		.4byte	.LVL172
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 89


 3389 0d9c B30D0000 		.4byte	0xdb3
 3390 0da0 24       		.uleb128 0x24
 3391 0da1 01       		.uleb128 0x1
 3392 0da2 50       		.byte	0x50
 3393 0da3 02       		.uleb128 0x2
 3394 0da4 74       		.byte	0x74
 3395 0da5 00       		.sleb128 0
 3396 0da6 24       		.uleb128 0x24
 3397 0da7 01       		.uleb128 0x1
 3398 0da8 51       		.byte	0x51
 3399 0da9 02       		.uleb128 0x2
 3400 0daa 77       		.byte	0x77
 3401 0dab 00       		.sleb128 0
 3402 0dac 24       		.uleb128 0x24
 3403 0dad 01       		.uleb128 0x1
 3404 0dae 52       		.byte	0x52
 3405 0daf 02       		.uleb128 0x2
 3406 0db0 76       		.byte	0x76
 3407 0db1 00       		.sleb128 0
 3408 0db2 00       		.byte	0
 3409 0db3 23       		.uleb128 0x23
 3410 0db4 4E000000 		.4byte	.LVL176
 3411 0db8 56120000 		.4byte	0x1256
 3412 0dbc 24       		.uleb128 0x24
 3413 0dbd 01       		.uleb128 0x1
 3414 0dbe 51       		.byte	0x51
 3415 0dbf 02       		.uleb128 0x2
 3416 0dc0 74       		.byte	0x74
 3417 0dc1 00       		.sleb128 0
 3418 0dc2 00       		.byte	0
 3419 0dc3 00       		.byte	0
 3420 0dc4 2F       		.uleb128 0x2f
 3421 0dc5 57090000 		.4byte	.LASF133
 3422 0dc9 01       		.byte	0x1
 3423 0dca 79       		.byte	0x79
 3424 0dcb 4B020000 		.4byte	0x24b
 3425 0dcf 00000000 		.4byte	.LFB39
 3426 0dd3 80000000 		.4byte	.LFE39-.LFB39
 3427 0dd7 01       		.uleb128 0x1
 3428 0dd8 9C       		.byte	0x9c
 3429 0dd9 D00E0000 		.4byte	0xed0
 3430 0ddd 30       		.uleb128 0x30
 3431 0dde 64736300 		.ascii	"dsc\000"
 3432 0de2 01       		.byte	0x1
 3433 0de3 79       		.byte	0x79
 3434 0de4 C4060000 		.4byte	0x6c4
 3435 0de8 670B0000 		.4byte	.LLST56
 3436 0dec 30       		.uleb128 0x30
 3437 0ded 73726300 		.ascii	"src\000"
 3438 0df1 01       		.byte	0x1
 3439 0df2 79       		.byte	0x79
 3440 0df3 CB030000 		.4byte	0x3cb
 3441 0df7 930B0000 		.4byte	.LLST57
 3442 0dfb 31       		.uleb128 0x31
 3443 0dfc 07050000 		.4byte	.LASF98
 3444 0e00 01       		.byte	0x1
 3445 0e01 79       		.byte	0x79
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 90


 3446 0e02 EF010000 		.4byte	0x1ef
 3447 0e06 BF0B0000 		.4byte	.LLST58
 3448 0e0a 32       		.uleb128 0x32
 3449 0e0b 72657300 		.ascii	"res\000"
 3450 0e0f 01       		.byte	0x1
 3451 0e10 88       		.byte	0x88
 3452 0e11 4B020000 		.4byte	0x24b
 3453 0e15 D20B0000 		.4byte	.LLST59
 3454 0e19 32       		.uleb128 0x32
 3455 0e1a 6400     		.ascii	"d\000"
 3456 0e1c 01       		.byte	0x1
 3457 0e1d 8A       		.byte	0x8a
 3458 0e1e A8050000 		.4byte	0x5a8
 3459 0e22 120C0000 		.4byte	.LLST60
 3460 0e26 28       		.uleb128 0x28
 3461 0e27 18000000 		.4byte	.LBB17
 3462 0e2b 14000000 		.4byte	.LBE17-.LBB17
 3463 0e2f 700E0000 		.4byte	0xe70
 3464 0e33 34       		.uleb128 0x34
 3465 0e34 AB040000 		.4byte	.LASF134
 3466 0e38 01       		.byte	0x1
 3467 0e39 80       		.byte	0x80
 3468 0e3a 07020000 		.4byte	0x207
 3469 0e3e 460C0000 		.4byte	.LLST61
 3470 0e42 2B       		.uleb128 0x2b
 3471 0e43 1E000000 		.4byte	.LVL183
 3472 0e47 61120000 		.4byte	0x1261
 3473 0e4b 560E0000 		.4byte	0xe56
 3474 0e4f 24       		.uleb128 0x24
 3475 0e50 01       		.uleb128 0x1
 3476 0e51 50       		.byte	0x50
 3477 0e52 02       		.uleb128 0x2
 3478 0e53 77       		.byte	0x77
 3479 0e54 00       		.sleb128 0
 3480 0e55 00       		.byte	0
 3481 0e56 27       		.uleb128 0x27
 3482 0e57 24000000 		.4byte	.LVL185
 3483 0e5b 1F120000 		.4byte	0x121f
 3484 0e5f 23       		.uleb128 0x23
 3485 0e60 2C000000 		.4byte	.LVL186
 3486 0e64 6C120000 		.4byte	0x126c
 3487 0e68 24       		.uleb128 0x24
 3488 0e69 01       		.uleb128 0x1
 3489 0e6a 51       		.byte	0x51
 3490 0e6b 02       		.uleb128 0x2
 3491 0e6c 77       		.byte	0x77
 3492 0e6d 00       		.sleb128 0
 3493 0e6e 00       		.byte	0
 3494 0e6f 00       		.byte	0
 3495 0e70 2B       		.uleb128 0x2b
 3496 0e71 0E000000 		.4byte	.LVL182
 3497 0e75 FE110000 		.4byte	0x11fe
 3498 0e79 840E0000 		.4byte	0xe84
 3499 0e7d 24       		.uleb128 0x24
 3500 0e7e 01       		.uleb128 0x1
 3501 0e7f 50       		.byte	0x50
 3502 0e80 02       		.uleb128 0x2
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 91


 3503 0e81 77       		.byte	0x77
 3504 0e82 00       		.sleb128 0
 3505 0e83 00       		.byte	0
 3506 0e84 27       		.uleb128 0x27
 3507 0e85 36000000 		.4byte	.LVL188
 3508 0e89 4B120000 		.4byte	0x124b
 3509 0e8d 33       		.uleb128 0x33
 3510 0e8e 4E000000 		.4byte	.LVL191
 3511 0e92 A90E0000 		.4byte	0xea9
 3512 0e96 24       		.uleb128 0x24
 3513 0e97 01       		.uleb128 0x1
 3514 0e98 50       		.byte	0x50
 3515 0e99 02       		.uleb128 0x2
 3516 0e9a 74       		.byte	0x74
 3517 0e9b 00       		.sleb128 0
 3518 0e9c 24       		.uleb128 0x24
 3519 0e9d 01       		.uleb128 0x1
 3520 0e9e 51       		.byte	0x51
 3521 0e9f 02       		.uleb128 0x2
 3522 0ea0 77       		.byte	0x77
 3523 0ea1 00       		.sleb128 0
 3524 0ea2 24       		.uleb128 0x24
 3525 0ea3 01       		.uleb128 0x1
 3526 0ea4 52       		.byte	0x52
 3527 0ea5 02       		.uleb128 0x2
 3528 0ea6 76       		.byte	0x76
 3529 0ea7 0C       		.sleb128 12
 3530 0ea8 00       		.byte	0
 3531 0ea9 33       		.uleb128 0x33
 3532 0eaa 64000000 		.4byte	.LVL194
 3533 0eae BF0E0000 		.4byte	0xebf
 3534 0eb2 24       		.uleb128 0x24
 3535 0eb3 01       		.uleb128 0x1
 3536 0eb4 50       		.byte	0x50
 3537 0eb5 02       		.uleb128 0x2
 3538 0eb6 74       		.byte	0x74
 3539 0eb7 00       		.sleb128 0
 3540 0eb8 24       		.uleb128 0x24
 3541 0eb9 01       		.uleb128 0x1
 3542 0eba 51       		.byte	0x51
 3543 0ebb 02       		.uleb128 0x2
 3544 0ebc 76       		.byte	0x76
 3545 0ebd 00       		.sleb128 0
 3546 0ebe 00       		.byte	0
 3547 0ebf 23       		.uleb128 0x23
 3548 0ec0 72000000 		.4byte	.LVL197
 3549 0ec4 56120000 		.4byte	0x1256
 3550 0ec8 24       		.uleb128 0x24
 3551 0ec9 01       		.uleb128 0x1
 3552 0eca 51       		.byte	0x51
 3553 0ecb 02       		.uleb128 0x2
 3554 0ecc 74       		.byte	0x74
 3555 0ecd 00       		.sleb128 0
 3556 0ece 00       		.byte	0
 3557 0ecf 00       		.byte	0
 3558 0ed0 2F       		.uleb128 0x2f
 3559 0ed1 01070000 		.4byte	.LASF135
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 92


 3560 0ed5 01       		.byte	0x1
 3561 0ed6 A8       		.byte	0xa8
 3562 0ed7 4B020000 		.4byte	0x24b
 3563 0edb 00000000 		.4byte	.LFB40
 3564 0edf 24000000 		.4byte	.LFE40-.LFB40
 3565 0ee3 01       		.uleb128 0x1
 3566 0ee4 9C       		.byte	0x9c
 3567 0ee5 640F0000 		.4byte	0xf64
 3568 0ee9 30       		.uleb128 0x30
 3569 0eea 64736300 		.ascii	"dsc\000"
 3570 0eee 01       		.byte	0x1
 3571 0eef A8       		.byte	0xa8
 3572 0ef0 C4060000 		.4byte	0x6c4
 3573 0ef4 660C0000 		.4byte	.LLST62
 3574 0ef8 30       		.uleb128 0x30
 3575 0ef9 7800     		.ascii	"x\000"
 3576 0efb 01       		.byte	0x1
 3577 0efc A8       		.byte	0xa8
 3578 0efd 05010000 		.4byte	0x105
 3579 0f01 AB0C0000 		.4byte	.LLST63
 3580 0f05 30       		.uleb128 0x30
 3581 0f06 7900     		.ascii	"y\000"
 3582 0f08 01       		.byte	0x1
 3583 0f09 A8       		.byte	0xa8
 3584 0f0a 05010000 		.4byte	0x105
 3585 0f0e E50C0000 		.4byte	.LLST64
 3586 0f12 30       		.uleb128 0x30
 3587 0f13 6C656E00 		.ascii	"len\000"
 3588 0f17 01       		.byte	0x1
 3589 0f18 A8       		.byte	0xa8
 3590 0f19 05010000 		.4byte	0x105
 3591 0f1d 1F0D0000 		.4byte	.LLST65
 3592 0f21 35       		.uleb128 0x35
 3593 0f22 62756600 		.ascii	"buf\000"
 3594 0f26 01       		.byte	0x1
 3595 0f27 A8       		.byte	0xa8
 3596 0f28 EA030000 		.4byte	0x3ea
 3597 0f2c 02       		.uleb128 0x2
 3598 0f2d 91       		.byte	0x91
 3599 0f2e 00       		.sleb128 0
 3600 0f2f 32       		.uleb128 0x32
 3601 0f30 72657300 		.ascii	"res\000"
 3602 0f34 01       		.byte	0x1
 3603 0f35 AA       		.byte	0xaa
 3604 0f36 4B020000 		.4byte	0x24b
 3605 0f3a 590D0000 		.4byte	.LLST66
 3606 0f3e 36       		.uleb128 0x36
 3607 0f3f 1C000000 		.4byte	.LVL207
 3608 0f43 02       		.uleb128 0x2
 3609 0f44 74       		.byte	0x74
 3610 0f45 00       		.sleb128 0
 3611 0f46 24       		.uleb128 0x24
 3612 0f47 01       		.uleb128 0x1
 3613 0f48 50       		.byte	0x50
 3614 0f49 02       		.uleb128 0x2
 3615 0f4a 76       		.byte	0x76
 3616 0f4b 00       		.sleb128 0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 93


 3617 0f4c 24       		.uleb128 0x24
 3618 0f4d 01       		.uleb128 0x1
 3619 0f4e 51       		.byte	0x51
 3620 0f4f 03       		.uleb128 0x3
 3621 0f50 F3       		.byte	0xf3
 3622 0f51 01       		.uleb128 0x1
 3623 0f52 50       		.byte	0x50
 3624 0f53 24       		.uleb128 0x24
 3625 0f54 02       		.uleb128 0x2
 3626 0f55 7D       		.byte	0x7d
 3627 0f56 00       		.sleb128 0
 3628 0f57 02       		.uleb128 0x2
 3629 0f58 75       		.byte	0x75
 3630 0f59 00       		.sleb128 0
 3631 0f5a 24       		.uleb128 0x24
 3632 0f5b 02       		.uleb128 0x2
 3633 0f5c 7D       		.byte	0x7d
 3634 0f5d 04       		.sleb128 4
 3635 0f5e 03       		.uleb128 0x3
 3636 0f5f 91       		.byte	0x91
 3637 0f60 00       		.sleb128 0
 3638 0f61 06       		.byte	0x6
 3639 0f62 00       		.byte	0
 3640 0f63 00       		.byte	0
 3641 0f64 37       		.uleb128 0x37
 3642 0f65 F2030000 		.4byte	.LASF137
 3643 0f69 01       		.byte	0x1
 3644 0f6a B4       		.byte	0xb4
 3645 0f6b 00000000 		.4byte	.LFB41
 3646 0f6f 26000000 		.4byte	.LFE41-.LFB41
 3647 0f73 01       		.uleb128 0x1
 3648 0f74 9C       		.byte	0x9c
 3649 0f75 A20F0000 		.4byte	0xfa2
 3650 0f79 30       		.uleb128 0x30
 3651 0f7a 64736300 		.ascii	"dsc\000"
 3652 0f7e 01       		.byte	0x1
 3653 0f7f B4       		.byte	0xb4
 3654 0f80 C4060000 		.4byte	0x6c4
 3655 0f84 8F0D0000 		.4byte	.LLST67
 3656 0f88 33       		.uleb128 0x33
 3657 0f89 12000000 		.4byte	.LVL212
 3658 0f8d 980F0000 		.4byte	0xf98
 3659 0f91 24       		.uleb128 0x24
 3660 0f92 01       		.uleb128 0x1
 3661 0f93 51       		.byte	0x51
 3662 0f94 02       		.uleb128 0x2
 3663 0f95 74       		.byte	0x74
 3664 0f96 00       		.sleb128 0
 3665 0f97 00       		.byte	0
 3666 0f98 27       		.uleb128 0x27
 3667 0f99 1E000000 		.4byte	.LVL213
 3668 0f9d 09120000 		.4byte	0x1209
 3669 0fa1 00       		.byte	0
 3670 0fa2 2F       		.uleb128 0x2f
 3671 0fa3 E3010000 		.4byte	.LASF138
 3672 0fa7 01       		.byte	0x1
 3673 0fa8 C4       		.byte	0xc4
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 94


 3674 0fa9 A8050000 		.4byte	0x5a8
 3675 0fad 00000000 		.4byte	.LFB42
 3676 0fb1 38000000 		.4byte	.LFE42-.LFB42
 3677 0fb5 01       		.uleb128 0x1
 3678 0fb6 9C       		.byte	0x9c
 3679 0fb7 14100000 		.4byte	0x1014
 3680 0fbb 34       		.uleb128 0x34
 3681 0fbc 90050000 		.4byte	.LASF97
 3682 0fc0 01       		.byte	0x1
 3683 0fc1 C6       		.byte	0xc6
 3684 0fc2 A8050000 		.4byte	0x5a8
 3685 0fc6 C30D0000 		.4byte	.LLST68
 3686 0fca 27       		.uleb128 0x27
 3687 0fcb 08000000 		.4byte	.LVL215
 3688 0fcf 77120000 		.4byte	0x1277
 3689 0fd3 2B       		.uleb128 0x2b
 3690 0fd4 0E000000 		.4byte	.LVL217
 3691 0fd8 2A120000 		.4byte	0x122a
 3692 0fdc E70F0000 		.4byte	0xfe7
 3693 0fe0 24       		.uleb128 0x24
 3694 0fe1 01       		.uleb128 0x1
 3695 0fe2 50       		.byte	0x50
 3696 0fe3 02       		.uleb128 0x2
 3697 0fe4 74       		.byte	0x74
 3698 0fe5 00       		.sleb128 0
 3699 0fe6 00       		.byte	0
 3700 0fe7 2B       		.uleb128 0x2b
 3701 0fe8 1A000000 		.4byte	.LVL218
 3702 0fec 35120000 		.4byte	0x1235
 3703 0ff0 FE0F0000 		.4byte	0xffe
 3704 0ff4 24       		.uleb128 0x24
 3705 0ff5 01       		.uleb128 0x1
 3706 0ff6 50       		.byte	0x50
 3707 0ff7 05       		.uleb128 0x5
 3708 0ff8 03       		.byte	0x3
 3709 0ff9 00000000 		.4byte	.LC2
 3710 0ffd 00       		.byte	0
 3711 0ffe 23       		.uleb128 0x23
 3712 0fff 26000000 		.4byte	.LVL219
 3713 1003 40120000 		.4byte	0x1240
 3714 1007 24       		.uleb128 0x24
 3715 1008 01       		.uleb128 0x1
 3716 1009 50       		.byte	0x50
 3717 100a 02       		.uleb128 0x2
 3718 100b 74       		.byte	0x74
 3719 100c 00       		.sleb128 0
 3720 100d 24       		.uleb128 0x24
 3721 100e 01       		.uleb128 0x1
 3722 100f 51       		.byte	0x51
 3723 1010 01       		.uleb128 0x1
 3724 1011 44       		.byte	0x44
 3725 1012 00       		.byte	0
 3726 1013 00       		.byte	0
 3727 1014 37       		.uleb128 0x37
 3728 1015 A10A0000 		.4byte	.LASF139
 3729 1019 01       		.byte	0x1
 3730 101a D4       		.byte	0xd4
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 95


 3731 101b 00000000 		.4byte	.LFB43
 3732 101f 18000000 		.4byte	.LFE43-.LFB43
 3733 1023 01       		.uleb128 0x1
 3734 1024 9C       		.byte	0x9c
 3735 1025 5D100000 		.4byte	0x105d
 3736 1029 31       		.uleb128 0x31
 3737 102a 90050000 		.4byte	.LASF97
 3738 102e 01       		.byte	0x1
 3739 102f D4       		.byte	0xd4
 3740 1030 A8050000 		.4byte	0x5a8
 3741 1034 E10D0000 		.4byte	.LLST69
 3742 1038 2B       		.uleb128 0x2b
 3743 1039 0C000000 		.4byte	.LVL224
 3744 103d 82120000 		.4byte	0x1282
 3745 1041 4C100000 		.4byte	0x104c
 3746 1045 24       		.uleb128 0x24
 3747 1046 01       		.uleb128 0x1
 3748 1047 51       		.byte	0x51
 3749 1048 02       		.uleb128 0x2
 3750 1049 74       		.byte	0x74
 3751 104a 00       		.sleb128 0
 3752 104b 00       		.byte	0
 3753 104c 23       		.uleb128 0x23
 3754 104d 12000000 		.4byte	.LVL225
 3755 1051 09120000 		.4byte	0x1209
 3756 1055 24       		.uleb128 0x24
 3757 1056 01       		.uleb128 0x1
 3758 1057 50       		.byte	0x50
 3759 1058 02       		.uleb128 0x2
 3760 1059 74       		.byte	0x74
 3761 105a 00       		.sleb128 0
 3762 105b 00       		.byte	0
 3763 105c 00       		.byte	0
 3764 105d 37       		.uleb128 0x37
 3765 105e 1D030000 		.4byte	.LASF140
 3766 1062 01       		.byte	0x1
 3767 1063 DF       		.byte	0xdf
 3768 1064 00000000 		.4byte	.LFB44
 3769 1068 04000000 		.4byte	.LFE44-.LFB44
 3770 106c 01       		.uleb128 0x1
 3771 106d 9C       		.byte	0x9c
 3772 106e 8D100000 		.4byte	0x108d
 3773 1072 38       		.uleb128 0x38
 3774 1073 90050000 		.4byte	.LASF97
 3775 1077 01       		.byte	0x1
 3776 1078 DF       		.byte	0xdf
 3777 1079 A8050000 		.4byte	0x5a8
 3778 107d 01       		.uleb128 0x1
 3779 107e 50       		.byte	0x50
 3780 107f 38       		.uleb128 0x38
 3781 1080 82060000 		.4byte	.LASF89
 3782 1084 01       		.byte	0x1
 3783 1085 DF       		.byte	0xdf
 3784 1086 20040000 		.4byte	0x420
 3785 108a 01       		.uleb128 0x1
 3786 108b 51       		.byte	0x51
 3787 108c 00       		.byte	0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 96


 3788 108d 37       		.uleb128 0x37
 3789 108e 5D0A0000 		.4byte	.LASF141
 3790 1092 01       		.byte	0x1
 3791 1093 E9       		.byte	0xe9
 3792 1094 00000000 		.4byte	.LFB45
 3793 1098 04000000 		.4byte	.LFE45-.LFB45
 3794 109c 01       		.uleb128 0x1
 3795 109d 9C       		.byte	0x9c
 3796 109e BD100000 		.4byte	0x10bd
 3797 10a2 38       		.uleb128 0x38
 3798 10a3 90050000 		.4byte	.LASF97
 3799 10a7 01       		.byte	0x1
 3800 10a8 E9       		.byte	0xe9
 3801 10a9 A8050000 		.4byte	0x5a8
 3802 10ad 01       		.uleb128 0x1
 3803 10ae 50       		.byte	0x50
 3804 10af 38       		.uleb128 0x38
 3805 10b0 B4070000 		.4byte	.LASF90
 3806 10b4 01       		.byte	0x1
 3807 10b5 E9       		.byte	0xe9
 3808 10b6 9F040000 		.4byte	0x49f
 3809 10ba 01       		.uleb128 0x1
 3810 10bb 51       		.byte	0x51
 3811 10bc 00       		.byte	0
 3812 10bd 37       		.uleb128 0x37
 3813 10be F9010000 		.4byte	.LASF142
 3814 10c2 01       		.byte	0x1
 3815 10c3 F3       		.byte	0xf3
 3816 10c4 00000000 		.4byte	.LFB46
 3817 10c8 04000000 		.4byte	.LFE46-.LFB46
 3818 10cc 01       		.uleb128 0x1
 3819 10cd 9C       		.byte	0x9c
 3820 10ce ED100000 		.4byte	0x10ed
 3821 10d2 38       		.uleb128 0x38
 3822 10d3 90050000 		.4byte	.LASF97
 3823 10d7 01       		.byte	0x1
 3824 10d8 F3       		.byte	0xf3
 3825 10d9 A8050000 		.4byte	0x5a8
 3826 10dd 01       		.uleb128 0x1
 3827 10de 50       		.byte	0x50
 3828 10df 38       		.uleb128 0x38
 3829 10e0 170A0000 		.4byte	.LASF91
 3830 10e4 01       		.byte	0x1
 3831 10e5 F3       		.byte	0xf3
 3832 10e6 43050000 		.4byte	0x543
 3833 10ea 01       		.uleb128 0x1
 3834 10eb 51       		.byte	0x51
 3835 10ec 00       		.byte	0
 3836 10ed 37       		.uleb128 0x37
 3837 10ee 60000000 		.4byte	.LASF143
 3838 10f2 01       		.byte	0x1
 3839 10f3 FD       		.byte	0xfd
 3840 10f4 00000000 		.4byte	.LFB47
 3841 10f8 04000000 		.4byte	.LFE47-.LFB47
 3842 10fc 01       		.uleb128 0x1
 3843 10fd 9C       		.byte	0x9c
 3844 10fe 1D110000 		.4byte	0x111d
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 97


 3845 1102 38       		.uleb128 0x38
 3846 1103 90050000 		.4byte	.LASF97
 3847 1107 01       		.byte	0x1
 3848 1108 FD       		.byte	0xfd
 3849 1109 A8050000 		.4byte	0x5a8
 3850 110d 01       		.uleb128 0x1
 3851 110e 50       		.byte	0x50
 3852 110f 38       		.uleb128 0x38
 3853 1110 14050000 		.4byte	.LASF92
 3854 1114 01       		.byte	0x1
 3855 1115 FD       		.byte	0xfd
 3856 1116 7C050000 		.4byte	0x57c
 3857 111a 01       		.uleb128 0x1
 3858 111b 51       		.byte	0x51
 3859 111c 00       		.byte	0
 3860 111d 37       		.uleb128 0x37
 3861 111e FA090000 		.4byte	.LASF144
 3862 1122 01       		.byte	0x1
 3863 1123 3E       		.byte	0x3e
 3864 1124 00000000 		.4byte	.LFB37
 3865 1128 5C000000 		.4byte	.LFE37-.LFB37
 3866 112c 01       		.uleb128 0x1
 3867 112d 9C       		.byte	0x9c
 3868 112e F3110000 		.4byte	0x11f3
 3869 1132 34       		.uleb128 0x34
 3870 1133 90050000 		.4byte	.LASF97
 3871 1137 01       		.byte	0x1
 3872 1138 42       		.byte	0x42
 3873 1139 A8050000 		.4byte	0x5a8
 3874 113d 180E0000 		.4byte	.LLST70
 3875 1141 2B       		.uleb128 0x2b
 3876 1142 0A000000 		.4byte	.LVL231
 3877 1146 8D120000 		.4byte	0x128d
 3878 114a 54110000 		.4byte	0x1154
 3879 114e 24       		.uleb128 0x24
 3880 114f 01       		.uleb128 0x1
 3881 1150 51       		.byte	0x51
 3882 1151 01       		.uleb128 0x1
 3883 1152 44       		.byte	0x44
 3884 1153 00       		.byte	0
 3885 1154 27       		.uleb128 0x27
 3886 1155 0E000000 		.4byte	.LVL232
 3887 1159 A20F0000 		.4byte	0xfa2
 3888 115d 2B       		.uleb128 0x2b
 3889 115e 16000000 		.4byte	.LVL233
 3890 1162 2A120000 		.4byte	0x122a
 3891 1166 71110000 		.4byte	0x1171
 3892 116a 24       		.uleb128 0x24
 3893 116b 01       		.uleb128 0x1
 3894 116c 50       		.byte	0x50
 3895 116d 02       		.uleb128 0x2
 3896 116e 74       		.byte	0x74
 3897 116f 00       		.sleb128 0
 3898 1170 00       		.byte	0
 3899 1171 2B       		.uleb128 0x2b
 3900 1172 22000000 		.4byte	.LVL234
 3901 1176 35120000 		.4byte	0x1235
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 98


 3902 117a 88110000 		.4byte	0x1188
 3903 117e 24       		.uleb128 0x24
 3904 117f 01       		.uleb128 0x1
 3905 1180 50       		.byte	0x50
 3906 1181 05       		.uleb128 0x5
 3907 1182 03       		.byte	0x3
 3908 1183 00000000 		.4byte	.LC2
 3909 1187 00       		.byte	0
 3910 1188 2B       		.uleb128 0x2b
 3911 1189 2A000000 		.4byte	.LVL236
 3912 118d 5D100000 		.4byte	0x105d
 3913 1191 9F110000 		.4byte	0x119f
 3914 1195 24       		.uleb128 0x24
 3915 1196 01       		.uleb128 0x1
 3916 1197 51       		.byte	0x51
 3917 1198 05       		.uleb128 0x5
 3918 1199 03       		.byte	0x3
 3919 119a 00000000 		.4byte	lv_img_decoder_built_in_info
 3920 119e 00       		.byte	0
 3921 119f 2B       		.uleb128 0x2b
 3922 11a0 32000000 		.4byte	.LVL237
 3923 11a4 8D100000 		.4byte	0x108d
 3924 11a8 BC110000 		.4byte	0x11bc
 3925 11ac 24       		.uleb128 0x24
 3926 11ad 01       		.uleb128 0x1
 3927 11ae 50       		.byte	0x50
 3928 11af 02       		.uleb128 0x2
 3929 11b0 74       		.byte	0x74
 3930 11b1 00       		.sleb128 0
 3931 11b2 24       		.uleb128 0x24
 3932 11b3 01       		.uleb128 0x1
 3933 11b4 51       		.byte	0x51
 3934 11b5 05       		.uleb128 0x5
 3935 11b6 03       		.byte	0x3
 3936 11b7 00000000 		.4byte	lv_img_decoder_built_in_open
 3937 11bb 00       		.byte	0
 3938 11bc 2B       		.uleb128 0x2b
 3939 11bd 3A000000 		.4byte	.LVL238
 3940 11c1 BD100000 		.4byte	0x10bd
 3941 11c5 D9110000 		.4byte	0x11d9
 3942 11c9 24       		.uleb128 0x24
 3943 11ca 01       		.uleb128 0x1
 3944 11cb 50       		.byte	0x50
 3945 11cc 02       		.uleb128 0x2
 3946 11cd 74       		.byte	0x74
 3947 11ce 00       		.sleb128 0
 3948 11cf 24       		.uleb128 0x24
 3949 11d0 01       		.uleb128 0x1
 3950 11d1 51       		.byte	0x51
 3951 11d2 05       		.uleb128 0x5
 3952 11d3 03       		.byte	0x3
 3953 11d4 00000000 		.4byte	lv_img_decoder_built_in_read_line
 3954 11d8 00       		.byte	0
 3955 11d9 23       		.uleb128 0x23
 3956 11da 42000000 		.4byte	.LVL239
 3957 11de ED100000 		.4byte	0x10ed
 3958 11e2 24       		.uleb128 0x24
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 99


 3959 11e3 01       		.uleb128 0x1
 3960 11e4 50       		.byte	0x50
 3961 11e5 02       		.uleb128 0x2
 3962 11e6 74       		.byte	0x74
 3963 11e7 00       		.sleb128 0
 3964 11e8 24       		.uleb128 0x24
 3965 11e9 01       		.uleb128 0x1
 3966 11ea 51       		.byte	0x51
 3967 11eb 05       		.uleb128 0x5
 3968 11ec 03       		.byte	0x3
 3969 11ed 00000000 		.4byte	lv_img_decoder_built_in_close
 3970 11f1 00       		.byte	0
 3971 11f2 00       		.byte	0
 3972 11f3 39       		.uleb128 0x39
 3973 11f4 E4060000 		.4byte	.LASF163
 3974 11f8 0F       		.byte	0xf
 3975 11f9 3B       		.byte	0x3b
 3976 11fa F7050000 		.4byte	0x5f7
 3977 11fe 3A       		.uleb128 0x3a
 3978 11ff 59080000 		.4byte	.LASF145
 3979 1203 59080000 		.4byte	.LASF145
 3980 1207 0B       		.byte	0xb
 3981 1208 44       		.byte	0x44
 3982 1209 3A       		.uleb128 0x3a
 3983 120a 22020000 		.4byte	.LASF146
 3984 120e 22020000 		.4byte	.LASF146
 3985 1212 0C       		.byte	0xc
 3986 1213 58       		.byte	0x58
 3987 1214 3A       		.uleb128 0x3a
 3988 1215 2E020000 		.4byte	.LASF147
 3989 1219 2E020000 		.4byte	.LASF147
 3990 121d 0B       		.byte	0xb
 3991 121e 4B       		.byte	0x4b
 3992 121f 3A       		.uleb128 0x3a
 3993 1220 21000000 		.4byte	.LASF148
 3994 1224 21000000 		.4byte	.LASF148
 3995 1228 0C       		.byte	0xc
 3996 1229 52       		.byte	0x52
 3997 122a 3A       		.uleb128 0x3a
 3998 122b 54020000 		.4byte	.LASF149
 3999 122f 54020000 		.4byte	.LASF149
 4000 1233 0D       		.byte	0xd
 4001 1234 20       		.byte	0x20
 4002 1235 3A       		.uleb128 0x3a
 4003 1236 5E050000 		.4byte	.LASF150
 4004 123a 5E050000 		.4byte	.LASF150
 4005 123e 0D       		.byte	0xd
 4006 123f 26       		.byte	0x26
 4007 1240 3A       		.uleb128 0x3a
 4008 1241 74060000 		.4byte	.LASF151
 4009 1245 74060000 		.4byte	.LASF151
 4010 1249 0C       		.byte	0xc
 4011 124a F2       		.byte	0xf2
 4012 124b 3A       		.uleb128 0x3a
 4013 124c 44020000 		.4byte	.LASF152
 4014 1250 44020000 		.4byte	.LASF152
 4015 1254 0A       		.byte	0xa
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 100


 4016 1255 65       		.byte	0x65
 4017 1256 3A       		.uleb128 0x3a
 4018 1257 E8020000 		.4byte	.LASF153
 4019 125b E8020000 		.4byte	.LASF153
 4020 125f 0A       		.byte	0xa
 4021 1260 74       		.byte	0x74
 4022 1261 3A       		.uleb128 0x3a
 4023 1262 BB030000 		.4byte	.LASF154
 4024 1266 BB030000 		.4byte	.LASF154
 4025 126a 0E       		.byte	0xe
 4026 126b 21       		.byte	0x21
 4027 126c 3A       		.uleb128 0x3a
 4028 126d B1040000 		.4byte	.LASF155
 4029 1271 B1040000 		.4byte	.LASF155
 4030 1275 0E       		.byte	0xe
 4031 1276 1E       		.byte	0x1e
 4032 1277 3A       		.uleb128 0x3a
 4033 1278 EE040000 		.4byte	.LASF156
 4034 127c EE040000 		.4byte	.LASF156
 4035 1280 0A       		.byte	0xa
 4036 1281 37       		.byte	0x37
 4037 1282 3A       		.uleb128 0x3a
 4038 1283 98010000 		.4byte	.LASF157
 4039 1287 98010000 		.4byte	.LASF157
 4040 128b 0A       		.byte	0xa
 4041 128c 4E       		.byte	0x4e
 4042 128d 3A       		.uleb128 0x3a
 4043 128e 780A0000 		.4byte	.LASF158
 4044 1292 780A0000 		.4byte	.LASF158
 4045 1296 0A       		.byte	0xa
 4046 1297 30       		.byte	0x30
 4047 1298 00       		.byte	0
 4048              		.section	.debug_abbrev,"",%progbits
 4049              	.Ldebug_abbrev0:
 4050 0000 01       		.uleb128 0x1
 4051 0001 11       		.uleb128 0x11
 4052 0002 01       		.byte	0x1
 4053 0003 25       		.uleb128 0x25
 4054 0004 0E       		.uleb128 0xe
 4055 0005 13       		.uleb128 0x13
 4056 0006 0B       		.uleb128 0xb
 4057 0007 03       		.uleb128 0x3
 4058 0008 0E       		.uleb128 0xe
 4059 0009 1B       		.uleb128 0x1b
 4060 000a 0E       		.uleb128 0xe
 4061 000b 55       		.uleb128 0x55
 4062 000c 17       		.uleb128 0x17
 4063 000d 11       		.uleb128 0x11
 4064 000e 01       		.uleb128 0x1
 4065 000f 10       		.uleb128 0x10
 4066 0010 17       		.uleb128 0x17
 4067 0011 00       		.byte	0
 4068 0012 00       		.byte	0
 4069 0013 02       		.uleb128 0x2
 4070 0014 16       		.uleb128 0x16
 4071 0015 00       		.byte	0
 4072 0016 03       		.uleb128 0x3
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 101


 4073 0017 0E       		.uleb128 0xe
 4074 0018 3A       		.uleb128 0x3a
 4075 0019 0B       		.uleb128 0xb
 4076 001a 3B       		.uleb128 0x3b
 4077 001b 0B       		.uleb128 0xb
 4078 001c 49       		.uleb128 0x49
 4079 001d 13       		.uleb128 0x13
 4080 001e 00       		.byte	0
 4081 001f 00       		.byte	0
 4082 0020 03       		.uleb128 0x3
 4083 0021 24       		.uleb128 0x24
 4084 0022 00       		.byte	0
 4085 0023 0B       		.uleb128 0xb
 4086 0024 0B       		.uleb128 0xb
 4087 0025 3E       		.uleb128 0x3e
 4088 0026 0B       		.uleb128 0xb
 4089 0027 03       		.uleb128 0x3
 4090 0028 0E       		.uleb128 0xe
 4091 0029 00       		.byte	0
 4092 002a 00       		.byte	0
 4093 002b 04       		.uleb128 0x4
 4094 002c 24       		.uleb128 0x24
 4095 002d 00       		.byte	0
 4096 002e 0B       		.uleb128 0xb
 4097 002f 0B       		.uleb128 0xb
 4098 0030 3E       		.uleb128 0x3e
 4099 0031 0B       		.uleb128 0xb
 4100 0032 03       		.uleb128 0x3
 4101 0033 08       		.uleb128 0x8
 4102 0034 00       		.byte	0
 4103 0035 00       		.byte	0
 4104 0036 05       		.uleb128 0x5
 4105 0037 0F       		.uleb128 0xf
 4106 0038 00       		.byte	0
 4107 0039 0B       		.uleb128 0xb
 4108 003a 0B       		.uleb128 0xb
 4109 003b 00       		.byte	0
 4110 003c 00       		.byte	0
 4111 003d 06       		.uleb128 0x6
 4112 003e 13       		.uleb128 0x13
 4113 003f 01       		.byte	0x1
 4114 0040 0B       		.uleb128 0xb
 4115 0041 0B       		.uleb128 0xb
 4116 0042 3A       		.uleb128 0x3a
 4117 0043 0B       		.uleb128 0xb
 4118 0044 3B       		.uleb128 0x3b
 4119 0045 0B       		.uleb128 0xb
 4120 0046 01       		.uleb128 0x1
 4121 0047 13       		.uleb128 0x13
 4122 0048 00       		.byte	0
 4123 0049 00       		.byte	0
 4124 004a 07       		.uleb128 0x7
 4125 004b 0D       		.uleb128 0xd
 4126 004c 00       		.byte	0
 4127 004d 03       		.uleb128 0x3
 4128 004e 0E       		.uleb128 0xe
 4129 004f 3A       		.uleb128 0x3a
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 102


 4130 0050 0B       		.uleb128 0xb
 4131 0051 3B       		.uleb128 0x3b
 4132 0052 0B       		.uleb128 0xb
 4133 0053 49       		.uleb128 0x49
 4134 0054 13       		.uleb128 0x13
 4135 0055 0B       		.uleb128 0xb
 4136 0056 0B       		.uleb128 0xb
 4137 0057 0D       		.uleb128 0xd
 4138 0058 0B       		.uleb128 0xb
 4139 0059 0C       		.uleb128 0xc
 4140 005a 0B       		.uleb128 0xb
 4141 005b 38       		.uleb128 0x38
 4142 005c 0B       		.uleb128 0xb
 4143 005d 00       		.byte	0
 4144 005e 00       		.byte	0
 4145 005f 08       		.uleb128 0x8
 4146 0060 0D       		.uleb128 0xd
 4147 0061 00       		.byte	0
 4148 0062 03       		.uleb128 0x3
 4149 0063 08       		.uleb128 0x8
 4150 0064 3A       		.uleb128 0x3a
 4151 0065 0B       		.uleb128 0xb
 4152 0066 3B       		.uleb128 0x3b
 4153 0067 0B       		.uleb128 0xb
 4154 0068 49       		.uleb128 0x49
 4155 0069 13       		.uleb128 0x13
 4156 006a 0B       		.uleb128 0xb
 4157 006b 0B       		.uleb128 0xb
 4158 006c 0D       		.uleb128 0xd
 4159 006d 0B       		.uleb128 0xb
 4160 006e 0C       		.uleb128 0xc
 4161 006f 0B       		.uleb128 0xb
 4162 0070 38       		.uleb128 0x38
 4163 0071 0B       		.uleb128 0xb
 4164 0072 00       		.byte	0
 4165 0073 00       		.byte	0
 4166 0074 09       		.uleb128 0x9
 4167 0075 17       		.uleb128 0x17
 4168 0076 01       		.byte	0x1
 4169 0077 0B       		.uleb128 0xb
 4170 0078 0B       		.uleb128 0xb
 4171 0079 3A       		.uleb128 0x3a
 4172 007a 0B       		.uleb128 0xb
 4173 007b 3B       		.uleb128 0x3b
 4174 007c 0B       		.uleb128 0xb
 4175 007d 01       		.uleb128 0x1
 4176 007e 13       		.uleb128 0x13
 4177 007f 00       		.byte	0
 4178 0080 00       		.byte	0
 4179 0081 0A       		.uleb128 0xa
 4180 0082 0D       		.uleb128 0xd
 4181 0083 00       		.byte	0
 4182 0084 03       		.uleb128 0x3
 4183 0085 08       		.uleb128 0x8
 4184 0086 3A       		.uleb128 0x3a
 4185 0087 0B       		.uleb128 0xb
 4186 0088 3B       		.uleb128 0x3b
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 103


 4187 0089 0B       		.uleb128 0xb
 4188 008a 49       		.uleb128 0x49
 4189 008b 13       		.uleb128 0x13
 4190 008c 00       		.byte	0
 4191 008d 00       		.byte	0
 4192 008e 0B       		.uleb128 0xb
 4193 008f 0D       		.uleb128 0xd
 4194 0090 00       		.byte	0
 4195 0091 03       		.uleb128 0x3
 4196 0092 0E       		.uleb128 0xe
 4197 0093 3A       		.uleb128 0x3a
 4198 0094 0B       		.uleb128 0xb
 4199 0095 3B       		.uleb128 0x3b
 4200 0096 0B       		.uleb128 0xb
 4201 0097 49       		.uleb128 0x49
 4202 0098 13       		.uleb128 0x13
 4203 0099 00       		.byte	0
 4204 009a 00       		.byte	0
 4205 009b 0C       		.uleb128 0xc
 4206 009c 0D       		.uleb128 0xd
 4207 009d 00       		.byte	0
 4208 009e 03       		.uleb128 0x3
 4209 009f 0E       		.uleb128 0xe
 4210 00a0 3A       		.uleb128 0x3a
 4211 00a1 0B       		.uleb128 0xb
 4212 00a2 3B       		.uleb128 0x3b
 4213 00a3 0B       		.uleb128 0xb
 4214 00a4 49       		.uleb128 0x49
 4215 00a5 13       		.uleb128 0x13
 4216 00a6 38       		.uleb128 0x38
 4217 00a7 0B       		.uleb128 0xb
 4218 00a8 00       		.byte	0
 4219 00a9 00       		.byte	0
 4220 00aa 0D       		.uleb128 0xd
 4221 00ab 0D       		.uleb128 0xd
 4222 00ac 00       		.byte	0
 4223 00ad 03       		.uleb128 0x3
 4224 00ae 08       		.uleb128 0x8
 4225 00af 3A       		.uleb128 0x3a
 4226 00b0 0B       		.uleb128 0xb
 4227 00b1 3B       		.uleb128 0x3b
 4228 00b2 0B       		.uleb128 0xb
 4229 00b3 49       		.uleb128 0x49
 4230 00b4 13       		.uleb128 0x13
 4231 00b5 38       		.uleb128 0x38
 4232 00b6 0B       		.uleb128 0xb
 4233 00b7 00       		.byte	0
 4234 00b8 00       		.byte	0
 4235 00b9 0E       		.uleb128 0xe
 4236 00ba 0D       		.uleb128 0xd
 4237 00bb 00       		.byte	0
 4238 00bc 03       		.uleb128 0x3
 4239 00bd 0E       		.uleb128 0xe
 4240 00be 3A       		.uleb128 0x3a
 4241 00bf 0B       		.uleb128 0xb
 4242 00c0 3B       		.uleb128 0x3b
 4243 00c1 05       		.uleb128 0x5
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 104


 4244 00c2 49       		.uleb128 0x49
 4245 00c3 13       		.uleb128 0x13
 4246 00c4 00       		.byte	0
 4247 00c5 00       		.byte	0
 4248 00c6 0F       		.uleb128 0xf
 4249 00c7 16       		.uleb128 0x16
 4250 00c8 00       		.byte	0
 4251 00c9 03       		.uleb128 0x3
 4252 00ca 0E       		.uleb128 0xe
 4253 00cb 3A       		.uleb128 0x3a
 4254 00cc 0B       		.uleb128 0xb
 4255 00cd 3B       		.uleb128 0x3b
 4256 00ce 05       		.uleb128 0x5
 4257 00cf 49       		.uleb128 0x49
 4258 00d0 13       		.uleb128 0x13
 4259 00d1 00       		.byte	0
 4260 00d2 00       		.byte	0
 4261 00d3 10       		.uleb128 0x10
 4262 00d4 0F       		.uleb128 0xf
 4263 00d5 00       		.byte	0
 4264 00d6 0B       		.uleb128 0xb
 4265 00d7 0B       		.uleb128 0xb
 4266 00d8 49       		.uleb128 0x49
 4267 00d9 13       		.uleb128 0x13
 4268 00da 00       		.byte	0
 4269 00db 00       		.byte	0
 4270 00dc 11       		.uleb128 0x11
 4271 00dd 26       		.uleb128 0x26
 4272 00de 00       		.byte	0
 4273 00df 49       		.uleb128 0x49
 4274 00e0 13       		.uleb128 0x13
 4275 00e1 00       		.byte	0
 4276 00e2 00       		.byte	0
 4277 00e3 12       		.uleb128 0x12
 4278 00e4 04       		.uleb128 0x4
 4279 00e5 01       		.byte	0x1
 4280 00e6 0B       		.uleb128 0xb
 4281 00e7 0B       		.uleb128 0xb
 4282 00e8 49       		.uleb128 0x49
 4283 00e9 13       		.uleb128 0x13
 4284 00ea 3A       		.uleb128 0x3a
 4285 00eb 0B       		.uleb128 0xb
 4286 00ec 3B       		.uleb128 0x3b
 4287 00ed 0B       		.uleb128 0xb
 4288 00ee 01       		.uleb128 0x1
 4289 00ef 13       		.uleb128 0x13
 4290 00f0 00       		.byte	0
 4291 00f1 00       		.byte	0
 4292 00f2 13       		.uleb128 0x13
 4293 00f3 28       		.uleb128 0x28
 4294 00f4 00       		.byte	0
 4295 00f5 03       		.uleb128 0x3
 4296 00f6 0E       		.uleb128 0xe
 4297 00f7 1C       		.uleb128 0x1c
 4298 00f8 0B       		.uleb128 0xb
 4299 00f9 00       		.byte	0
 4300 00fa 00       		.byte	0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 105


 4301 00fb 14       		.uleb128 0x14
 4302 00fc 26       		.uleb128 0x26
 4303 00fd 00       		.byte	0
 4304 00fe 00       		.byte	0
 4305 00ff 00       		.byte	0
 4306 0100 15       		.uleb128 0x15
 4307 0101 15       		.uleb128 0x15
 4308 0102 01       		.byte	0x1
 4309 0103 27       		.uleb128 0x27
 4310 0104 19       		.uleb128 0x19
 4311 0105 49       		.uleb128 0x49
 4312 0106 13       		.uleb128 0x13
 4313 0107 01       		.uleb128 0x1
 4314 0108 13       		.uleb128 0x13
 4315 0109 00       		.byte	0
 4316 010a 00       		.byte	0
 4317 010b 16       		.uleb128 0x16
 4318 010c 05       		.uleb128 0x5
 4319 010d 00       		.byte	0
 4320 010e 49       		.uleb128 0x49
 4321 010f 13       		.uleb128 0x13
 4322 0110 00       		.byte	0
 4323 0111 00       		.byte	0
 4324 0112 17       		.uleb128 0x17
 4325 0113 13       		.uleb128 0x13
 4326 0114 01       		.byte	0x1
 4327 0115 03       		.uleb128 0x3
 4328 0116 0E       		.uleb128 0xe
 4329 0117 0B       		.uleb128 0xb
 4330 0118 0B       		.uleb128 0xb
 4331 0119 3A       		.uleb128 0x3a
 4332 011a 0B       		.uleb128 0xb
 4333 011b 3B       		.uleb128 0x3b
 4334 011c 0B       		.uleb128 0xb
 4335 011d 01       		.uleb128 0x1
 4336 011e 13       		.uleb128 0x13
 4337 011f 00       		.byte	0
 4338 0120 00       		.byte	0
 4339 0121 18       		.uleb128 0x18
 4340 0122 15       		.uleb128 0x15
 4341 0123 01       		.byte	0x1
 4342 0124 27       		.uleb128 0x27
 4343 0125 19       		.uleb128 0x19
 4344 0126 01       		.uleb128 0x1
 4345 0127 13       		.uleb128 0x13
 4346 0128 00       		.byte	0
 4347 0129 00       		.byte	0
 4348 012a 19       		.uleb128 0x19
 4349 012b 2E       		.uleb128 0x2e
 4350 012c 01       		.byte	0x1
 4351 012d 03       		.uleb128 0x3
 4352 012e 0E       		.uleb128 0xe
 4353 012f 3A       		.uleb128 0x3a
 4354 0130 0B       		.uleb128 0xb
 4355 0131 3B       		.uleb128 0x3b
 4356 0132 05       		.uleb128 0x5
 4357 0133 27       		.uleb128 0x27
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 106


 4358 0134 19       		.uleb128 0x19
 4359 0135 49       		.uleb128 0x49
 4360 0136 13       		.uleb128 0x13
 4361 0137 20       		.uleb128 0x20
 4362 0138 0B       		.uleb128 0xb
 4363 0139 01       		.uleb128 0x1
 4364 013a 13       		.uleb128 0x13
 4365 013b 00       		.byte	0
 4366 013c 00       		.byte	0
 4367 013d 1A       		.uleb128 0x1a
 4368 013e 05       		.uleb128 0x5
 4369 013f 00       		.byte	0
 4370 0140 03       		.uleb128 0x3
 4371 0141 08       		.uleb128 0x8
 4372 0142 3A       		.uleb128 0x3a
 4373 0143 0B       		.uleb128 0xb
 4374 0144 3B       		.uleb128 0x3b
 4375 0145 05       		.uleb128 0x5
 4376 0146 49       		.uleb128 0x49
 4377 0147 13       		.uleb128 0x13
 4378 0148 00       		.byte	0
 4379 0149 00       		.byte	0
 4380 014a 1B       		.uleb128 0x1b
 4381 014b 2E       		.uleb128 0x2e
 4382 014c 01       		.byte	0x1
 4383 014d 03       		.uleb128 0x3
 4384 014e 0E       		.uleb128 0xe
 4385 014f 3A       		.uleb128 0x3a
 4386 0150 0B       		.uleb128 0xb
 4387 0151 3B       		.uleb128 0x3b
 4388 0152 05       		.uleb128 0x5
 4389 0153 27       		.uleb128 0x27
 4390 0154 19       		.uleb128 0x19
 4391 0155 49       		.uleb128 0x49
 4392 0156 13       		.uleb128 0x13
 4393 0157 11       		.uleb128 0x11
 4394 0158 01       		.uleb128 0x1
 4395 0159 12       		.uleb128 0x12
 4396 015a 06       		.uleb128 0x6
 4397 015b 40       		.uleb128 0x40
 4398 015c 18       		.uleb128 0x18
 4399 015d 9742     		.uleb128 0x2117
 4400 015f 19       		.uleb128 0x19
 4401 0160 01       		.uleb128 0x1
 4402 0161 13       		.uleb128 0x13
 4403 0162 00       		.byte	0
 4404 0163 00       		.byte	0
 4405 0164 1C       		.uleb128 0x1c
 4406 0165 05       		.uleb128 0x5
 4407 0166 00       		.byte	0
 4408 0167 03       		.uleb128 0x3
 4409 0168 08       		.uleb128 0x8
 4410 0169 3A       		.uleb128 0x3a
 4411 016a 0B       		.uleb128 0xb
 4412 016b 3B       		.uleb128 0x3b
 4413 016c 05       		.uleb128 0x5
 4414 016d 49       		.uleb128 0x49
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 107


 4415 016e 13       		.uleb128 0x13
 4416 016f 02       		.uleb128 0x2
 4417 0170 17       		.uleb128 0x17
 4418 0171 00       		.byte	0
 4419 0172 00       		.byte	0
 4420 0173 1D       		.uleb128 0x1d
 4421 0174 05       		.uleb128 0x5
 4422 0175 00       		.byte	0
 4423 0176 03       		.uleb128 0x3
 4424 0177 08       		.uleb128 0x8
 4425 0178 3A       		.uleb128 0x3a
 4426 0179 0B       		.uleb128 0xb
 4427 017a 3B       		.uleb128 0x3b
 4428 017b 05       		.uleb128 0x5
 4429 017c 49       		.uleb128 0x49
 4430 017d 13       		.uleb128 0x13
 4431 017e 02       		.uleb128 0x2
 4432 017f 18       		.uleb128 0x18
 4433 0180 00       		.byte	0
 4434 0181 00       		.byte	0
 4435 0182 1E       		.uleb128 0x1e
 4436 0183 2E       		.uleb128 0x2e
 4437 0184 01       		.byte	0x1
 4438 0185 3F       		.uleb128 0x3f
 4439 0186 19       		.uleb128 0x19
 4440 0187 03       		.uleb128 0x3
 4441 0188 0E       		.uleb128 0xe
 4442 0189 3A       		.uleb128 0x3a
 4443 018a 0B       		.uleb128 0xb
 4444 018b 3B       		.uleb128 0x3b
 4445 018c 05       		.uleb128 0x5
 4446 018d 27       		.uleb128 0x27
 4447 018e 19       		.uleb128 0x19
 4448 018f 49       		.uleb128 0x49
 4449 0190 13       		.uleb128 0x13
 4450 0191 11       		.uleb128 0x11
 4451 0192 01       		.uleb128 0x1
 4452 0193 12       		.uleb128 0x12
 4453 0194 06       		.uleb128 0x6
 4454 0195 40       		.uleb128 0x40
 4455 0196 18       		.uleb128 0x18
 4456 0197 9742     		.uleb128 0x2117
 4457 0199 19       		.uleb128 0x19
 4458 019a 01       		.uleb128 0x1
 4459 019b 13       		.uleb128 0x13
 4460 019c 00       		.byte	0
 4461 019d 00       		.byte	0
 4462 019e 1F       		.uleb128 0x1f
 4463 019f 05       		.uleb128 0x5
 4464 01a0 00       		.byte	0
 4465 01a1 03       		.uleb128 0x3
 4466 01a2 0E       		.uleb128 0xe
 4467 01a3 3A       		.uleb128 0x3a
 4468 01a4 0B       		.uleb128 0xb
 4469 01a5 3B       		.uleb128 0x3b
 4470 01a6 05       		.uleb128 0x5
 4471 01a7 49       		.uleb128 0x49
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 108


 4472 01a8 13       		.uleb128 0x13
 4473 01a9 02       		.uleb128 0x2
 4474 01aa 17       		.uleb128 0x17
 4475 01ab 00       		.byte	0
 4476 01ac 00       		.byte	0
 4477 01ad 20       		.uleb128 0x20
 4478 01ae 34       		.uleb128 0x34
 4479 01af 00       		.byte	0
 4480 01b0 03       		.uleb128 0x3
 4481 01b1 0E       		.uleb128 0xe
 4482 01b2 3A       		.uleb128 0x3a
 4483 01b3 0B       		.uleb128 0xb
 4484 01b4 3B       		.uleb128 0x3b
 4485 01b5 05       		.uleb128 0x5
 4486 01b6 49       		.uleb128 0x49
 4487 01b7 13       		.uleb128 0x13
 4488 01b8 02       		.uleb128 0x2
 4489 01b9 17       		.uleb128 0x17
 4490 01ba 00       		.byte	0
 4491 01bb 00       		.byte	0
 4492 01bc 21       		.uleb128 0x21
 4493 01bd 0B       		.uleb128 0xb
 4494 01be 01       		.byte	0x1
 4495 01bf 55       		.uleb128 0x55
 4496 01c0 17       		.uleb128 0x17
 4497 01c1 01       		.uleb128 0x1
 4498 01c2 13       		.uleb128 0x13
 4499 01c3 00       		.byte	0
 4500 01c4 00       		.byte	0
 4501 01c5 22       		.uleb128 0x22
 4502 01c6 34       		.uleb128 0x34
 4503 01c7 00       		.byte	0
 4504 01c8 03       		.uleb128 0x3
 4505 01c9 08       		.uleb128 0x8
 4506 01ca 3A       		.uleb128 0x3a
 4507 01cb 0B       		.uleb128 0xb
 4508 01cc 3B       		.uleb128 0x3b
 4509 01cd 05       		.uleb128 0x5
 4510 01ce 49       		.uleb128 0x49
 4511 01cf 13       		.uleb128 0x13
 4512 01d0 02       		.uleb128 0x2
 4513 01d1 17       		.uleb128 0x17
 4514 01d2 00       		.byte	0
 4515 01d3 00       		.byte	0
 4516 01d4 23       		.uleb128 0x23
 4517 01d5 898201   		.uleb128 0x4109
 4518 01d8 01       		.byte	0x1
 4519 01d9 11       		.uleb128 0x11
 4520 01da 01       		.uleb128 0x1
 4521 01db 31       		.uleb128 0x31
 4522 01dc 13       		.uleb128 0x13
 4523 01dd 00       		.byte	0
 4524 01de 00       		.byte	0
 4525 01df 24       		.uleb128 0x24
 4526 01e0 8A8201   		.uleb128 0x410a
 4527 01e3 00       		.byte	0
 4528 01e4 02       		.uleb128 0x2
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 109


 4529 01e5 18       		.uleb128 0x18
 4530 01e6 9142     		.uleb128 0x2111
 4531 01e8 18       		.uleb128 0x18
 4532 01e9 00       		.byte	0
 4533 01ea 00       		.byte	0
 4534 01eb 25       		.uleb128 0x25
 4535 01ec 2E       		.uleb128 0x2e
 4536 01ed 01       		.byte	0x1
 4537 01ee 3F       		.uleb128 0x3f
 4538 01ef 19       		.uleb128 0x19
 4539 01f0 03       		.uleb128 0x3
 4540 01f1 0E       		.uleb128 0xe
 4541 01f2 3A       		.uleb128 0x3a
 4542 01f3 0B       		.uleb128 0xb
 4543 01f4 3B       		.uleb128 0x3b
 4544 01f5 05       		.uleb128 0x5
 4545 01f6 27       		.uleb128 0x27
 4546 01f7 19       		.uleb128 0x19
 4547 01f8 11       		.uleb128 0x11
 4548 01f9 01       		.uleb128 0x1
 4549 01fa 12       		.uleb128 0x12
 4550 01fb 06       		.uleb128 0x6
 4551 01fc 40       		.uleb128 0x40
 4552 01fd 18       		.uleb128 0x18
 4553 01fe 9742     		.uleb128 0x2117
 4554 0200 19       		.uleb128 0x19
 4555 0201 01       		.uleb128 0x1
 4556 0202 13       		.uleb128 0x13
 4557 0203 00       		.byte	0
 4558 0204 00       		.byte	0
 4559 0205 26       		.uleb128 0x26
 4560 0206 34       		.uleb128 0x34
 4561 0207 00       		.byte	0
 4562 0208 03       		.uleb128 0x3
 4563 0209 0E       		.uleb128 0xe
 4564 020a 3A       		.uleb128 0x3a
 4565 020b 0B       		.uleb128 0xb
 4566 020c 3B       		.uleb128 0x3b
 4567 020d 05       		.uleb128 0x5
 4568 020e 49       		.uleb128 0x49
 4569 020f 13       		.uleb128 0x13
 4570 0210 02       		.uleb128 0x2
 4571 0211 18       		.uleb128 0x18
 4572 0212 00       		.byte	0
 4573 0213 00       		.byte	0
 4574 0214 27       		.uleb128 0x27
 4575 0215 898201   		.uleb128 0x4109
 4576 0218 00       		.byte	0
 4577 0219 11       		.uleb128 0x11
 4578 021a 01       		.uleb128 0x1
 4579 021b 31       		.uleb128 0x31
 4580 021c 13       		.uleb128 0x13
 4581 021d 00       		.byte	0
 4582 021e 00       		.byte	0
 4583 021f 28       		.uleb128 0x28
 4584 0220 0B       		.uleb128 0xb
 4585 0221 01       		.byte	0x1
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 110


 4586 0222 11       		.uleb128 0x11
 4587 0223 01       		.uleb128 0x1
 4588 0224 12       		.uleb128 0x12
 4589 0225 06       		.uleb128 0x6
 4590 0226 01       		.uleb128 0x1
 4591 0227 13       		.uleb128 0x13
 4592 0228 00       		.byte	0
 4593 0229 00       		.byte	0
 4594 022a 29       		.uleb128 0x29
 4595 022b 1D       		.uleb128 0x1d
 4596 022c 01       		.byte	0x1
 4597 022d 31       		.uleb128 0x31
 4598 022e 13       		.uleb128 0x13
 4599 022f 11       		.uleb128 0x11
 4600 0230 01       		.uleb128 0x1
 4601 0231 12       		.uleb128 0x12
 4602 0232 06       		.uleb128 0x6
 4603 0233 58       		.uleb128 0x58
 4604 0234 0B       		.uleb128 0xb
 4605 0235 59       		.uleb128 0x59
 4606 0236 05       		.uleb128 0x5
 4607 0237 00       		.byte	0
 4608 0238 00       		.byte	0
 4609 0239 2A       		.uleb128 0x2a
 4610 023a 05       		.uleb128 0x5
 4611 023b 00       		.byte	0
 4612 023c 31       		.uleb128 0x31
 4613 023d 13       		.uleb128 0x13
 4614 023e 02       		.uleb128 0x2
 4615 023f 17       		.uleb128 0x17
 4616 0240 00       		.byte	0
 4617 0241 00       		.byte	0
 4618 0242 2B       		.uleb128 0x2b
 4619 0243 898201   		.uleb128 0x4109
 4620 0246 01       		.byte	0x1
 4621 0247 11       		.uleb128 0x11
 4622 0248 01       		.uleb128 0x1
 4623 0249 31       		.uleb128 0x31
 4624 024a 13       		.uleb128 0x13
 4625 024b 01       		.uleb128 0x1
 4626 024c 13       		.uleb128 0x13
 4627 024d 00       		.byte	0
 4628 024e 00       		.byte	0
 4629 024f 2C       		.uleb128 0x2c
 4630 0250 01       		.uleb128 0x1
 4631 0251 01       		.byte	0x1
 4632 0252 49       		.uleb128 0x49
 4633 0253 13       		.uleb128 0x13
 4634 0254 01       		.uleb128 0x1
 4635 0255 13       		.uleb128 0x13
 4636 0256 00       		.byte	0
 4637 0257 00       		.byte	0
 4638 0258 2D       		.uleb128 0x2d
 4639 0259 21       		.uleb128 0x21
 4640 025a 00       		.byte	0
 4641 025b 49       		.uleb128 0x49
 4642 025c 13       		.uleb128 0x13
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 111


 4643 025d 2F       		.uleb128 0x2f
 4644 025e 0B       		.uleb128 0xb
 4645 025f 00       		.byte	0
 4646 0260 00       		.byte	0
 4647 0261 2E       		.uleb128 0x2e
 4648 0262 34       		.uleb128 0x34
 4649 0263 00       		.byte	0
 4650 0264 03       		.uleb128 0x3
 4651 0265 0E       		.uleb128 0xe
 4652 0266 3A       		.uleb128 0x3a
 4653 0267 0B       		.uleb128 0xb
 4654 0268 3B       		.uleb128 0x3b
 4655 0269 05       		.uleb128 0x5
 4656 026a 49       		.uleb128 0x49
 4657 026b 13       		.uleb128 0x13
 4658 026c 00       		.byte	0
 4659 026d 00       		.byte	0
 4660 026e 2F       		.uleb128 0x2f
 4661 026f 2E       		.uleb128 0x2e
 4662 0270 01       		.byte	0x1
 4663 0271 3F       		.uleb128 0x3f
 4664 0272 19       		.uleb128 0x19
 4665 0273 03       		.uleb128 0x3
 4666 0274 0E       		.uleb128 0xe
 4667 0275 3A       		.uleb128 0x3a
 4668 0276 0B       		.uleb128 0xb
 4669 0277 3B       		.uleb128 0x3b
 4670 0278 0B       		.uleb128 0xb
 4671 0279 27       		.uleb128 0x27
 4672 027a 19       		.uleb128 0x19
 4673 027b 49       		.uleb128 0x49
 4674 027c 13       		.uleb128 0x13
 4675 027d 11       		.uleb128 0x11
 4676 027e 01       		.uleb128 0x1
 4677 027f 12       		.uleb128 0x12
 4678 0280 06       		.uleb128 0x6
 4679 0281 40       		.uleb128 0x40
 4680 0282 18       		.uleb128 0x18
 4681 0283 9742     		.uleb128 0x2117
 4682 0285 19       		.uleb128 0x19
 4683 0286 01       		.uleb128 0x1
 4684 0287 13       		.uleb128 0x13
 4685 0288 00       		.byte	0
 4686 0289 00       		.byte	0
 4687 028a 30       		.uleb128 0x30
 4688 028b 05       		.uleb128 0x5
 4689 028c 00       		.byte	0
 4690 028d 03       		.uleb128 0x3
 4691 028e 08       		.uleb128 0x8
 4692 028f 3A       		.uleb128 0x3a
 4693 0290 0B       		.uleb128 0xb
 4694 0291 3B       		.uleb128 0x3b
 4695 0292 0B       		.uleb128 0xb
 4696 0293 49       		.uleb128 0x49
 4697 0294 13       		.uleb128 0x13
 4698 0295 02       		.uleb128 0x2
 4699 0296 17       		.uleb128 0x17
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 112


 4700 0297 00       		.byte	0
 4701 0298 00       		.byte	0
 4702 0299 31       		.uleb128 0x31
 4703 029a 05       		.uleb128 0x5
 4704 029b 00       		.byte	0
 4705 029c 03       		.uleb128 0x3
 4706 029d 0E       		.uleb128 0xe
 4707 029e 3A       		.uleb128 0x3a
 4708 029f 0B       		.uleb128 0xb
 4709 02a0 3B       		.uleb128 0x3b
 4710 02a1 0B       		.uleb128 0xb
 4711 02a2 49       		.uleb128 0x49
 4712 02a3 13       		.uleb128 0x13
 4713 02a4 02       		.uleb128 0x2
 4714 02a5 17       		.uleb128 0x17
 4715 02a6 00       		.byte	0
 4716 02a7 00       		.byte	0
 4717 02a8 32       		.uleb128 0x32
 4718 02a9 34       		.uleb128 0x34
 4719 02aa 00       		.byte	0
 4720 02ab 03       		.uleb128 0x3
 4721 02ac 08       		.uleb128 0x8
 4722 02ad 3A       		.uleb128 0x3a
 4723 02ae 0B       		.uleb128 0xb
 4724 02af 3B       		.uleb128 0x3b
 4725 02b0 0B       		.uleb128 0xb
 4726 02b1 49       		.uleb128 0x49
 4727 02b2 13       		.uleb128 0x13
 4728 02b3 02       		.uleb128 0x2
 4729 02b4 17       		.uleb128 0x17
 4730 02b5 00       		.byte	0
 4731 02b6 00       		.byte	0
 4732 02b7 33       		.uleb128 0x33
 4733 02b8 898201   		.uleb128 0x4109
 4734 02bb 01       		.byte	0x1
 4735 02bc 11       		.uleb128 0x11
 4736 02bd 01       		.uleb128 0x1
 4737 02be 01       		.uleb128 0x1
 4738 02bf 13       		.uleb128 0x13
 4739 02c0 00       		.byte	0
 4740 02c1 00       		.byte	0
 4741 02c2 34       		.uleb128 0x34
 4742 02c3 34       		.uleb128 0x34
 4743 02c4 00       		.byte	0
 4744 02c5 03       		.uleb128 0x3
 4745 02c6 0E       		.uleb128 0xe
 4746 02c7 3A       		.uleb128 0x3a
 4747 02c8 0B       		.uleb128 0xb
 4748 02c9 3B       		.uleb128 0x3b
 4749 02ca 0B       		.uleb128 0xb
 4750 02cb 49       		.uleb128 0x49
 4751 02cc 13       		.uleb128 0x13
 4752 02cd 02       		.uleb128 0x2
 4753 02ce 17       		.uleb128 0x17
 4754 02cf 00       		.byte	0
 4755 02d0 00       		.byte	0
 4756 02d1 35       		.uleb128 0x35
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 113


 4757 02d2 05       		.uleb128 0x5
 4758 02d3 00       		.byte	0
 4759 02d4 03       		.uleb128 0x3
 4760 02d5 08       		.uleb128 0x8
 4761 02d6 3A       		.uleb128 0x3a
 4762 02d7 0B       		.uleb128 0xb
 4763 02d8 3B       		.uleb128 0x3b
 4764 02d9 0B       		.uleb128 0xb
 4765 02da 49       		.uleb128 0x49
 4766 02db 13       		.uleb128 0x13
 4767 02dc 02       		.uleb128 0x2
 4768 02dd 18       		.uleb128 0x18
 4769 02de 00       		.byte	0
 4770 02df 00       		.byte	0
 4771 02e0 36       		.uleb128 0x36
 4772 02e1 898201   		.uleb128 0x4109
 4773 02e4 01       		.byte	0x1
 4774 02e5 11       		.uleb128 0x11
 4775 02e6 01       		.uleb128 0x1
 4776 02e7 9342     		.uleb128 0x2113
 4777 02e9 18       		.uleb128 0x18
 4778 02ea 00       		.byte	0
 4779 02eb 00       		.byte	0
 4780 02ec 37       		.uleb128 0x37
 4781 02ed 2E       		.uleb128 0x2e
 4782 02ee 01       		.byte	0x1
 4783 02ef 3F       		.uleb128 0x3f
 4784 02f0 19       		.uleb128 0x19
 4785 02f1 03       		.uleb128 0x3
 4786 02f2 0E       		.uleb128 0xe
 4787 02f3 3A       		.uleb128 0x3a
 4788 02f4 0B       		.uleb128 0xb
 4789 02f5 3B       		.uleb128 0x3b
 4790 02f6 0B       		.uleb128 0xb
 4791 02f7 27       		.uleb128 0x27
 4792 02f8 19       		.uleb128 0x19
 4793 02f9 11       		.uleb128 0x11
 4794 02fa 01       		.uleb128 0x1
 4795 02fb 12       		.uleb128 0x12
 4796 02fc 06       		.uleb128 0x6
 4797 02fd 40       		.uleb128 0x40
 4798 02fe 18       		.uleb128 0x18
 4799 02ff 9742     		.uleb128 0x2117
 4800 0301 19       		.uleb128 0x19
 4801 0302 01       		.uleb128 0x1
 4802 0303 13       		.uleb128 0x13
 4803 0304 00       		.byte	0
 4804 0305 00       		.byte	0
 4805 0306 38       		.uleb128 0x38
 4806 0307 05       		.uleb128 0x5
 4807 0308 00       		.byte	0
 4808 0309 03       		.uleb128 0x3
 4809 030a 0E       		.uleb128 0xe
 4810 030b 3A       		.uleb128 0x3a
 4811 030c 0B       		.uleb128 0xb
 4812 030d 3B       		.uleb128 0x3b
 4813 030e 0B       		.uleb128 0xb
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 114


 4814 030f 49       		.uleb128 0x49
 4815 0310 13       		.uleb128 0x13
 4816 0311 02       		.uleb128 0x2
 4817 0312 18       		.uleb128 0x18
 4818 0313 00       		.byte	0
 4819 0314 00       		.byte	0
 4820 0315 39       		.uleb128 0x39
 4821 0316 34       		.uleb128 0x34
 4822 0317 00       		.byte	0
 4823 0318 03       		.uleb128 0x3
 4824 0319 0E       		.uleb128 0xe
 4825 031a 3A       		.uleb128 0x3a
 4826 031b 0B       		.uleb128 0xb
 4827 031c 3B       		.uleb128 0x3b
 4828 031d 0B       		.uleb128 0xb
 4829 031e 49       		.uleb128 0x49
 4830 031f 13       		.uleb128 0x13
 4831 0320 3F       		.uleb128 0x3f
 4832 0321 19       		.uleb128 0x19
 4833 0322 3C       		.uleb128 0x3c
 4834 0323 19       		.uleb128 0x19
 4835 0324 00       		.byte	0
 4836 0325 00       		.byte	0
 4837 0326 3A       		.uleb128 0x3a
 4838 0327 2E       		.uleb128 0x2e
 4839 0328 00       		.byte	0
 4840 0329 3F       		.uleb128 0x3f
 4841 032a 19       		.uleb128 0x19
 4842 032b 3C       		.uleb128 0x3c
 4843 032c 19       		.uleb128 0x19
 4844 032d 6E       		.uleb128 0x6e
 4845 032e 0E       		.uleb128 0xe
 4846 032f 03       		.uleb128 0x3
 4847 0330 0E       		.uleb128 0xe
 4848 0331 3A       		.uleb128 0x3a
 4849 0332 0B       		.uleb128 0xb
 4850 0333 3B       		.uleb128 0x3b
 4851 0334 0B       		.uleb128 0xb
 4852 0335 00       		.byte	0
 4853 0336 00       		.byte	0
 4854 0337 00       		.byte	0
 4855              		.section	.debug_loc,"",%progbits
 4856              	.Ldebug_loc0:
 4857              	.LLST0:
 4858 0000 00000000 		.4byte	.LVL0
 4859 0004 02000000 		.4byte	.LVL1
 4860 0008 0100     		.2byte	0x1
 4861 000a 50       		.byte	0x50
 4862 000b 02000000 		.4byte	.LVL1
 4863 000f 04000000 		.4byte	.LFE52
 4864 0013 0400     		.2byte	0x4
 4865 0015 F3       		.byte	0xf3
 4866 0016 01       		.uleb128 0x1
 4867 0017 50       		.byte	0x50
 4868 0018 9F       		.byte	0x9f
 4869 0019 00000000 		.4byte	0
 4870 001d 00000000 		.4byte	0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 115


 4871              	.LLST1:
 4872 0021 00000000 		.4byte	.LVL2
 4873 0025 08000000 		.4byte	.LVL3
 4874 0029 0100     		.2byte	0x1
 4875 002b 50       		.byte	0x50
 4876 002c 08000000 		.4byte	.LVL3
 4877 0030 6E000000 		.4byte	.LFE48
 4878 0034 0400     		.2byte	0x4
 4879 0036 F3       		.byte	0xf3
 4880 0037 01       		.uleb128 0x1
 4881 0038 50       		.byte	0x50
 4882 0039 9F       		.byte	0x9f
 4883 003a 00000000 		.4byte	0
 4884 003e 00000000 		.4byte	0
 4885              	.LLST2:
 4886 0042 00000000 		.4byte	.LVL2
 4887 0046 0B000000 		.4byte	.LVL4-1
 4888 004a 0100     		.2byte	0x1
 4889 004c 51       		.byte	0x51
 4890 004d 0B000000 		.4byte	.LVL4-1
 4891 0051 6E000000 		.4byte	.LFE48
 4892 0055 0100     		.2byte	0x1
 4893 0057 55       		.byte	0x55
 4894 0058 00000000 		.4byte	0
 4895 005c 00000000 		.4byte	0
 4896              	.LLST3:
 4897 0060 00000000 		.4byte	.LVL2
 4898 0064 0B000000 		.4byte	.LVL4-1
 4899 0068 0100     		.2byte	0x1
 4900 006a 52       		.byte	0x52
 4901 006b 0B000000 		.4byte	.LVL4-1
 4902 006f 6E000000 		.4byte	.LFE48
 4903 0073 0100     		.2byte	0x1
 4904 0075 54       		.byte	0x54
 4905 0076 00000000 		.4byte	0
 4906 007a 00000000 		.4byte	0
 4907              	.LLST4:
 4908 007e 0C000000 		.4byte	.LVL4
 4909 0082 44000000 		.4byte	.LVL7
 4910 0086 0100     		.2byte	0x1
 4911 0088 50       		.byte	0x50
 4912 0089 46000000 		.4byte	.LVL8
 4913 008d 4E000000 		.4byte	.LVL9
 4914 0091 0100     		.2byte	0x1
 4915 0093 50       		.byte	0x50
 4916 0094 66000000 		.4byte	.LVL10
 4917 0098 68000000 		.4byte	.LVL11
 4918 009c 0100     		.2byte	0x1
 4919 009e 50       		.byte	0x50
 4920 009f 6A000000 		.4byte	.LVL12
 4921 00a3 6C000000 		.4byte	.LVL13
 4922 00a7 0100     		.2byte	0x1
 4923 00a9 50       		.byte	0x50
 4924 00aa 00000000 		.4byte	0
 4925 00ae 00000000 		.4byte	0
 4926              	.LLST5:
 4927 00b2 14000000 		.4byte	.LVL5
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 116


 4928 00b6 2A000000 		.4byte	.LVL6
 4929 00ba 0E00     		.2byte	0xe
 4930 00bc 75       		.byte	0x75
 4931 00bd 00       		.sleb128 0
 4932 00be 94       		.byte	0x94
 4933 00bf 01       		.byte	0x1
 4934 00c0 08       		.byte	0x8
 4935 00c1 FF       		.byte	0xff
 4936 00c2 1A       		.byte	0x1a
 4937 00c3 09       		.byte	0x9
 4938 00c4 FF       		.byte	0xff
 4939 00c5 24       		.byte	0x24
 4940 00c6 09       		.byte	0x9
 4941 00c7 FF       		.byte	0xff
 4942 00c8 25       		.byte	0x25
 4943 00c9 9F       		.byte	0x9f
 4944 00ca 66000000 		.4byte	.LVL10
 4945 00ce 6A000000 		.4byte	.LVL12
 4946 00d2 0E00     		.2byte	0xe
 4947 00d4 75       		.byte	0x75
 4948 00d5 00       		.sleb128 0
 4949 00d6 94       		.byte	0x94
 4950 00d7 01       		.byte	0x1
 4951 00d8 08       		.byte	0x8
 4952 00d9 FF       		.byte	0xff
 4953 00da 1A       		.byte	0x1a
 4954 00db 09       		.byte	0x9
 4955 00dc FF       		.byte	0xff
 4956 00dd 24       		.byte	0x24
 4957 00de 09       		.byte	0x9
 4958 00df FF       		.byte	0xff
 4959 00e0 25       		.byte	0x25
 4960 00e1 9F       		.byte	0x9f
 4961 00e2 00000000 		.4byte	0
 4962 00e6 00000000 		.4byte	0
 4963              	.LLST6:
 4964 00ea 00000000 		.4byte	.LVL14
 4965 00ee 0A000000 		.4byte	.LVL16
 4966 00f2 0100     		.2byte	0x1
 4967 00f4 50       		.byte	0x50
 4968 00f5 0A000000 		.4byte	.LVL16
 4969 00f9 24000000 		.4byte	.LFE51
 4970 00fd 0400     		.2byte	0x4
 4971 00ff F3       		.byte	0xf3
 4972 0100 01       		.uleb128 0x1
 4973 0101 50       		.byte	0x50
 4974 0102 9F       		.byte	0x9f
 4975 0103 00000000 		.4byte	0
 4976 0107 00000000 		.4byte	0
 4977              	.LLST7:
 4978 010b 00000000 		.4byte	.LVL14
 4979 010f 0F000000 		.4byte	.LVL17-1
 4980 0113 0100     		.2byte	0x1
 4981 0115 51       		.byte	0x51
 4982 0116 0F000000 		.4byte	.LVL17-1
 4983 011a 22000000 		.4byte	.LVL20
 4984 011e 0100     		.2byte	0x1
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 117


 4985 0120 54       		.byte	0x54
 4986 0121 22000000 		.4byte	.LVL20
 4987 0125 24000000 		.4byte	.LFE51
 4988 0129 0400     		.2byte	0x4
 4989 012b F3       		.byte	0xf3
 4990 012c 01       		.uleb128 0x1
 4991 012d 51       		.byte	0x51
 4992 012e 9F       		.byte	0x9f
 4993 012f 00000000 		.4byte	0
 4994 0133 00000000 		.4byte	0
 4995              	.LLST8:
 4996 0137 00000000 		.4byte	.LVL21
 4997 013b 48000000 		.4byte	.LVL23
 4998 013f 0100     		.2byte	0x1
 4999 0141 50       		.byte	0x50
 5000 0142 48000000 		.4byte	.LVL23
 5001 0146 E4000000 		.4byte	.LVL41
 5002 014a 0100     		.2byte	0x1
 5003 014c 57       		.byte	0x57
 5004 014d E4000000 		.4byte	.LVL41
 5005 0151 28010000 		.4byte	.LVL49
 5006 0155 0400     		.2byte	0x4
 5007 0157 F3       		.byte	0xf3
 5008 0158 01       		.uleb128 0x1
 5009 0159 50       		.byte	0x50
 5010 015a 9F       		.byte	0x9f
 5011 015b 28010000 		.4byte	.LVL49
 5012 015f 3D010000 		.4byte	.LVL50-1
 5013 0163 0100     		.2byte	0x1
 5014 0165 50       		.byte	0x50
 5015 0166 3D010000 		.4byte	.LVL50-1
 5016 016a 42010000 		.4byte	.LVL51
 5017 016e 0100     		.2byte	0x1
 5018 0170 57       		.byte	0x57
 5019 0171 42010000 		.4byte	.LVL51
 5020 0175 46010000 		.4byte	.LVL52
 5021 0179 0100     		.2byte	0x1
 5022 017b 50       		.byte	0x50
 5023 017c 46010000 		.4byte	.LVL52
 5024 0180 48010000 		.4byte	.LVL53
 5025 0184 0100     		.2byte	0x1
 5026 0186 57       		.byte	0x57
 5027 0187 48010000 		.4byte	.LVL53
 5028 018b 54010000 		.4byte	.LFE49
 5029 018f 0400     		.2byte	0x4
 5030 0191 F3       		.byte	0xf3
 5031 0192 01       		.uleb128 0x1
 5032 0193 50       		.byte	0x50
 5033 0194 9F       		.byte	0x9f
 5034 0195 00000000 		.4byte	0
 5035 0199 00000000 		.4byte	0
 5036              	.LLST9:
 5037 019d 00000000 		.4byte	.LVL21
 5038 01a1 4B000000 		.4byte	.LVL24-1
 5039 01a5 0100     		.2byte	0x1
 5040 01a7 51       		.byte	0x51
 5041 01a8 4B000000 		.4byte	.LVL24-1
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 118


 5042 01ac 28010000 		.4byte	.LVL49
 5043 01b0 0100     		.2byte	0x1
 5044 01b2 54       		.byte	0x54
 5045 01b3 28010000 		.4byte	.LVL49
 5046 01b7 3D010000 		.4byte	.LVL50-1
 5047 01bb 0100     		.2byte	0x1
 5048 01bd 51       		.byte	0x51
 5049 01be 3D010000 		.4byte	.LVL50-1
 5050 01c2 42010000 		.4byte	.LVL51
 5051 01c6 0100     		.2byte	0x1
 5052 01c8 54       		.byte	0x54
 5053 01c9 42010000 		.4byte	.LVL51
 5054 01cd 46010000 		.4byte	.LVL52
 5055 01d1 0100     		.2byte	0x1
 5056 01d3 51       		.byte	0x51
 5057 01d4 46010000 		.4byte	.LVL52
 5058 01d8 48010000 		.4byte	.LVL53
 5059 01dc 0100     		.2byte	0x1
 5060 01de 54       		.byte	0x54
 5061 01df 48010000 		.4byte	.LVL53
 5062 01e3 54010000 		.4byte	.LFE49
 5063 01e7 0400     		.2byte	0x4
 5064 01e9 F3       		.byte	0xf3
 5065 01ea 01       		.uleb128 0x1
 5066 01eb 51       		.byte	0x51
 5067 01ec 9F       		.byte	0x9f
 5068 01ed 00000000 		.4byte	0
 5069 01f1 00000000 		.4byte	0
 5070              	.LLST10:
 5071 01f5 1E000000 		.4byte	.LVL22
 5072 01f9 4B000000 		.4byte	.LVL24-1
 5073 01fd 0E00     		.2byte	0xe
 5074 01ff 71       		.byte	0x71
 5075 0200 0C       		.sleb128 12
 5076 0201 94       		.byte	0x94
 5077 0202 01       		.byte	0x1
 5078 0203 08       		.byte	0x8
 5079 0204 FF       		.byte	0xff
 5080 0205 1A       		.byte	0x1a
 5081 0206 09       		.byte	0x9
 5082 0207 FF       		.byte	0xff
 5083 0208 24       		.byte	0x24
 5084 0209 09       		.byte	0x9
 5085 020a FF       		.byte	0xff
 5086 020b 25       		.byte	0x25
 5087 020c 9F       		.byte	0x9f
 5088 020d 28010000 		.4byte	.LVL49
 5089 0211 3D010000 		.4byte	.LVL50-1
 5090 0215 0E00     		.2byte	0xe
 5091 0217 71       		.byte	0x71
 5092 0218 0C       		.sleb128 12
 5093 0219 94       		.byte	0x94
 5094 021a 01       		.byte	0x1
 5095 021b 08       		.byte	0x8
 5096 021c FF       		.byte	0xff
 5097 021d 1A       		.byte	0x1a
 5098 021e 09       		.byte	0x9
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 119


 5099 021f FF       		.byte	0xff
 5100 0220 24       		.byte	0x24
 5101 0221 09       		.byte	0x9
 5102 0222 FF       		.byte	0xff
 5103 0223 25       		.byte	0x25
 5104 0224 9F       		.byte	0x9f
 5105 0225 00000000 		.4byte	0
 5106 0229 00000000 		.4byte	0
 5107              	.LLST11:
 5108 022d 4C000000 		.4byte	.LVL24
 5109 0231 5A000000 		.4byte	.LVL26
 5110 0235 0100     		.2byte	0x1
 5111 0237 50       		.byte	0x50
 5112 0238 00000000 		.4byte	0
 5113 023c 00000000 		.4byte	0
 5114              	.LLST12:
 5115 0240 54000000 		.4byte	.LVL25
 5116 0244 28010000 		.4byte	.LVL49
 5117 0248 0100     		.2byte	0x1
 5118 024a 58       		.byte	0x58
 5119 024b 46010000 		.4byte	.LVL52
 5120 024f 48010000 		.4byte	.LVL53
 5121 0253 0100     		.2byte	0x1
 5122 0255 58       		.byte	0x58
 5123 0256 00000000 		.4byte	0
 5124 025a 00000000 		.4byte	0
 5125              	.LLST13:
 5126 025e 8A000000 		.4byte	.LVL32
 5127 0262 28010000 		.4byte	.LVL49
 5128 0266 0100     		.2byte	0x1
 5129 0268 55       		.byte	0x55
 5130 0269 46010000 		.4byte	.LVL52
 5131 026d 48010000 		.4byte	.LVL53
 5132 0271 0100     		.2byte	0x1
 5133 0273 55       		.byte	0x55
 5134 0274 00000000 		.4byte	0
 5135 0278 00000000 		.4byte	0
 5136              	.LLST14:
 5137 027c E0000000 		.4byte	.LVL40
 5138 0280 28010000 		.4byte	.LVL49
 5139 0284 0100     		.2byte	0x1
 5140 0286 5C       		.byte	0x5c
 5141 0287 00000000 		.4byte	0
 5142 028b 00000000 		.4byte	0
 5143              	.LLST15:
 5144 028f E0000000 		.4byte	.LVL40
 5145 0293 E4000000 		.4byte	.LVL41
 5146 0297 0200     		.2byte	0x2
 5147 0299 30       		.byte	0x30
 5148 029a 9F       		.byte	0x9f
 5149 029b E4000000 		.4byte	.LVL41
 5150 029f 22010000 		.4byte	.LVL48
 5151 02a3 0100     		.2byte	0x1
 5152 02a5 53       		.byte	0x53
 5153 02a6 00000000 		.4byte	0
 5154 02aa 00000000 		.4byte	0
 5155              	.LLST16:
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 120


 5156 02ae F4000000 		.4byte	.LVL42
 5157 02b2 06010000 		.4byte	.LVL44
 5158 02b6 0100     		.2byte	0x1
 5159 02b8 57       		.byte	0x57
 5160 02b9 06010000 		.4byte	.LVL44
 5161 02bd 10010000 		.4byte	.LVL46
 5162 02c1 0200     		.2byte	0x2
 5163 02c3 70       		.byte	0x70
 5164 02c4 00       		.sleb128 0
 5165 02c5 00000000 		.4byte	0
 5166 02c9 00000000 		.4byte	0
 5167              	.LLST17:
 5168 02cd F4000000 		.4byte	.LVL42
 5169 02d1 0C010000 		.4byte	.LVL45
 5170 02d5 0100     		.2byte	0x1
 5171 02d7 52       		.byte	0x52
 5172 02d8 0C010000 		.4byte	.LVL45
 5173 02dc 10010000 		.4byte	.LVL46
 5174 02e0 0200     		.2byte	0x2
 5175 02e2 70       		.byte	0x70
 5176 02e3 01       		.sleb128 1
 5177 02e4 00000000 		.4byte	0
 5178 02e8 00000000 		.4byte	0
 5179              	.LLST18:
 5180 02ec F4000000 		.4byte	.LVL42
 5181 02f0 00010000 		.4byte	.LVL43
 5182 02f4 0100     		.2byte	0x1
 5183 02f6 5E       		.byte	0x5e
 5184 02f7 00010000 		.4byte	.LVL43
 5185 02fb 10010000 		.4byte	.LVL46
 5186 02ff 0200     		.2byte	0x2
 5187 0301 70       		.byte	0x70
 5188 0302 02       		.sleb128 2
 5189 0303 00000000 		.4byte	0
 5190 0307 00000000 		.4byte	0
 5191              	.LLST19:
 5192 030b 00000000 		.4byte	.LVL54
 5193 030f 20000000 		.4byte	.LVL56
 5194 0313 0100     		.2byte	0x1
 5195 0315 50       		.byte	0x50
 5196 0316 20000000 		.4byte	.LVL56
 5197 031a 7A010000 		.4byte	.LVL103
 5198 031e 0100     		.2byte	0x1
 5199 0320 58       		.byte	0x58
 5200 0321 7A010000 		.4byte	.LVL103
 5201 0325 80010000 		.4byte	.LFE53
 5202 0329 0400     		.2byte	0x4
 5203 032b F3       		.byte	0xf3
 5204 032c 01       		.uleb128 0x1
 5205 032d 50       		.byte	0x50
 5206 032e 9F       		.byte	0x9f
 5207 032f 00000000 		.4byte	0
 5208 0333 00000000 		.4byte	0
 5209              	.LLST20:
 5210 0337 00000000 		.4byte	.LVL54
 5211 033b 2A000000 		.4byte	.LVL57
 5212 033f 0100     		.2byte	0x1
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 121


 5213 0341 51       		.byte	0x51
 5214 0342 2A000000 		.4byte	.LVL57
 5215 0346 80010000 		.4byte	.LFE53
 5216 034a 0400     		.2byte	0x4
 5217 034c F3       		.byte	0xf3
 5218 034d 01       		.uleb128 0x1
 5219 034e 51       		.byte	0x51
 5220 034f 9F       		.byte	0x9f
 5221 0350 00000000 		.4byte	0
 5222 0354 00000000 		.4byte	0
 5223              	.LLST21:
 5224 0358 00000000 		.4byte	.LVL54
 5225 035c 2C000000 		.4byte	.LVL58
 5226 0360 0100     		.2byte	0x1
 5227 0362 52       		.byte	0x52
 5228 0363 2C000000 		.4byte	.LVL58
 5229 0367 80010000 		.4byte	.LFE53
 5230 036b 0400     		.2byte	0x4
 5231 036d F3       		.byte	0xf3
 5232 036e 01       		.uleb128 0x1
 5233 036f 52       		.byte	0x52
 5234 0370 9F       		.byte	0x9f
 5235 0371 00000000 		.4byte	0
 5236 0375 00000000 		.4byte	0
 5237              	.LLST22:
 5238 0379 00000000 		.4byte	.LVL54
 5239 037d 18000000 		.4byte	.LVL55
 5240 0381 0100     		.2byte	0x1
 5241 0383 53       		.byte	0x53
 5242 0384 18000000 		.4byte	.LVL55
 5243 0388 80010000 		.4byte	.LFE53
 5244 038c 0400     		.2byte	0x4
 5245 038e F3       		.byte	0xf3
 5246 038f 01       		.uleb128 0x1
 5247 0390 53       		.byte	0x53
 5248 0391 9F       		.byte	0x9f
 5249 0392 00000000 		.4byte	0
 5250 0396 00000000 		.4byte	0
 5251              	.LLST23:
 5252 039a 00000000 		.4byte	.LVL54
 5253 039e 7A010000 		.4byte	.LVL103
 5254 03a2 0200     		.2byte	0x2
 5255 03a4 91       		.byte	0x91
 5256 03a5 00       		.sleb128 0
 5257 03a6 7A010000 		.4byte	.LVL103
 5258 03aa 80010000 		.4byte	.LFE53
 5259 03ae 0200     		.2byte	0x2
 5260 03b0 7D       		.byte	0x7d
 5261 03b1 00       		.sleb128 0
 5262 03b2 00000000 		.4byte	0
 5263 03b6 00000000 		.4byte	0
 5264              	.LLST24:
 5265 03ba 3A000000 		.4byte	.LVL60
 5266 03be 54000000 		.4byte	.LVL64
 5267 03c2 0100     		.2byte	0x1
 5268 03c4 50       		.byte	0x50
 5269 03c5 00000000 		.4byte	0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 122


 5270 03c9 00000000 		.4byte	0
 5271              	.LLST25:
 5272 03cd 36000000 		.4byte	.LVL59
 5273 03d1 3A000000 		.4byte	.LVL60
 5274 03d5 0200     		.2byte	0x2
 5275 03d7 30       		.byte	0x30
 5276 03d8 9F       		.byte	0x9f
 5277 03d9 3A000000 		.4byte	.LVL60
 5278 03dd 4A000000 		.4byte	.LVL61
 5279 03e1 0100     		.2byte	0x1
 5280 03e3 53       		.byte	0x53
 5281 03e4 4C000000 		.4byte	.LVL62
 5282 03e8 5B000000 		.4byte	.LVL65-1
 5283 03ec 0100     		.2byte	0x1
 5284 03ee 53       		.byte	0x53
 5285 03ef 20010000 		.4byte	.LVL90
 5286 03f3 24010000 		.4byte	.LVL91
 5287 03f7 0200     		.2byte	0x2
 5288 03f9 30       		.byte	0x30
 5289 03fa 9F       		.byte	0x9f
 5290 03fb 24010000 		.4byte	.LVL91
 5291 03ff 68010000 		.4byte	.LVL98
 5292 0403 0100     		.2byte	0x1
 5293 0405 54       		.byte	0x54
 5294 0406 6A010000 		.4byte	.LVL99
 5295 040a 72010000 		.4byte	.LVL101
 5296 040e 0100     		.2byte	0x1
 5297 0410 54       		.byte	0x54
 5298 0411 00000000 		.4byte	0
 5299 0415 00000000 		.4byte	0
 5300              	.LLST26:
 5301 0419 50000000 		.4byte	.LVL63
 5302 041d A2000000 		.4byte	.LVL70
 5303 0421 0200     		.2byte	0x2
 5304 0423 30       		.byte	0x30
 5305 0424 9F       		.byte	0x9f
 5306 0425 A2000000 		.4byte	.LVL70
 5307 0429 A4000000 		.4byte	.LVL71
 5308 042d 0300     		.2byte	0x3
 5309 042f 91       		.byte	0x91
 5310 0430 5C       		.sleb128 -36
 5311 0431 9F       		.byte	0x9f
 5312 0432 A4000000 		.4byte	.LVL71
 5313 0436 A6000000 		.4byte	.LVL72
 5314 043a 0100     		.2byte	0x1
 5315 043c 55       		.byte	0x55
 5316 043d A6000000 		.4byte	.LVL72
 5317 0441 CA000000 		.4byte	.LVL76
 5318 0445 0200     		.2byte	0x2
 5319 0447 30       		.byte	0x30
 5320 0448 9F       		.byte	0x9f
 5321 0449 CA000000 		.4byte	.LVL76
 5322 044d CC000000 		.4byte	.LVL77
 5323 0451 0300     		.2byte	0x3
 5324 0453 91       		.byte	0x91
 5325 0454 58       		.sleb128 -40
 5326 0455 9F       		.byte	0x9f
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 123


 5327 0456 CC000000 		.4byte	.LVL77
 5328 045a CE000000 		.4byte	.LVL78
 5329 045e 0100     		.2byte	0x1
 5330 0460 55       		.byte	0x55
 5331 0461 CE000000 		.4byte	.LVL78
 5332 0465 12010000 		.4byte	.LVL87
 5333 0469 0200     		.2byte	0x2
 5334 046b 30       		.byte	0x30
 5335 046c 9F       		.byte	0x9f
 5336 046d 12010000 		.4byte	.LVL87
 5337 0471 7A010000 		.4byte	.LVL103
 5338 0475 0100     		.2byte	0x1
 5339 0477 55       		.byte	0x55
 5340 0478 00000000 		.4byte	0
 5341 047c 00000000 		.4byte	0
 5342              	.LLST27:
 5343 0480 5C000000 		.4byte	.LVL65
 5344 0484 70010000 		.4byte	.LVL100
 5345 0488 0100     		.2byte	0x1
 5346 048a 50       		.byte	0x50
 5347 048b 72010000 		.4byte	.LVL101
 5348 048f 74010000 		.4byte	.LVL102
 5349 0493 0100     		.2byte	0x1
 5350 0495 50       		.byte	0x50
 5351 0496 00000000 		.4byte	0
 5352 049a 00000000 		.4byte	0
 5353              	.LLST28:
 5354 049e 6C000000 		.4byte	.LVL66
 5355 04a2 8E000000 		.4byte	.LVL67
 5356 04a6 0200     		.2byte	0x2
 5357 04a8 30       		.byte	0x30
 5358 04a9 9F       		.byte	0x9f
 5359 04aa 8E000000 		.4byte	.LVL67
 5360 04ae A6000000 		.4byte	.LVL72
 5361 04b2 0100     		.2byte	0x1
 5362 04b4 52       		.byte	0x52
 5363 04b5 A6000000 		.4byte	.LVL72
 5364 04b9 B2000000 		.4byte	.LVL73
 5365 04bd 0200     		.2byte	0x2
 5366 04bf 30       		.byte	0x30
 5367 04c0 9F       		.byte	0x9f
 5368 04c1 B2000000 		.4byte	.LVL73
 5369 04c5 CE000000 		.4byte	.LVL78
 5370 04c9 0100     		.2byte	0x1
 5371 04cb 52       		.byte	0x52
 5372 04cc CE000000 		.4byte	.LVL78
 5373 04d0 DA000000 		.4byte	.LVL79
 5374 04d4 0200     		.2byte	0x2
 5375 04d6 30       		.byte	0x30
 5376 04d7 9F       		.byte	0x9f
 5377 04d8 DA000000 		.4byte	.LVL79
 5378 04dc F4000000 		.4byte	.LVL82
 5379 04e0 0100     		.2byte	0x1
 5380 04e2 52       		.byte	0x52
 5381 04e3 F4000000 		.4byte	.LVL82
 5382 04e7 FC000000 		.4byte	.LVL83
 5383 04eb 0200     		.2byte	0x2
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 124


 5384 04ed 30       		.byte	0x30
 5385 04ee 9F       		.byte	0x9f
 5386 04ef FC000000 		.4byte	.LVL83
 5387 04f3 06010000 		.4byte	.LVL85
 5388 04f7 0A00     		.2byte	0xa
 5389 04f9 78       		.byte	0x78
 5390 04fa 0C       		.sleb128 12
 5391 04fb 06       		.byte	0x6
 5392 04fc 09       		.byte	0x9
 5393 04fd EF       		.byte	0xef
 5394 04fe 24       		.byte	0x24
 5395 04ff 09       		.byte	0x9
 5396 0500 F9       		.byte	0xf9
 5397 0501 25       		.byte	0x25
 5398 0502 9F       		.byte	0x9f
 5399 0503 06010000 		.4byte	.LVL85
 5400 0507 0E010000 		.4byte	.LVL86
 5401 050b 0200     		.2byte	0x2
 5402 050d 30       		.byte	0x30
 5403 050e 9F       		.byte	0x9f
 5404 050f 0E010000 		.4byte	.LVL86
 5405 0513 12010000 		.4byte	.LVL87
 5406 0517 0100     		.2byte	0x1
 5407 0519 52       		.byte	0x52
 5408 051a 00000000 		.4byte	0
 5409 051e 00000000 		.4byte	0
 5410              	.LLST29:
 5411 0522 6C000000 		.4byte	.LVL66
 5412 0526 9C000000 		.4byte	.LVL69
 5413 052a 0200     		.2byte	0x2
 5414 052c 30       		.byte	0x30
 5415 052d 9F       		.byte	0x9f
 5416 052e 9C000000 		.4byte	.LVL69
 5417 0532 A6000000 		.4byte	.LVL72
 5418 0536 0100     		.2byte	0x1
 5419 0538 59       		.byte	0x59
 5420 0539 A6000000 		.4byte	.LVL72
 5421 053d C0000000 		.4byte	.LVL75
 5422 0541 0200     		.2byte	0x2
 5423 0543 30       		.byte	0x30
 5424 0544 9F       		.byte	0x9f
 5425 0545 C0000000 		.4byte	.LVL75
 5426 0549 CE000000 		.4byte	.LVL78
 5427 054d 0100     		.2byte	0x1
 5428 054f 59       		.byte	0x59
 5429 0550 CE000000 		.4byte	.LVL78
 5430 0554 E8000000 		.4byte	.LVL81
 5431 0558 0200     		.2byte	0x2
 5432 055a 30       		.byte	0x30
 5433 055b 9F       		.byte	0x9f
 5434 055c E8000000 		.4byte	.LVL81
 5435 0560 F4000000 		.4byte	.LVL82
 5436 0564 0100     		.2byte	0x1
 5437 0566 59       		.byte	0x59
 5438 0567 F4000000 		.4byte	.LVL82
 5439 056b 00010000 		.4byte	.LVL84
 5440 056f 0200     		.2byte	0x2
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 125


 5441 0571 30       		.byte	0x30
 5442 0572 9F       		.byte	0x9f
 5443 0573 00010000 		.4byte	.LVL84
 5444 0577 06010000 		.4byte	.LVL85
 5445 057b 0100     		.2byte	0x1
 5446 057d 59       		.byte	0x59
 5447 057e 06010000 		.4byte	.LVL85
 5448 0582 0E010000 		.4byte	.LVL86
 5449 0586 0200     		.2byte	0x2
 5450 0588 30       		.byte	0x30
 5451 0589 9F       		.byte	0x9f
 5452 058a 0E010000 		.4byte	.LVL86
 5453 058e 20010000 		.4byte	.LVL90
 5454 0592 0100     		.2byte	0x1
 5455 0594 59       		.byte	0x59
 5456 0595 72010000 		.4byte	.LVL101
 5457 0599 74010000 		.4byte	.LVL102
 5458 059d 0100     		.2byte	0x1
 5459 059f 59       		.byte	0x59
 5460 05a0 00000000 		.4byte	0
 5461 05a4 00000000 		.4byte	0
 5462              	.LLST30:
 5463 05a8 6C000000 		.4byte	.LVL66
 5464 05ac A2000000 		.4byte	.LVL70
 5465 05b0 0200     		.2byte	0x2
 5466 05b2 30       		.byte	0x30
 5467 05b3 9F       		.byte	0x9f
 5468 05b4 A2000000 		.4byte	.LVL70
 5469 05b8 A6000000 		.4byte	.LVL72
 5470 05bc 0100     		.2byte	0x1
 5471 05be 53       		.byte	0x53
 5472 05bf A6000000 		.4byte	.LVL72
 5473 05c3 CA000000 		.4byte	.LVL76
 5474 05c7 0200     		.2byte	0x2
 5475 05c9 30       		.byte	0x30
 5476 05ca 9F       		.byte	0x9f
 5477 05cb CA000000 		.4byte	.LVL76
 5478 05cf CE000000 		.4byte	.LVL78
 5479 05d3 0100     		.2byte	0x1
 5480 05d5 53       		.byte	0x53
 5481 05d6 CE000000 		.4byte	.LVL78
 5482 05da 12010000 		.4byte	.LVL87
 5483 05de 0200     		.2byte	0x2
 5484 05e0 30       		.byte	0x30
 5485 05e1 9F       		.byte	0x9f
 5486 05e2 12010000 		.4byte	.LVL87
 5487 05e6 56010000 		.4byte	.LVL93
 5488 05ea 0100     		.2byte	0x1
 5489 05ec 53       		.byte	0x53
 5490 05ed 58010000 		.4byte	.LVL94
 5491 05f1 60010000 		.4byte	.LVL95
 5492 05f5 0100     		.2byte	0x1
 5493 05f7 53       		.byte	0x53
 5494 05f8 62010000 		.4byte	.LVL96
 5495 05fc 80010000 		.4byte	.LFE53
 5496 0600 0100     		.2byte	0x1
 5497 0602 53       		.byte	0x53
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 126


 5498 0603 00000000 		.4byte	0
 5499 0607 00000000 		.4byte	0
 5500              	.LLST31:
 5501 060b 12010000 		.4byte	.LVL87
 5502 060f 20010000 		.4byte	.LVL90
 5503 0613 0200     		.2byte	0x2
 5504 0615 30       		.byte	0x30
 5505 0616 9F       		.byte	0x9f
 5506 0617 20010000 		.4byte	.LVL90
 5507 061b 72010000 		.4byte	.LVL101
 5508 061f 0100     		.2byte	0x1
 5509 0621 59       		.byte	0x59
 5510 0622 72010000 		.4byte	.LVL101
 5511 0626 74010000 		.4byte	.LVL102
 5512 062a 0200     		.2byte	0x2
 5513 062c 30       		.byte	0x30
 5514 062d 9F       		.byte	0x9f
 5515 062e 00000000 		.4byte	0
 5516 0632 00000000 		.4byte	0
 5517              	.LLST32:
 5518 0636 1C010000 		.4byte	.LVL88
 5519 063a 1E010000 		.4byte	.LVL89
 5520 063e 0100     		.2byte	0x1
 5521 0640 52       		.byte	0x52
 5522 0641 1E010000 		.4byte	.LVL89
 5523 0645 24010000 		.4byte	.LVL91
 5524 0649 0200     		.2byte	0x2
 5525 064b 78       		.byte	0x78
 5526 064c 04       		.sleb128 4
 5527 064d 00000000 		.4byte	0
 5528 0651 00000000 		.4byte	0
 5529              	.LLST33:
 5530 0655 34010000 		.4byte	.LVL92
 5531 0659 6A010000 		.4byte	.LVL99
 5532 065d 0100     		.2byte	0x1
 5533 065f 5A       		.byte	0x5a
 5534 0660 00000000 		.4byte	0
 5535 0664 00000000 		.4byte	0
 5536              	.LLST34:
 5537 0668 00000000 		.4byte	.LVL104
 5538 066c 10000000 		.4byte	.LVL105
 5539 0670 0100     		.2byte	0x1
 5540 0672 50       		.byte	0x50
 5541 0673 10000000 		.4byte	.LVL105
 5542 0677 DC000000 		.4byte	.LVL138
 5543 067b 0100     		.2byte	0x1
 5544 067d 54       		.byte	0x54
 5545 067e DC000000 		.4byte	.LVL138
 5546 0682 2E010000 		.4byte	.LVL150
 5547 0686 0400     		.2byte	0x4
 5548 0688 F3       		.byte	0xf3
 5549 0689 01       		.uleb128 0x1
 5550 068a 50       		.byte	0x50
 5551 068b 9F       		.byte	0x9f
 5552 068c 2E010000 		.4byte	.LVL150
 5553 0690 34010000 		.4byte	.LFE54
 5554 0694 0100     		.2byte	0x1
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 127


 5555 0696 54       		.byte	0x54
 5556 0697 00000000 		.4byte	0
 5557 069b 00000000 		.4byte	0
 5558              	.LLST35:
 5559 069f 00000000 		.4byte	.LVL104
 5560 06a3 17000000 		.4byte	.LVL106-1
 5561 06a7 0100     		.2byte	0x1
 5562 06a9 51       		.byte	0x51
 5563 06aa 17000000 		.4byte	.LVL106-1
 5564 06ae 34010000 		.4byte	.LFE54
 5565 06b2 0400     		.2byte	0x4
 5566 06b4 F3       		.byte	0xf3
 5567 06b5 01       		.uleb128 0x1
 5568 06b6 51       		.byte	0x51
 5569 06b7 9F       		.byte	0x9f
 5570 06b8 00000000 		.4byte	0
 5571 06bc 00000000 		.4byte	0
 5572              	.LLST36:
 5573 06c0 00000000 		.4byte	.LVL104
 5574 06c4 17000000 		.4byte	.LVL106-1
 5575 06c8 0100     		.2byte	0x1
 5576 06ca 52       		.byte	0x52
 5577 06cb 17000000 		.4byte	.LVL106-1
 5578 06cf 34010000 		.4byte	.LFE54
 5579 06d3 0400     		.2byte	0x4
 5580 06d5 F3       		.byte	0xf3
 5581 06d6 01       		.uleb128 0x1
 5582 06d7 52       		.byte	0x52
 5583 06d8 9F       		.byte	0x9f
 5584 06d9 00000000 		.4byte	0
 5585 06dd 00000000 		.4byte	0
 5586              	.LLST37:
 5587 06e1 00000000 		.4byte	.LVL104
 5588 06e5 17000000 		.4byte	.LVL106-1
 5589 06e9 0100     		.2byte	0x1
 5590 06eb 53       		.byte	0x53
 5591 06ec 17000000 		.4byte	.LVL106-1
 5592 06f0 34010000 		.4byte	.LFE54
 5593 06f4 0400     		.2byte	0x4
 5594 06f6 F3       		.byte	0xf3
 5595 06f7 01       		.uleb128 0x1
 5596 06f8 53       		.byte	0x53
 5597 06f9 9F       		.byte	0x9f
 5598 06fa 00000000 		.4byte	0
 5599 06fe 00000000 		.4byte	0
 5600              	.LLST38:
 5601 0702 00000000 		.4byte	.LVL104
 5602 0706 2E010000 		.4byte	.LVL150
 5603 070a 0200     		.2byte	0x2
 5604 070c 91       		.byte	0x91
 5605 070d 00       		.sleb128 0
 5606 070e 2E010000 		.4byte	.LVL150
 5607 0712 34010000 		.4byte	.LFE54
 5608 0716 0200     		.2byte	0x2
 5609 0718 91       		.byte	0x91
 5610 0719 00       		.sleb128 0
 5611 071a 00000000 		.4byte	0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 128


 5612 071e 00000000 		.4byte	0
 5613              	.LLST39:
 5614 0722 18000000 		.4byte	.LVL106
 5615 0726 2A010000 		.4byte	.LVL149
 5616 072a 0100     		.2byte	0x1
 5617 072c 50       		.byte	0x50
 5618 072d 2E010000 		.4byte	.LVL150
 5619 0731 30010000 		.4byte	.LVL151
 5620 0735 0100     		.2byte	0x1
 5621 0737 50       		.byte	0x50
 5622 0738 00000000 		.4byte	0
 5623 073c 00000000 		.4byte	0
 5624              	.LLST40:
 5625 0740 28000000 		.4byte	.LVL107
 5626 0744 46000000 		.4byte	.LVL108
 5627 0748 0200     		.2byte	0x2
 5628 074a 30       		.byte	0x30
 5629 074b 9F       		.byte	0x9f
 5630 074c 46000000 		.4byte	.LVL108
 5631 0750 5C000000 		.4byte	.LVL112
 5632 0754 0100     		.2byte	0x1
 5633 0756 52       		.byte	0x52
 5634 0757 62000000 		.4byte	.LVL114
 5635 075b 6C000000 		.4byte	.LVL115
 5636 075f 0200     		.2byte	0x2
 5637 0761 30       		.byte	0x30
 5638 0762 9F       		.byte	0x9f
 5639 0763 6C000000 		.4byte	.LVL115
 5640 0767 82000000 		.4byte	.LVL119
 5641 076b 0100     		.2byte	0x1
 5642 076d 52       		.byte	0x52
 5643 076e 8C000000 		.4byte	.LVL121
 5644 0772 96000000 		.4byte	.LVL122
 5645 0776 0200     		.2byte	0x2
 5646 0778 30       		.byte	0x30
 5647 0779 9F       		.byte	0x9f
 5648 077a 96000000 		.4byte	.LVL122
 5649 077e B0000000 		.4byte	.LVL126
 5650 0782 0100     		.2byte	0x1
 5651 0784 52       		.byte	0x52
 5652 0785 B2000000 		.4byte	.LVL127
 5653 0789 B8000000 		.4byte	.LVL128
 5654 078d 0200     		.2byte	0x2
 5655 078f 30       		.byte	0x30
 5656 0790 9F       		.byte	0x9f
 5657 0791 B8000000 		.4byte	.LVL128
 5658 0795 C4000000 		.4byte	.LVL131
 5659 0799 0A00     		.2byte	0xa
 5660 079b 74       		.byte	0x74
 5661 079c 0C       		.sleb128 12
 5662 079d 06       		.byte	0x6
 5663 079e 09       		.byte	0x9
 5664 079f EF       		.byte	0xef
 5665 07a0 24       		.byte	0x24
 5666 07a1 09       		.byte	0x9
 5667 07a2 F9       		.byte	0xf9
 5668 07a3 25       		.byte	0x25
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 129


 5669 07a4 9F       		.byte	0x9f
 5670 07a5 C4000000 		.4byte	.LVL131
 5671 07a9 CA000000 		.4byte	.LVL132
 5672 07ad 0200     		.2byte	0x2
 5673 07af 30       		.byte	0x30
 5674 07b0 9F       		.byte	0x9f
 5675 07b1 CA000000 		.4byte	.LVL132
 5676 07b5 CC000000 		.4byte	.LVL133
 5677 07b9 0100     		.2byte	0x1
 5678 07bb 52       		.byte	0x52
 5679 07bc 00000000 		.4byte	0
 5680 07c0 00000000 		.4byte	0
 5681              	.LLST41:
 5682 07c4 28000000 		.4byte	.LVL107
 5683 07c8 60000000 		.4byte	.LVL113
 5684 07cc 0200     		.2byte	0x2
 5685 07ce 30       		.byte	0x30
 5686 07cf 9F       		.byte	0x9f
 5687 07d0 60000000 		.4byte	.LVL113
 5688 07d4 62000000 		.4byte	.LVL114
 5689 07d8 0100     		.2byte	0x1
 5690 07da 52       		.byte	0x52
 5691 07db 62000000 		.4byte	.LVL114
 5692 07df 8A000000 		.4byte	.LVL120
 5693 07e3 0200     		.2byte	0x2
 5694 07e5 30       		.byte	0x30
 5695 07e6 9F       		.byte	0x9f
 5696 07e7 8A000000 		.4byte	.LVL120
 5697 07eb 8C000000 		.4byte	.LVL121
 5698 07ef 0100     		.2byte	0x1
 5699 07f1 52       		.byte	0x52
 5700 07f2 8C000000 		.4byte	.LVL121
 5701 07f6 CC000000 		.4byte	.LVL133
 5702 07fa 0200     		.2byte	0x2
 5703 07fc 30       		.byte	0x30
 5704 07fd 9F       		.byte	0x9f
 5705 07fe CC000000 		.4byte	.LVL133
 5706 0802 12010000 		.4byte	.LVL142
 5707 0806 0100     		.2byte	0x1
 5708 0808 52       		.byte	0x52
 5709 0809 14010000 		.4byte	.LVL143
 5710 080d 1C010000 		.4byte	.LVL144
 5711 0811 0100     		.2byte	0x1
 5712 0813 52       		.byte	0x52
 5713 0814 1E010000 		.4byte	.LVL145
 5714 0818 34010000 		.4byte	.LFE54
 5715 081c 0100     		.2byte	0x1
 5716 081e 52       		.byte	0x52
 5717 081f 00000000 		.4byte	0
 5718 0823 00000000 		.4byte	0
 5719              	.LLST42:
 5720 0827 28000000 		.4byte	.LVL107
 5721 082b 56000000 		.4byte	.LVL110
 5722 082f 0200     		.2byte	0x2
 5723 0831 30       		.byte	0x30
 5724 0832 9F       		.byte	0x9f
 5725 0833 56000000 		.4byte	.LVL110
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 130


 5726 0837 62000000 		.4byte	.LVL114
 5727 083b 0100     		.2byte	0x1
 5728 083d 57       		.byte	0x57
 5729 083e 62000000 		.4byte	.LVL114
 5730 0842 7C000000 		.4byte	.LVL117
 5731 0846 0200     		.2byte	0x2
 5732 0848 30       		.byte	0x30
 5733 0849 9F       		.byte	0x9f
 5734 084a 7C000000 		.4byte	.LVL117
 5735 084e 8C000000 		.4byte	.LVL121
 5736 0852 0100     		.2byte	0x1
 5737 0854 57       		.byte	0x57
 5738 0855 8C000000 		.4byte	.LVL121
 5739 0859 A6000000 		.4byte	.LVL124
 5740 085d 0200     		.2byte	0x2
 5741 085f 30       		.byte	0x30
 5742 0860 9F       		.byte	0x9f
 5743 0861 A6000000 		.4byte	.LVL124
 5744 0865 B2000000 		.4byte	.LVL127
 5745 0869 0100     		.2byte	0x1
 5746 086b 57       		.byte	0x57
 5747 086c B2000000 		.4byte	.LVL127
 5748 0870 BC000000 		.4byte	.LVL129
 5749 0874 0200     		.2byte	0x2
 5750 0876 30       		.byte	0x30
 5751 0877 9F       		.byte	0x9f
 5752 0878 BC000000 		.4byte	.LVL129
 5753 087c C4000000 		.4byte	.LVL131
 5754 0880 0100     		.2byte	0x1
 5755 0882 57       		.byte	0x57
 5756 0883 C4000000 		.4byte	.LVL131
 5757 0887 CA000000 		.4byte	.LVL132
 5758 088b 0200     		.2byte	0x2
 5759 088d 30       		.byte	0x30
 5760 088e 9F       		.byte	0x9f
 5761 088f CA000000 		.4byte	.LVL132
 5762 0893 DA000000 		.4byte	.LVL137
 5763 0897 0100     		.2byte	0x1
 5764 0899 57       		.byte	0x57
 5765 089a 2E010000 		.4byte	.LVL150
 5766 089e 34010000 		.4byte	.LFE54
 5767 08a2 0100     		.2byte	0x1
 5768 08a4 57       		.byte	0x57
 5769 08a5 00000000 		.4byte	0
 5770 08a9 00000000 		.4byte	0
 5771              	.LLST43:
 5772 08ad D0000000 		.4byte	.LVL134
 5773 08b1 DA000000 		.4byte	.LVL137
 5774 08b5 0200     		.2byte	0x2
 5775 08b7 30       		.byte	0x30
 5776 08b8 9F       		.byte	0x9f
 5777 08b9 DA000000 		.4byte	.LVL137
 5778 08bd 2E010000 		.4byte	.LVL150
 5779 08c1 0100     		.2byte	0x1
 5780 08c3 57       		.byte	0x57
 5781 08c4 2E010000 		.4byte	.LVL150
 5782 08c8 34010000 		.4byte	.LFE54
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 131


 5783 08cc 0200     		.2byte	0x2
 5784 08ce 30       		.byte	0x30
 5785 08cf 9F       		.byte	0x9f
 5786 08d0 00000000 		.4byte	0
 5787 08d4 00000000 		.4byte	0
 5788              	.LLST44:
 5789 08d8 DA000000 		.4byte	.LVL137
 5790 08dc DE000000 		.4byte	.LVL139
 5791 08e0 0200     		.2byte	0x2
 5792 08e2 30       		.byte	0x30
 5793 08e3 9F       		.byte	0x9f
 5794 08e4 DE000000 		.4byte	.LVL139
 5795 08e8 22010000 		.4byte	.LVL147
 5796 08ec 0100     		.2byte	0x1
 5797 08ee 54       		.byte	0x54
 5798 08ef 24010000 		.4byte	.LVL148
 5799 08f3 2E010000 		.4byte	.LVL150
 5800 08f7 0100     		.2byte	0x1
 5801 08f9 54       		.byte	0x54
 5802 08fa 00000000 		.4byte	0
 5803 08fe 00000000 		.4byte	0
 5804              	.LLST45:
 5805 0902 D6000000 		.4byte	.LVL135
 5806 0906 D8000000 		.4byte	.LVL136
 5807 090a 0100     		.2byte	0x1
 5808 090c 53       		.byte	0x53
 5809 090d D8000000 		.4byte	.LVL136
 5810 0911 DC000000 		.4byte	.LVL138
 5811 0915 0200     		.2byte	0x2
 5812 0917 74       		.byte	0x74
 5813 0918 04       		.sleb128 4
 5814 0919 DC000000 		.4byte	.LVL138
 5815 091d DE000000 		.4byte	.LVL139
 5816 0921 0500     		.2byte	0x5
 5817 0923 F3       		.byte	0xf3
 5818 0924 01       		.uleb128 0x1
 5819 0925 50       		.byte	0x50
 5820 0926 23       		.byte	0x23
 5821 0927 04       		.uleb128 0x4
 5822 0928 00000000 		.4byte	0
 5823 092c 00000000 		.4byte	0
 5824              	.LLST46:
 5825 0930 E8000000 		.4byte	.LVL140
 5826 0934 0E010000 		.4byte	.LVL141
 5827 0938 0100     		.2byte	0x1
 5828 093a 53       		.byte	0x53
 5829 093b 00000000 		.4byte	0
 5830 093f 00000000 		.4byte	0
 5831              	.LLST47:
 5832 0943 00000000 		.4byte	.LVL152
 5833 0947 06000000 		.4byte	.LVL153
 5834 094b 0100     		.2byte	0x1
 5835 094d 50       		.byte	0x50
 5836 094e 06000000 		.4byte	.LVL153
 5837 0952 5C000000 		.4byte	.LFE50
 5838 0956 0400     		.2byte	0x4
 5839 0958 F3       		.byte	0xf3
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 132


 5840 0959 01       		.uleb128 0x1
 5841 095a 50       		.byte	0x50
 5842 095b 9F       		.byte	0x9f
 5843 095c 00000000 		.4byte	0
 5844 0960 00000000 		.4byte	0
 5845              	.LLST48:
 5846 0964 00000000 		.4byte	.LVL152
 5847 0968 08000000 		.4byte	.LVL154
 5848 096c 0100     		.2byte	0x1
 5849 096e 51       		.byte	0x51
 5850 096f 08000000 		.4byte	.LVL154
 5851 0973 29000000 		.4byte	.LVL157-1
 5852 0977 0100     		.2byte	0x1
 5853 0979 50       		.byte	0x50
 5854 097a 29000000 		.4byte	.LVL157-1
 5855 097e 2C000000 		.4byte	.LVL158
 5856 0982 0400     		.2byte	0x4
 5857 0984 F3       		.byte	0xf3
 5858 0985 01       		.uleb128 0x1
 5859 0986 51       		.byte	0x51
 5860 0987 9F       		.byte	0x9f
 5861 0988 2C000000 		.4byte	.LVL158
 5862 098c 3D000000 		.4byte	.LVL159-1
 5863 0990 0100     		.2byte	0x1
 5864 0992 50       		.byte	0x50
 5865 0993 3D000000 		.4byte	.LVL159-1
 5866 0997 40000000 		.4byte	.LVL160
 5867 099b 0400     		.2byte	0x4
 5868 099d F3       		.byte	0xf3
 5869 099e 01       		.uleb128 0x1
 5870 099f 51       		.byte	0x51
 5871 09a0 9F       		.byte	0x9f
 5872 09a1 40000000 		.4byte	.LVL160
 5873 09a5 4F000000 		.4byte	.LVL161-1
 5874 09a9 0100     		.2byte	0x1
 5875 09ab 50       		.byte	0x50
 5876 09ac 4F000000 		.4byte	.LVL161-1
 5877 09b0 52000000 		.4byte	.LVL162
 5878 09b4 0400     		.2byte	0x4
 5879 09b6 F3       		.byte	0xf3
 5880 09b7 01       		.uleb128 0x1
 5881 09b8 51       		.byte	0x51
 5882 09b9 9F       		.byte	0x9f
 5883 09ba 52000000 		.4byte	.LVL162
 5884 09be 54000000 		.4byte	.LVL163
 5885 09c2 0100     		.2byte	0x1
 5886 09c4 50       		.byte	0x50
 5887 09c5 54000000 		.4byte	.LVL163
 5888 09c9 56000000 		.4byte	.LVL164
 5889 09cd 0400     		.2byte	0x4
 5890 09cf F3       		.byte	0xf3
 5891 09d0 01       		.uleb128 0x1
 5892 09d1 51       		.byte	0x51
 5893 09d2 9F       		.byte	0x9f
 5894 09d3 56000000 		.4byte	.LVL164
 5895 09d7 58000000 		.4byte	.LVL165
 5896 09db 0100     		.2byte	0x1
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 133


 5897 09dd 50       		.byte	0x50
 5898 09de 58000000 		.4byte	.LVL165
 5899 09e2 5C000000 		.4byte	.LFE50
 5900 09e6 0400     		.2byte	0x4
 5901 09e8 F3       		.byte	0xf3
 5902 09e9 01       		.uleb128 0x1
 5903 09ea 51       		.byte	0x51
 5904 09eb 9F       		.byte	0x9f
 5905 09ec 00000000 		.4byte	0
 5906 09f0 00000000 		.4byte	0
 5907              	.LLST49:
 5908 09f4 00000000 		.4byte	.LVL152
 5909 09f8 0A000000 		.4byte	.LVL155
 5910 09fc 0100     		.2byte	0x1
 5911 09fe 52       		.byte	0x52
 5912 09ff 0A000000 		.4byte	.LVL155
 5913 0a03 5C000000 		.4byte	.LFE50
 5914 0a07 0400     		.2byte	0x4
 5915 0a09 F3       		.byte	0xf3
 5916 0a0a 01       		.uleb128 0x1
 5917 0a0b 52       		.byte	0x52
 5918 0a0c 9F       		.byte	0x9f
 5919 0a0d 00000000 		.4byte	0
 5920 0a11 00000000 		.4byte	0
 5921              	.LLST50:
 5922 0a15 00000000 		.4byte	.LVL152
 5923 0a19 0E000000 		.4byte	.LVL156
 5924 0a1d 0100     		.2byte	0x1
 5925 0a1f 53       		.byte	0x53
 5926 0a20 0E000000 		.4byte	.LVL156
 5927 0a24 5C000000 		.4byte	.LFE50
 5928 0a28 0400     		.2byte	0x4
 5929 0a2a F3       		.byte	0xf3
 5930 0a2b 01       		.uleb128 0x1
 5931 0a2c 53       		.byte	0x53
 5932 0a2d 9F       		.byte	0x9f
 5933 0a2e 00000000 		.4byte	0
 5934 0a32 00000000 		.4byte	0
 5935              	.LLST51:
 5936 0a36 0E000000 		.4byte	.LVL156
 5937 0a3a 2A000000 		.4byte	.LVL157
 5938 0a3e 0200     		.2byte	0x2
 5939 0a40 30       		.byte	0x30
 5940 0a41 9F       		.byte	0x9f
 5941 0a42 2A000000 		.4byte	.LVL157
 5942 0a46 2C000000 		.4byte	.LVL158
 5943 0a4a 0100     		.2byte	0x1
 5944 0a4c 50       		.byte	0x50
 5945 0a4d 2C000000 		.4byte	.LVL158
 5946 0a51 3E000000 		.4byte	.LVL159
 5947 0a55 0200     		.2byte	0x2
 5948 0a57 30       		.byte	0x30
 5949 0a58 9F       		.byte	0x9f
 5950 0a59 3E000000 		.4byte	.LVL159
 5951 0a5d 40000000 		.4byte	.LVL160
 5952 0a61 0100     		.2byte	0x1
 5953 0a63 50       		.byte	0x50
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 134


 5954 0a64 40000000 		.4byte	.LVL160
 5955 0a68 50000000 		.4byte	.LVL161
 5956 0a6c 0200     		.2byte	0x2
 5957 0a6e 30       		.byte	0x30
 5958 0a6f 9F       		.byte	0x9f
 5959 0a70 50000000 		.4byte	.LVL161
 5960 0a74 52000000 		.4byte	.LVL162
 5961 0a78 0100     		.2byte	0x1
 5962 0a7a 50       		.byte	0x50
 5963 0a7b 52000000 		.4byte	.LVL162
 5964 0a7f 58000000 		.4byte	.LVL165
 5965 0a83 0200     		.2byte	0x2
 5966 0a85 30       		.byte	0x30
 5967 0a86 9F       		.byte	0x9f
 5968 0a87 00000000 		.4byte	0
 5969 0a8b 00000000 		.4byte	0
 5970              	.LLST52:
 5971 0a8f 00000000 		.4byte	.LVL166
 5972 0a93 26000000 		.4byte	.LVL168
 5973 0a97 0100     		.2byte	0x1
 5974 0a99 50       		.byte	0x50
 5975 0a9a 26000000 		.4byte	.LVL168
 5976 0a9e 58000000 		.4byte	.LVL179
 5977 0aa2 0100     		.2byte	0x1
 5978 0aa4 57       		.byte	0x57
 5979 0aa5 58000000 		.4byte	.LVL179
 5980 0aa9 5C000000 		.4byte	.LFE38
 5981 0aad 0400     		.2byte	0x4
 5982 0aaf F3       		.byte	0xf3
 5983 0ab0 01       		.uleb128 0x1
 5984 0ab1 50       		.byte	0x50
 5985 0ab2 9F       		.byte	0x9f
 5986 0ab3 00000000 		.4byte	0
 5987 0ab7 00000000 		.4byte	0
 5988              	.LLST53:
 5989 0abb 00000000 		.4byte	.LVL166
 5990 0abf 29000000 		.4byte	.LVL169-1
 5991 0ac3 0100     		.2byte	0x1
 5992 0ac5 51       		.byte	0x51
 5993 0ac6 29000000 		.4byte	.LVL169-1
 5994 0aca 58000000 		.4byte	.LVL179
 5995 0ace 0100     		.2byte	0x1
 5996 0ad0 56       		.byte	0x56
 5997 0ad1 58000000 		.4byte	.LVL179
 5998 0ad5 5C000000 		.4byte	.LFE38
 5999 0ad9 0400     		.2byte	0x4
 6000 0adb F3       		.byte	0xf3
 6001 0adc 01       		.uleb128 0x1
 6002 0add 51       		.byte	0x51
 6003 0ade 9F       		.byte	0x9f
 6004 0adf 00000000 		.4byte	0
 6005 0ae3 00000000 		.4byte	0
 6006              	.LLST54:
 6007 0ae7 24000000 		.4byte	.LVL167
 6008 0aeb 3E000000 		.4byte	.LVL173
 6009 0aef 0200     		.2byte	0x2
 6010 0af1 30       		.byte	0x30
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 135


 6011 0af2 9F       		.byte	0x9f
 6012 0af3 3E000000 		.4byte	.LVL173
 6013 0af7 44000000 		.4byte	.LVL174
 6014 0afb 0100     		.2byte	0x1
 6015 0afd 50       		.byte	0x50
 6016 0afe 44000000 		.4byte	.LVL174
 6017 0b02 46000000 		.4byte	.LVL175
 6018 0b06 0200     		.2byte	0x2
 6019 0b08 30       		.byte	0x30
 6020 0b09 9F       		.byte	0x9f
 6021 0b0a 46000000 		.4byte	.LVL175
 6022 0b0e 58000000 		.4byte	.LVL179
 6023 0b12 0100     		.2byte	0x1
 6024 0b14 55       		.byte	0x55
 6025 0b15 00000000 		.4byte	0
 6026 0b19 00000000 		.4byte	0
 6027              	.LLST55:
 6028 0b1d 2C000000 		.4byte	.LVL170
 6029 0b21 3B000000 		.4byte	.LVL172-1
 6030 0b25 0100     		.2byte	0x1
 6031 0b27 50       		.byte	0x50
 6032 0b28 3B000000 		.4byte	.LVL172-1
 6033 0b2c 44000000 		.4byte	.LVL174
 6034 0b30 0100     		.2byte	0x1
 6035 0b32 54       		.byte	0x54
 6036 0b33 44000000 		.4byte	.LVL174
 6037 0b37 46000000 		.4byte	.LVL175
 6038 0b3b 0100     		.2byte	0x1
 6039 0b3d 50       		.byte	0x50
 6040 0b3e 46000000 		.4byte	.LVL175
 6041 0b42 50000000 		.4byte	.LVL177
 6042 0b46 0100     		.2byte	0x1
 6043 0b48 54       		.byte	0x54
 6044 0b49 50000000 		.4byte	.LVL177
 6045 0b4d 54000000 		.4byte	.LVL178
 6046 0b51 0100     		.2byte	0x1
 6047 0b53 50       		.byte	0x50
 6048 0b54 54000000 		.4byte	.LVL178
 6049 0b58 58000000 		.4byte	.LVL179
 6050 0b5c 0100     		.2byte	0x1
 6051 0b5e 54       		.byte	0x54
 6052 0b5f 00000000 		.4byte	0
 6053 0b63 00000000 		.4byte	0
 6054              	.LLST56:
 6055 0b67 00000000 		.4byte	.LVL180
 6056 0b6b 0A000000 		.4byte	.LVL181
 6057 0b6f 0100     		.2byte	0x1
 6058 0b71 50       		.byte	0x50
 6059 0b72 0A000000 		.4byte	.LVL181
 6060 0b76 7C000000 		.4byte	.LVL200
 6061 0b7a 0100     		.2byte	0x1
 6062 0b7c 56       		.byte	0x56
 6063 0b7d 7C000000 		.4byte	.LVL200
 6064 0b81 80000000 		.4byte	.LFE39
 6065 0b85 0400     		.2byte	0x4
 6066 0b87 F3       		.byte	0xf3
 6067 0b88 01       		.uleb128 0x1
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 136


 6068 0b89 50       		.byte	0x50
 6069 0b8a 9F       		.byte	0x9f
 6070 0b8b 00000000 		.4byte	0
 6071 0b8f 00000000 		.4byte	0
 6072              	.LLST57:
 6073 0b93 00000000 		.4byte	.LVL180
 6074 0b97 0D000000 		.4byte	.LVL182-1
 6075 0b9b 0100     		.2byte	0x1
 6076 0b9d 51       		.byte	0x51
 6077 0b9e 0D000000 		.4byte	.LVL182-1
 6078 0ba2 7C000000 		.4byte	.LVL200
 6079 0ba6 0100     		.2byte	0x1
 6080 0ba8 57       		.byte	0x57
 6081 0ba9 7C000000 		.4byte	.LVL200
 6082 0bad 80000000 		.4byte	.LFE39
 6083 0bb1 0400     		.2byte	0x4
 6084 0bb3 F3       		.byte	0xf3
 6085 0bb4 01       		.uleb128 0x1
 6086 0bb5 51       		.byte	0x51
 6087 0bb6 9F       		.byte	0x9f
 6088 0bb7 00000000 		.4byte	0
 6089 0bbb 00000000 		.4byte	0
 6090              	.LLST58:
 6091 0bbf 00000000 		.4byte	.LVL180
 6092 0bc3 0D000000 		.4byte	.LVL182-1
 6093 0bc7 0100     		.2byte	0x1
 6094 0bc9 52       		.byte	0x52
 6095 0bca 00000000 		.4byte	0
 6096 0bce 00000000 		.4byte	0
 6097              	.LLST59:
 6098 0bd2 30000000 		.4byte	.LVL187
 6099 0bd6 3C000000 		.4byte	.LVL190
 6100 0bda 0200     		.2byte	0x2
 6101 0bdc 30       		.byte	0x30
 6102 0bdd 9F       		.byte	0x9f
 6103 0bde 3C000000 		.4byte	.LVL190
 6104 0be2 50000000 		.4byte	.LVL192
 6105 0be6 0100     		.2byte	0x1
 6106 0be8 55       		.byte	0x55
 6107 0be9 50000000 		.4byte	.LVL192
 6108 0bed 62000000 		.4byte	.LVL193
 6109 0bf1 0100     		.2byte	0x1
 6110 0bf3 50       		.byte	0x50
 6111 0bf4 66000000 		.4byte	.LVL195
 6112 0bf8 6A000000 		.4byte	.LVL196
 6113 0bfc 0100     		.2byte	0x1
 6114 0bfe 50       		.byte	0x50
 6115 0bff 6A000000 		.4byte	.LVL196
 6116 0c03 7C000000 		.4byte	.LVL200
 6117 0c07 0100     		.2byte	0x1
 6118 0c09 55       		.byte	0x55
 6119 0c0a 00000000 		.4byte	0
 6120 0c0e 00000000 		.4byte	0
 6121              	.LLST60:
 6122 0c12 38000000 		.4byte	.LVL189
 6123 0c16 4D000000 		.4byte	.LVL191-1
 6124 0c1a 0100     		.2byte	0x1
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 137


 6125 0c1c 50       		.byte	0x50
 6126 0c1d 4D000000 		.4byte	.LVL191-1
 6127 0c21 74000000 		.4byte	.LVL198
 6128 0c25 0100     		.2byte	0x1
 6129 0c27 54       		.byte	0x54
 6130 0c28 74000000 		.4byte	.LVL198
 6131 0c2c 78000000 		.4byte	.LVL199
 6132 0c30 0100     		.2byte	0x1
 6133 0c32 50       		.byte	0x50
 6134 0c33 78000000 		.4byte	.LVL199
 6135 0c37 7C000000 		.4byte	.LVL200
 6136 0c3b 0100     		.2byte	0x1
 6137 0c3d 54       		.byte	0x54
 6138 0c3e 00000000 		.4byte	0
 6139 0c42 00000000 		.4byte	0
 6140              	.LLST61:
 6141 0c46 1E000000 		.4byte	.LVL183
 6142 0c4a 20000000 		.4byte	.LVL184
 6143 0c4e 0100     		.2byte	0x1
 6144 0c50 50       		.byte	0x50
 6145 0c51 20000000 		.4byte	.LVL184
 6146 0c55 23000000 		.4byte	.LVL185-1
 6147 0c59 0300     		.2byte	0x3
 6148 0c5b 70       		.byte	0x70
 6149 0c5c 7F       		.sleb128 -1
 6150 0c5d 9F       		.byte	0x9f
 6151 0c5e 00000000 		.4byte	0
 6152 0c62 00000000 		.4byte	0
 6153              	.LLST62:
 6154 0c66 00000000 		.4byte	.LVL201
 6155 0c6a 14000000 		.4byte	.LVL206
 6156 0c6e 0100     		.2byte	0x1
 6157 0c70 50       		.byte	0x50
 6158 0c71 14000000 		.4byte	.LVL206
 6159 0c75 1B000000 		.4byte	.LVL207-1
 6160 0c79 0100     		.2byte	0x1
 6161 0c7b 51       		.byte	0x51
 6162 0c7c 1B000000 		.4byte	.LVL207-1
 6163 0c80 1E000000 		.4byte	.LVL208
 6164 0c84 0400     		.2byte	0x4
 6165 0c86 F3       		.byte	0xf3
 6166 0c87 01       		.uleb128 0x1
 6167 0c88 50       		.byte	0x50
 6168 0c89 9F       		.byte	0x9f
 6169 0c8a 1E000000 		.4byte	.LVL208
 6170 0c8e 20000000 		.4byte	.LVL209
 6171 0c92 0100     		.2byte	0x1
 6172 0c94 50       		.byte	0x50
 6173 0c95 20000000 		.4byte	.LVL209
 6174 0c99 24000000 		.4byte	.LFE40
 6175 0c9d 0400     		.2byte	0x4
 6176 0c9f F3       		.byte	0xf3
 6177 0ca0 01       		.uleb128 0x1
 6178 0ca1 50       		.byte	0x50
 6179 0ca2 9F       		.byte	0x9f
 6180 0ca3 00000000 		.4byte	0
 6181 0ca7 00000000 		.4byte	0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 138


 6182              	.LLST63:
 6183 0cab 00000000 		.4byte	.LVL201
 6184 0caf 12000000 		.4byte	.LVL205
 6185 0cb3 0100     		.2byte	0x1
 6186 0cb5 51       		.byte	0x51
 6187 0cb6 12000000 		.4byte	.LVL205
 6188 0cba 1E000000 		.4byte	.LVL208
 6189 0cbe 0400     		.2byte	0x4
 6190 0cc0 F3       		.byte	0xf3
 6191 0cc1 01       		.uleb128 0x1
 6192 0cc2 51       		.byte	0x51
 6193 0cc3 9F       		.byte	0x9f
 6194 0cc4 1E000000 		.4byte	.LVL208
 6195 0cc8 20000000 		.4byte	.LVL209
 6196 0ccc 0100     		.2byte	0x1
 6197 0cce 51       		.byte	0x51
 6198 0ccf 20000000 		.4byte	.LVL209
 6199 0cd3 24000000 		.4byte	.LFE40
 6200 0cd7 0400     		.2byte	0x4
 6201 0cd9 F3       		.byte	0xf3
 6202 0cda 01       		.uleb128 0x1
 6203 0cdb 51       		.byte	0x51
 6204 0cdc 9F       		.byte	0x9f
 6205 0cdd 00000000 		.4byte	0
 6206 0ce1 00000000 		.4byte	0
 6207              	.LLST64:
 6208 0ce5 00000000 		.4byte	.LVL201
 6209 0ce9 10000000 		.4byte	.LVL204
 6210 0ced 0100     		.2byte	0x1
 6211 0cef 52       		.byte	0x52
 6212 0cf0 10000000 		.4byte	.LVL204
 6213 0cf4 1E000000 		.4byte	.LVL208
 6214 0cf8 0400     		.2byte	0x4
 6215 0cfa F3       		.byte	0xf3
 6216 0cfb 01       		.uleb128 0x1
 6217 0cfc 52       		.byte	0x52
 6218 0cfd 9F       		.byte	0x9f
 6219 0cfe 1E000000 		.4byte	.LVL208
 6220 0d02 20000000 		.4byte	.LVL209
 6221 0d06 0100     		.2byte	0x1
 6222 0d08 52       		.byte	0x52
 6223 0d09 20000000 		.4byte	.LVL209
 6224 0d0d 24000000 		.4byte	.LFE40
 6225 0d11 0400     		.2byte	0x4
 6226 0d13 F3       		.byte	0xf3
 6227 0d14 01       		.uleb128 0x1
 6228 0d15 52       		.byte	0x52
 6229 0d16 9F       		.byte	0x9f
 6230 0d17 00000000 		.4byte	0
 6231 0d1b 00000000 		.4byte	0
 6232              	.LLST65:
 6233 0d1f 00000000 		.4byte	.LVL201
 6234 0d23 0E000000 		.4byte	.LVL203
 6235 0d27 0100     		.2byte	0x1
 6236 0d29 53       		.byte	0x53
 6237 0d2a 0E000000 		.4byte	.LVL203
 6238 0d2e 1E000000 		.4byte	.LVL208
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 139


 6239 0d32 0400     		.2byte	0x4
 6240 0d34 F3       		.byte	0xf3
 6241 0d35 01       		.uleb128 0x1
 6242 0d36 53       		.byte	0x53
 6243 0d37 9F       		.byte	0x9f
 6244 0d38 1E000000 		.4byte	.LVL208
 6245 0d3c 20000000 		.4byte	.LVL209
 6246 0d40 0100     		.2byte	0x1
 6247 0d42 53       		.byte	0x53
 6248 0d43 20000000 		.4byte	.LVL209
 6249 0d47 24000000 		.4byte	.LFE40
 6250 0d4b 0400     		.2byte	0x4
 6251 0d4d F3       		.byte	0xf3
 6252 0d4e 01       		.uleb128 0x1
 6253 0d4f 53       		.byte	0x53
 6254 0d50 9F       		.byte	0x9f
 6255 0d51 00000000 		.4byte	0
 6256 0d55 00000000 		.4byte	0
 6257              	.LLST66:
 6258 0d59 04000000 		.4byte	.LVL202
 6259 0d5d 1C000000 		.4byte	.LVL207
 6260 0d61 0200     		.2byte	0x2
 6261 0d63 30       		.byte	0x30
 6262 0d64 9F       		.byte	0x9f
 6263 0d65 1C000000 		.4byte	.LVL207
 6264 0d69 1E000000 		.4byte	.LVL208
 6265 0d6d 0100     		.2byte	0x1
 6266 0d6f 50       		.byte	0x50
 6267 0d70 1E000000 		.4byte	.LVL208
 6268 0d74 20000000 		.4byte	.LVL209
 6269 0d78 0200     		.2byte	0x2
 6270 0d7a 30       		.byte	0x30
 6271 0d7b 9F       		.byte	0x9f
 6272 0d7c 20000000 		.4byte	.LVL209
 6273 0d80 24000000 		.4byte	.LFE40
 6274 0d84 0100     		.2byte	0x1
 6275 0d86 50       		.byte	0x50
 6276 0d87 00000000 		.4byte	0
 6277 0d8b 00000000 		.4byte	0
 6278              	.LLST67:
 6279 0d8f 00000000 		.4byte	.LVL210
 6280 0d93 10000000 		.4byte	.LVL211
 6281 0d97 0100     		.2byte	0x1
 6282 0d99 50       		.byte	0x50
 6283 0d9a 10000000 		.4byte	.LVL211
 6284 0d9e 11000000 		.4byte	.LVL212-1
 6285 0da2 0100     		.2byte	0x1
 6286 0da4 51       		.byte	0x51
 6287 0da5 11000000 		.4byte	.LVL212-1
 6288 0da9 24000000 		.4byte	.LVL214
 6289 0dad 0100     		.2byte	0x1
 6290 0daf 54       		.byte	0x54
 6291 0db0 24000000 		.4byte	.LVL214
 6292 0db4 26000000 		.4byte	.LFE41
 6293 0db8 0100     		.2byte	0x1
 6294 0dba 50       		.byte	0x50
 6295 0dbb 00000000 		.4byte	0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 140


 6296 0dbf 00000000 		.4byte	0
 6297              	.LLST68:
 6298 0dc3 0A000000 		.4byte	.LVL216
 6299 0dc7 0D000000 		.4byte	.LVL217-1
 6300 0dcb 0100     		.2byte	0x1
 6301 0dcd 50       		.byte	0x50
 6302 0dce 0D000000 		.4byte	.LVL217-1
 6303 0dd2 2E000000 		.4byte	.LVL221
 6304 0dd6 0100     		.2byte	0x1
 6305 0dd8 54       		.byte	0x54
 6306 0dd9 00000000 		.4byte	0
 6307 0ddd 00000000 		.4byte	0
 6308              	.LLST69:
 6309 0de1 00000000 		.4byte	.LVL222
 6310 0de5 08000000 		.4byte	.LVL223
 6311 0de9 0100     		.2byte	0x1
 6312 0deb 50       		.byte	0x50
 6313 0dec 08000000 		.4byte	.LVL223
 6314 0df0 0B000000 		.4byte	.LVL224-1
 6315 0df4 0100     		.2byte	0x1
 6316 0df6 51       		.byte	0x51
 6317 0df7 0B000000 		.4byte	.LVL224-1
 6318 0dfb 14000000 		.4byte	.LVL226
 6319 0dff 0100     		.2byte	0x1
 6320 0e01 54       		.byte	0x54
 6321 0e02 14000000 		.4byte	.LVL226
 6322 0e06 18000000 		.4byte	.LFE43
 6323 0e0a 0400     		.2byte	0x4
 6324 0e0c F3       		.byte	0xf3
 6325 0e0d 01       		.uleb128 0x1
 6326 0e0e 50       		.byte	0x50
 6327 0e0f 9F       		.byte	0x9f
 6328 0e10 00000000 		.4byte	0
 6329 0e14 00000000 		.4byte	0
 6330              	.LLST70:
 6331 0e18 0E000000 		.4byte	.LVL232
 6332 0e1c 15000000 		.4byte	.LVL233-1
 6333 0e20 0100     		.2byte	0x1
 6334 0e22 50       		.byte	0x50
 6335 0e23 15000000 		.4byte	.LVL233-1
 6336 0e27 24000000 		.4byte	.LVL235
 6337 0e2b 0100     		.2byte	0x1
 6338 0e2d 54       		.byte	0x54
 6339 0e2e 24000000 		.4byte	.LVL235
 6340 0e32 29000000 		.4byte	.LVL236-1
 6341 0e36 0100     		.2byte	0x1
 6342 0e38 50       		.byte	0x50
 6343 0e39 29000000 		.4byte	.LVL236-1
 6344 0e3d 44000000 		.4byte	.LVL240
 6345 0e41 0100     		.2byte	0x1
 6346 0e43 54       		.byte	0x54
 6347 0e44 00000000 		.4byte	0
 6348 0e48 00000000 		.4byte	0
 6349              		.section	.debug_aranges,"",%progbits
 6350 0000 A4000000 		.4byte	0xa4
 6351 0004 0200     		.2byte	0x2
 6352 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 141


 6353 000a 04       		.byte	0x4
 6354 000b 00       		.byte	0
 6355 000c 0000     		.2byte	0
 6356 000e 0000     		.2byte	0
 6357 0010 00000000 		.4byte	.LFB52
 6358 0014 04000000 		.4byte	.LFE52-.LFB52
 6359 0018 00000000 		.4byte	.LFB48
 6360 001c 6E000000 		.4byte	.LFE48-.LFB48
 6361 0020 00000000 		.4byte	.LFB51
 6362 0024 24000000 		.4byte	.LFE51-.LFB51
 6363 0028 00000000 		.4byte	.LFB49
 6364 002c 54010000 		.4byte	.LFE49-.LFB49
 6365 0030 00000000 		.4byte	.LFB53
 6366 0034 80010000 		.4byte	.LFE53-.LFB53
 6367 0038 00000000 		.4byte	.LFB54
 6368 003c 34010000 		.4byte	.LFE54-.LFB54
 6369 0040 00000000 		.4byte	.LFB50
 6370 0044 5C000000 		.4byte	.LFE50-.LFB50
 6371 0048 00000000 		.4byte	.LFB38
 6372 004c 5C000000 		.4byte	.LFE38-.LFB38
 6373 0050 00000000 		.4byte	.LFB39
 6374 0054 80000000 		.4byte	.LFE39-.LFB39
 6375 0058 00000000 		.4byte	.LFB40
 6376 005c 24000000 		.4byte	.LFE40-.LFB40
 6377 0060 00000000 		.4byte	.LFB41
 6378 0064 26000000 		.4byte	.LFE41-.LFB41
 6379 0068 00000000 		.4byte	.LFB42
 6380 006c 38000000 		.4byte	.LFE42-.LFB42
 6381 0070 00000000 		.4byte	.LFB43
 6382 0074 18000000 		.4byte	.LFE43-.LFB43
 6383 0078 00000000 		.4byte	.LFB44
 6384 007c 04000000 		.4byte	.LFE44-.LFB44
 6385 0080 00000000 		.4byte	.LFB45
 6386 0084 04000000 		.4byte	.LFE45-.LFB45
 6387 0088 00000000 		.4byte	.LFB46
 6388 008c 04000000 		.4byte	.LFE46-.LFB46
 6389 0090 00000000 		.4byte	.LFB47
 6390 0094 04000000 		.4byte	.LFE47-.LFB47
 6391 0098 00000000 		.4byte	.LFB37
 6392 009c 5C000000 		.4byte	.LFE37-.LFB37
 6393 00a0 00000000 		.4byte	0
 6394 00a4 00000000 		.4byte	0
 6395              		.section	.debug_ranges,"",%progbits
 6396              	.Ldebug_ranges0:
 6397 0000 0E000000 		.4byte	.LBB6
 6398 0004 42000000 		.4byte	.LBE6
 6399 0008 66000000 		.4byte	.LBB7
 6400 000c 6A000000 		.4byte	.LBE7
 6401 0010 00000000 		.4byte	0
 6402 0014 00000000 		.4byte	0
 6403 0018 46000000 		.4byte	.LBB8
 6404 001c 28010000 		.4byte	.LBE8
 6405 0020 46010000 		.4byte	.LBB12
 6406 0024 48010000 		.4byte	.LBE12
 6407 0028 00000000 		.4byte	0
 6408 002c 00000000 		.4byte	0
 6409 0030 00000000 		.4byte	.LFB52
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 142


 6410 0034 04000000 		.4byte	.LFE52
 6411 0038 00000000 		.4byte	.LFB48
 6412 003c 6E000000 		.4byte	.LFE48
 6413 0040 00000000 		.4byte	.LFB51
 6414 0044 24000000 		.4byte	.LFE51
 6415 0048 00000000 		.4byte	.LFB49
 6416 004c 54010000 		.4byte	.LFE49
 6417 0050 00000000 		.4byte	.LFB53
 6418 0054 80010000 		.4byte	.LFE53
 6419 0058 00000000 		.4byte	.LFB54
 6420 005c 34010000 		.4byte	.LFE54
 6421 0060 00000000 		.4byte	.LFB50
 6422 0064 5C000000 		.4byte	.LFE50
 6423 0068 00000000 		.4byte	.LFB38
 6424 006c 5C000000 		.4byte	.LFE38
 6425 0070 00000000 		.4byte	.LFB39
 6426 0074 80000000 		.4byte	.LFE39
 6427 0078 00000000 		.4byte	.LFB40
 6428 007c 24000000 		.4byte	.LFE40
 6429 0080 00000000 		.4byte	.LFB41
 6430 0084 26000000 		.4byte	.LFE41
 6431 0088 00000000 		.4byte	.LFB42
 6432 008c 38000000 		.4byte	.LFE42
 6433 0090 00000000 		.4byte	.LFB43
 6434 0094 18000000 		.4byte	.LFE43
 6435 0098 00000000 		.4byte	.LFB44
 6436 009c 04000000 		.4byte	.LFE44
 6437 00a0 00000000 		.4byte	.LFB45
 6438 00a4 04000000 		.4byte	.LFE45
 6439 00a8 00000000 		.4byte	.LFB46
 6440 00ac 04000000 		.4byte	.LFE46
 6441 00b0 00000000 		.4byte	.LFB47
 6442 00b4 04000000 		.4byte	.LFE47
 6443 00b8 00000000 		.4byte	.LFB37
 6444 00bc 5C000000 		.4byte	.LFE37
 6445 00c0 00000000 		.4byte	0
 6446 00c4 00000000 		.4byte	0
 6447              		.section	.debug_line,"",%progbits
 6448              	.Ldebug_line0:
 6449 0000 84060000 		.section	.debug_str,"MS",%progbits,1
 6449      02003203 
 6449      00000201 
 6449      FB0E0D00 
 6449      01010101 
 6450              	.LASF100:
 6451 0000 696D675F 		.ascii	"img_data\000"
 6451      64617461 
 6451      00
 6452              	.LASF129:
 6453 0009 76616C5F 		.ascii	"val_act\000"
 6453      61637400 
 6454              	.LASF84:
 6455 0011 4C565F49 		.ascii	"LV_IMG_SRC_FILE\000"
 6455      4D475F53 
 6455      52435F46 
 6455      494C4500 
 6456              	.LASF148:
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 143


 6457 0021 6C765F6D 		.ascii	"lv_mem_alloc\000"
 6457      656D5F61 
 6457      6C6C6F63 
 6457      00
 6458              	.LASF43:
 6459 002e 4C565F49 		.ascii	"LV_IMG_CF_RAW\000"
 6459      4D475F43 
 6459      465F5241 
 6459      5700
 6460              	.LASF35:
 6461 003c 73697A65 		.ascii	"size_t\000"
 6461      5F7400
 6462              	.LASF22:
 6463 0043 75696E74 		.ascii	"uintptr_t\000"
 6463      7074725F 
 6463      7400
 6464              	.LASF21:
 6465 004d 75696E74 		.ascii	"uint64_t\000"
 6465      36345F74 
 6465      00
 6466              	.LASF1:
 6467 0056 5F5F7569 		.ascii	"__uint8_t\000"
 6467      6E74385F 
 6467      7400
 6468              	.LASF143:
 6469 0060 6C765F69 		.ascii	"lv_img_decoder_set_close_cb\000"
 6469      6D675F64 
 6469      65636F64 
 6469      65725F73 
 6469      65745F63 
 6470              	.LASF44:
 6471 007c 4C565F49 		.ascii	"LV_IMG_CF_RAW_ALPHA\000"
 6471      4D475F43 
 6471      465F5241 
 6471      575F414C 
 6471      50484100 
 6472              	.LASF83:
 6473 0090 4C565F49 		.ascii	"LV_IMG_SRC_VARIABLE\000"
 6473      4D475F53 
 6473      52435F56 
 6473      41524941 
 6473      424C4500 
 6474              	.LASF123:
 6475 00a4 616C7068 		.ascii	"alpha4_opa_table\000"
 6475      61345F6F 
 6475      70615F74 
 6475      61626C65 
 6475      00
 6476              	.LASF128:
 6477 00b5 696D675F 		.ascii	"img_dsc\000"
 6477      64736300 
 6478              	.LASF8:
 6479 00bd 6C6F6E67 		.ascii	"long int\000"
 6479      20696E74 
 6479      00
 6480              	.LASF55:
 6481 00c6 4C565F49 		.ascii	"LV_IMG_CF_ALPHA_4BIT\000"
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 144


 6481      4D475F43 
 6481      465F414C 
 6481      5048415F 
 6481      34424954 
 6482              	.LASF13:
 6483 00db 6C6F6E67 		.ascii	"long long unsigned int\000"
 6483      206C6F6E 
 6483      6720756E 
 6483      7369676E 
 6483      65642069 
 6484              	.LASF80:
 6485 00f2 64617461 		.ascii	"data\000"
 6485      00
 6486              	.LASF39:
 6487 00f7 4C565F52 		.ascii	"LV_RES_INV\000"
 6487      45535F49 
 6487      4E5600
 6488              	.LASF116:
 6489 0102 70785F73 		.ascii	"px_size\000"
 6489      697A6500 
 6490              	.LASF52:
 6491 010a 4C565F49 		.ascii	"LV_IMG_CF_INDEXED_8BIT\000"
 6491      4D475F43 
 6491      465F494E 
 6491      44455845 
 6491      445F3842 
 6492              	.LASF111:
 6493 0121 6C765F6C 		.ascii	"lv_ll_t\000"
 6493      6C5F7400 
 6494              	.LASF0:
 6495 0129 5F5F696E 		.ascii	"__int8_t\000"
 6495      74385F74 
 6495      00
 6496              	.LASF32:
 6497 0132 6C765F63 		.ascii	"lv_color32_t\000"
 6497      6F6C6F72 
 6497      33325F74 
 6497      00
 6498              	.LASF23:
 6499 013f 6C765F63 		.ascii	"lv_coord_t\000"
 6499      6F6F7264 
 6499      5F7400
 6500              	.LASF125:
 6501 014a 6F70615F 		.ascii	"opa_table\000"
 6501      7461626C 
 6501      6500
 6502              	.LASF101:
 6503 0154 74696D65 		.ascii	"time_to_open\000"
 6503      5F746F5F 
 6503      6F70656E 
 6503      00
 6504              	.LASF18:
 6505 0161 696E7431 		.ascii	"int16_t\000"
 6505      365F7400 
 6506              	.LASF11:
 6507 0169 6C6F6E67 		.ascii	"long long int\000"
 6507      206C6F6E 
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 145


 6507      6720696E 
 6507      7400
 6508              	.LASF2:
 6509 0177 7369676E 		.ascii	"signed char\000"
 6509      65642063 
 6509      68617200 
 6510              	.LASF30:
 6511 0183 67726565 		.ascii	"green\000"
 6511      6E00
 6512              	.LASF31:
 6513 0189 616C7068 		.ascii	"alpha\000"
 6513      6100
 6514              	.LASF99:
 6515 018f 7372635F 		.ascii	"src_type\000"
 6515      74797065 
 6515      00
 6516              	.LASF157:
 6517 0198 5F6C765F 		.ascii	"_lv_ll_remove\000"
 6517      6C6C5F72 
 6517      656D6F76 
 6517      6500
 6518              	.LASF118:
 6519 01a6 70616C65 		.ascii	"palette_p\000"
 6519      7474655F 
 6519      7000
 6520              	.LASF120:
 6521 01b0 6C765F69 		.ascii	"lv_img_decoder_built_in_line_alpha\000"
 6521      6D675F64 
 6521      65636F64 
 6521      65725F62 
 6521      75696C74 
 6522              	.LASF77:
 6523 01d3 6C765F69 		.ascii	"lv_img_header_t\000"
 6523      6D675F68 
 6523      65616465 
 6523      725F7400 
 6524              	.LASF138:
 6525 01e3 6C765F69 		.ascii	"lv_img_decoder_create\000"
 6525      6D675F64 
 6525      65636F64 
 6525      65725F63 
 6525      72656174 
 6526              	.LASF142:
 6527 01f9 6C765F69 		.ascii	"lv_img_decoder_set_read_line_cb\000"
 6527      6D675F64 
 6527      65636F64 
 6527      65725F73 
 6527      65745F72 
 6528              	.LASF19:
 6529 0219 75696E74 		.ascii	"uint16_t\000"
 6529      31365F74 
 6529      00
 6530              	.LASF146:
 6531 0222 6C765F6D 		.ascii	"lv_mem_free\000"
 6531      656D5F66 
 6531      72656500 
 6532              	.LASF147:
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 146


 6533 022e 6C765F69 		.ascii	"lv_img_cf_get_px_size\000"
 6533      6D675F63 
 6533      665F6765 
 6533      745F7078 
 6533      5F73697A 
 6534              	.LASF152:
 6535 0244 5F6C765F 		.ascii	"_lv_ll_get_head\000"
 6535      6C6C5F67 
 6535      65745F68 
 6535      65616400 
 6536              	.LASF149:
 6537 0254 6C765F64 		.ascii	"lv_debug_check_null\000"
 6537      65627567 
 6537      5F636865 
 6537      636B5F6E 
 6537      756C6C00 
 6538              	.LASF42:
 6539 0268 4C565F49 		.ascii	"LV_IMG_CF_UNKNOWN\000"
 6539      4D475F43 
 6539      465F554E 
 6539      4B4E4F57 
 6539      4E00
 6540              	.LASF57:
 6541 027a 4C565F49 		.ascii	"LV_IMG_CF_RESERVED_15\000"
 6541      4D475F43 
 6541      465F5245 
 6541      53455256 
 6541      45445F31 
 6542              	.LASF58:
 6543 0290 4C565F49 		.ascii	"LV_IMG_CF_RESERVED_16\000"
 6543      4D475F43 
 6543      465F5245 
 6543      53455256 
 6543      45445F31 
 6544              	.LASF59:
 6545 02a6 4C565F49 		.ascii	"LV_IMG_CF_RESERVED_17\000"
 6545      4D475F43 
 6545      465F5245 
 6545      53455256 
 6545      45445F31 
 6546              	.LASF60:
 6547 02bc 4C565F49 		.ascii	"LV_IMG_CF_RESERVED_18\000"
 6547      4D475F43 
 6547      465F5245 
 6547      53455256 
 6547      45445F31 
 6548              	.LASF61:
 6549 02d2 4C565F49 		.ascii	"LV_IMG_CF_RESERVED_19\000"
 6549      4D475F43 
 6549      465F5245 
 6549      53455256 
 6549      45445F31 
 6550              	.LASF153:
 6551 02e8 5F6C765F 		.ascii	"_lv_ll_get_next\000"
 6551      6C6C5F67 
 6551      65745F6E 
 6551      65787400 
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 147


 6552              	.LASF130:
 6553 02f8 6C765F69 		.ascii	"lv_img_decoder_built_in_line_indexed\000"
 6553      6D675F64 
 6553      65636F64 
 6553      65725F62 
 6553      75696C74 
 6554              	.LASF140:
 6555 031d 6C765F69 		.ascii	"lv_img_decoder_set_info_cb\000"
 6555      6D675F64 
 6555      65636F64 
 6555      65725F73 
 6555      65745F69 
 6556              	.LASF9:
 6557 0338 5F5F7569 		.ascii	"__uint32_t\000"
 6557      6E743332 
 6557      5F7400
 6558              	.LASF126:
 6559 0343 6D61736B 		.ascii	"mask\000"
 6559      00
 6560              	.LASF93:
 6561 0348 75736572 		.ascii	"user_data\000"
 6561      5F646174 
 6561      6100
 6562              	.LASF4:
 6563 0352 5F5F696E 		.ascii	"__int16_t\000"
 6563      7431365F 
 6563      7400
 6564              	.LASF76:
 6565 035c 72657365 		.ascii	"reserved\000"
 6565      72766564 
 6565      00
 6566              	.LASF131:
 6567 0365 6C765F69 		.ascii	"lv_img_decoder_built_in_read_line\000"
 6567      6D675F64 
 6567      65636F64 
 6567      65725F62 
 6567      75696C74 
 6568              	.LASF41:
 6569 0387 6C765F72 		.ascii	"lv_res_t\000"
 6569      65735F74 
 6569      00
 6570              	.LASF54:
 6571 0390 4C565F49 		.ascii	"LV_IMG_CF_ALPHA_2BIT\000"
 6571      4D475F43 
 6571      465F414C 
 6571      5048415F 
 6571      32424954 
 6572              	.LASF127:
 6573 03a5 64617461 		.ascii	"data_tmp\000"
 6573      5F746D70 
 6573      00
 6574              	.LASF15:
 6575 03ae 756E7369 		.ascii	"unsigned int\000"
 6575      676E6564 
 6575      20696E74 
 6575      00
 6576              	.LASF154:
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 148


 6577 03bb 7374726C 		.ascii	"strlen\000"
 6577      656E00
 6578              	.LASF136:
 6579 03c2 6C765F69 		.ascii	"lv_img_decoder_built_in_close\000"
 6579      6D675F64 
 6579      65636F64 
 6579      65725F62 
 6579      75696C74 
 6580              	.LASF10:
 6581 03e0 6C6F6E67 		.ascii	"long unsigned int\000"
 6581      20756E73 
 6581      69676E65 
 6581      6420696E 
 6581      7400
 6582              	.LASF137:
 6583 03f2 6C765F69 		.ascii	"lv_img_decoder_close\000"
 6583      6D675F64 
 6583      65636F64 
 6583      65725F63 
 6583      6C6F7365 
 6584              	.LASF62:
 6585 0407 4C565F49 		.ascii	"LV_IMG_CF_RESERVED_20\000"
 6585      4D475F43 
 6585      465F5245 
 6585      53455256 
 6585      45445F32 
 6586              	.LASF63:
 6587 041d 4C565F49 		.ascii	"LV_IMG_CF_RESERVED_21\000"
 6587      4D475F43 
 6587      465F5245 
 6587      53455256 
 6587      45445F32 
 6588              	.LASF64:
 6589 0433 4C565F49 		.ascii	"LV_IMG_CF_RESERVED_22\000"
 6589      4D475F43 
 6589      465F5245 
 6589      53455256 
 6589      45445F32 
 6590              	.LASF65:
 6591 0449 4C565F49 		.ascii	"LV_IMG_CF_RESERVED_23\000"
 6591      4D475F43 
 6591      465F5245 
 6591      53455256 
 6591      45445F32 
 6592              	.LASF7:
 6593 045f 73686F72 		.ascii	"short unsigned int\000"
 6593      7420756E 
 6593      7369676E 
 6593      65642069 
 6593      6E7400
 6594              	.LASF40:
 6595 0472 4C565F52 		.ascii	"LV_RES_OK\000"
 6595      45535F4F 
 6595      4B00
 6596              	.LASF81:
 6597 047c 6C765F69 		.ascii	"lv_img_dsc_t\000"
 6597      6D675F64 
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 149


 6597      73635F74 
 6597      00
 6598              	.LASF53:
 6599 0489 4C565F49 		.ascii	"LV_IMG_CF_ALPHA_1BIT\000"
 6599      4D475F43 
 6599      465F414C 
 6599      5048415F 
 6599      31424954 
 6600              	.LASF87:
 6601 049e 6C765F69 		.ascii	"lv_img_src_t\000"
 6601      6D675F73 
 6601      72635F74 
 6601      00
 6602              	.LASF134:
 6603 04ab 666E6C65 		.ascii	"fnlen\000"
 6603      6E00
 6604              	.LASF155:
 6605 04b1 73747263 		.ascii	"strcpy\000"
 6605      707900
 6606              	.LASF48:
 6607 04b8 4C565F49 		.ascii	"LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED\000"
 6607      4D475F43 
 6607      465F5452 
 6607      55455F43 
 6607      4F4C4F52 
 6608              	.LASF79:
 6609 04da 64617461 		.ascii	"data_size\000"
 6609      5F73697A 
 6609      6500
 6610              	.LASF102:
 6611 04e4 6572726F 		.ascii	"error_msg\000"
 6611      725F6D73 
 6611      6700
 6612              	.LASF156:
 6613 04ee 5F6C765F 		.ascii	"_lv_ll_ins_head\000"
 6613      6C6C5F69 
 6613      6E735F68 
 6613      65616400 
 6614              	.LASF34:
 6615 04fe 6C765F6F 		.ascii	"lv_opa_t\000"
 6615      70615F74 
 6615      00
 6616              	.LASF98:
 6617 0507 636F6C6F 		.ascii	"color\000"
 6617      7200
 6618              	.LASF108:
 6619 050d 6E5F7369 		.ascii	"n_size\000"
 6619      7A6500
 6620              	.LASF92:
 6621 0514 636C6F73 		.ascii	"close_cb\000"
 6621      655F6362 
 6621      00
 6622              	.LASF113:
 6623 051d 6C765F69 		.ascii	"lv_img_decoder_built_in_data_t\000"
 6623      6D675F64 
 6623      65636F64 
 6623      65725F62 
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 150


 6623      75696C74 
 6624              	.LASF46:
 6625 053c 4C565F49 		.ascii	"LV_IMG_CF_TRUE_COLOR\000"
 6625      4D475F43 
 6625      465F5452 
 6625      55455F43 
 6625      4F4C4F52 
 6626              	.LASF117:
 6627 0551 70616C65 		.ascii	"palette_size\000"
 6627      7474655F 
 6627      73697A65 
 6627      00
 6628              	.LASF150:
 6629 055e 6C765F64 		.ascii	"lv_debug_log_error\000"
 6629      65627567 
 6629      5F6C6F67 
 6629      5F657272 
 6629      6F7200
 6630              	.LASF110:
 6631 0571 7461696C 		.ascii	"tail\000"
 6631      00
 6632              	.LASF37:
 6633 0576 73697A65 		.ascii	"sizetype\000"
 6633      74797065 
 6633      00
 6634              	.LASF36:
 6635 057f 6C6F6E67 		.ascii	"long double\000"
 6635      20646F75 
 6635      626C6500 
 6636              	.LASF28:
 6637 058b 66756C6C 		.ascii	"full\000"
 6637      00
 6638              	.LASF97:
 6639 0590 6465636F 		.ascii	"decoder\000"
 6639      64657200 
 6640              	.LASF105:
 6641 0598 6C765F69 		.ascii	"lv_img_decoder_t\000"
 6641      6D675F64 
 6641      65636F64 
 6641      65725F74 
 6641      00
 6642              	.LASF124:
 6643 05a9 62675F63 		.ascii	"bg_color\000"
 6643      6F6C6F72 
 6643      00
 6644              	.LASF114:
 6645 05b2 6C765F69 		.ascii	"lv_img_decoder_built_in_info\000"
 6645      6D675F64 
 6645      65636F64 
 6645      65725F62 
 6645      75696C74 
 6646              	.LASF51:
 6647 05cf 4C565F49 		.ascii	"LV_IMG_CF_INDEXED_4BIT\000"
 6647      4D475F43 
 6647      465F494E 
 6647      44455845 
 6647      445F3442 
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 151


 6648              	.LASF161:
 6649 05e6 433A5C55 		.ascii	"C:\\Users\\strap\\Documents\\Creator\\test_lvgl\\il"
 6649      73657273 
 6649      5C737472 
 6649      61705C44 
 6649      6F63756D 
 6650 0613 69393334 		.ascii	"i9341_master.cydsn\000"
 6650      315F6D61 
 6650      73746572 
 6650      2E637964 
 6650      736E00
 6651              	.LASF162:
 6652 0626 6C765F63 		.ascii	"lv_color_make\000"
 6652      6F6C6F72 
 6652      5F6D616B 
 6652      6500
 6653              	.LASF103:
 6654 0634 6C765F69 		.ascii	"lv_img_decoder_read_line_f_t\000"
 6654      6D675F64 
 6654      65636F64 
 6654      65725F72 
 6654      6561645F 
 6655              	.LASF88:
 6656 0651 6C765F69 		.ascii	"lv_img_decoder_info_f_t\000"
 6656      6D675F64 
 6656      65636F64 
 6656      65725F69 
 6656      6E666F5F 
 6657              	.LASF12:
 6658 0669 5F5F7569 		.ascii	"__uint64_t\000"
 6658      6E743634 
 6658      5F7400
 6659              	.LASF151:
 6660 0674 5F6C765F 		.ascii	"_lv_memset_00\000"
 6660      6D656D73 
 6660      65745F30 
 6660      3000
 6661              	.LASF89:
 6662 0682 696E666F 		.ascii	"info_cb\000"
 6662      5F636200 
 6663              	.LASF25:
 6664 068a 67726565 		.ascii	"green_h\000"
 6664      6E5F6800 
 6665              	.LASF27:
 6666 0692 67726565 		.ascii	"green_l\000"
 6666      6E5F6C00 
 6667              	.LASF29:
 6668 069a 6C765F63 		.ascii	"lv_color16_t\000"
 6668      6F6C6F72 
 6668      31365F74 
 6668      00
 6669              	.LASF82:
 6670 06a7 5F426F6F 		.ascii	"_Bool\000"
 6670      6C00
 6671              	.LASF3:
 6672 06ad 756E7369 		.ascii	"unsigned char\000"
 6672      676E6564 
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 152


 6672      20636861 
 6672      7200
 6673              	.LASF56:
 6674 06bb 4C565F49 		.ascii	"LV_IMG_CF_ALPHA_8BIT\000"
 6674      4D475F43 
 6674      465F414C 
 6674      5048415F 
 6674      38424954 
 6675              	.LASF96:
 6676 06d0 5F6C765F 		.ascii	"_lv_img_decoder_dsc\000"
 6676      696D675F 
 6676      6465636F 
 6676      6465725F 
 6676      64736300 
 6677              	.LASF163:
 6678 06e4 5F6C765F 		.ascii	"_lv_img_defoder_ll\000"
 6678      696D675F 
 6678      6465666F 
 6678      6465725F 
 6678      6C6C00
 6679              	.LASF5:
 6680 06f7 73686F72 		.ascii	"short int\000"
 6680      7420696E 
 6680      7400
 6681              	.LASF135:
 6682 0701 6C765F69 		.ascii	"lv_img_decoder_read_line\000"
 6682      6D675F64 
 6682      65636F64 
 6682      65725F72 
 6682      6561645F 
 6683              	.LASF14:
 6684 071a 5F5F7569 		.ascii	"__uintptr_t\000"
 6684      6E747074 
 6684      725F7400 
 6685              	.LASF159:
 6686 0726 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6686      43313120 
 6686      352E342E 
 6686      31203230 
 6686      31363036 
 6687 0759 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 6687      20726576 
 6687      6973696F 
 6687      6E203233 
 6687      37373135 
 6688 078c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 6688      66756E63 
 6688      74696F6E 
 6688      2D736563 
 6688      74696F6E 
 6689              	.LASF90:
 6690 07b4 6F70656E 		.ascii	"open_cb\000"
 6690      5F636200 
 6691              	.LASF122:
 6692 07bc 616C7068 		.ascii	"alpha2_opa_table\000"
 6692      61325F6F 
 6692      70615F74 
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 153


 6692      61626C65 
 6692      00
 6693              	.LASF109:
 6694 07cd 68656164 		.ascii	"head\000"
 6694      00
 6695              	.LASF112:
 6696 07d2 70616C65 		.ascii	"palette\000"
 6696      74746500 
 6697              	.LASF20:
 6698 07da 75696E74 		.ascii	"uint32_t\000"
 6698      33325F74 
 6698      00
 6699              	.LASF160:
 6700 07e3 6C76676C 		.ascii	"lvgl\\src\\lv_draw\\lv_img_decoder.c\000"
 6700      5C737263 
 6700      5C6C765F 
 6700      64726177 
 6700      5C6C765F 
 6701              	.LASF26:
 6702 0805 626C7565 		.ascii	"blue\000"
 6702      00
 6703              	.LASF107:
 6704 080a 6C765F6C 		.ascii	"lv_ll_node_t\000"
 6704      6C5F6E6F 
 6704      64655F74 
 6704      00
 6705              	.LASF38:
 6706 0817 63686172 		.ascii	"char\000"
 6706      00
 6707              	.LASF50:
 6708 081c 4C565F49 		.ascii	"LV_IMG_CF_INDEXED_2BIT\000"
 6708      4D475F43 
 6708      465F494E 
 6708      44455845 
 6708      445F3242 
 6709              	.LASF6:
 6710 0833 5F5F7569 		.ascii	"__uint16_t\000"
 6710      6E743136 
 6710      5F7400
 6711              	.LASF24:
 6712 083e 6C765F69 		.ascii	"lv_img_decoder_user_data_t\000"
 6712      6D675F64 
 6712      65636F64 
 6712      65725F75 
 6712      7365725F 
 6713              	.LASF145:
 6714 0859 6C765F69 		.ascii	"lv_img_src_get_type\000"
 6714      6D675F73 
 6714      72635F67 
 6714      65745F74 
 6714      79706500 
 6715              	.LASF106:
 6716 086d 6C765F69 		.ascii	"lv_img_decoder_dsc_t\000"
 6716      6D675F64 
 6716      65636F64 
 6716      65725F64 
 6716      73635F74 
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 154


 6717              	.LASF33:
 6718 0882 6C765F63 		.ascii	"lv_color_t\000"
 6718      6F6C6F72 
 6718      5F7400
 6719              	.LASF66:
 6720 088d 4C565F49 		.ascii	"LV_IMG_CF_USER_ENCODED_0\000"
 6720      4D475F43 
 6720      465F5553 
 6720      45525F45 
 6720      4E434F44 
 6721              	.LASF67:
 6722 08a6 4C565F49 		.ascii	"LV_IMG_CF_USER_ENCODED_1\000"
 6722      4D475F43 
 6722      465F5553 
 6722      45525F45 
 6722      4E434F44 
 6723              	.LASF45:
 6724 08bf 4C565F49 		.ascii	"LV_IMG_CF_RAW_CHROMA_KEYED\000"
 6724      4D475F43 
 6724      465F5241 
 6724      575F4348 
 6724      524F4D41 
 6725              	.LASF69:
 6726 08da 4C565F49 		.ascii	"LV_IMG_CF_USER_ENCODED_3\000"
 6726      4D475F43 
 6726      465F5553 
 6726      45525F45 
 6726      4E434F44 
 6727              	.LASF70:
 6728 08f3 4C565F49 		.ascii	"LV_IMG_CF_USER_ENCODED_4\000"
 6728      4D475F43 
 6728      465F5553 
 6728      45525F45 
 6728      4E434F44 
 6729              	.LASF71:
 6730 090c 4C565F49 		.ascii	"LV_IMG_CF_USER_ENCODED_5\000"
 6730      4D475F43 
 6730      465F5553 
 6730      45525F45 
 6730      4E434F44 
 6731              	.LASF72:
 6732 0925 4C565F49 		.ascii	"LV_IMG_CF_USER_ENCODED_6\000"
 6732      4D475F43 
 6732      465F5553 
 6732      45525F45 
 6732      4E434F44 
 6733              	.LASF73:
 6734 093e 4C565F49 		.ascii	"LV_IMG_CF_USER_ENCODED_7\000"
 6734      4D475F43 
 6734      465F5553 
 6734      45525F45 
 6734      4E434F44 
 6735              	.LASF133:
 6736 0957 6C765F69 		.ascii	"lv_img_decoder_open\000"
 6736      6D675F64 
 6736      65636F64 
 6736      65725F6F 
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 155


 6736      70656E00 
 6737              	.LASF16:
 6738 096b 696E7438 		.ascii	"int8_t\000"
 6738      5F7400
 6739              	.LASF95:
 6740 0972 5F6C765F 		.ascii	"_lv_img_decoder\000"
 6740      696D675F 
 6740      6465636F 
 6740      64657200 
 6741              	.LASF115:
 6742 0982 6C765F69 		.ascii	"lv_img_decoder_built_in_open\000"
 6742      6D675F64 
 6742      65636F64 
 6742      65725F62 
 6742      75696C74 
 6743              	.LASF94:
 6744 099f 6C765F69 		.ascii	"lv_img_decoder_open_f_t\000"
 6744      6D675F64 
 6744      65636F64 
 6744      65725F6F 
 6744      70656E5F 
 6745              	.LASF68:
 6746 09b7 4C565F49 		.ascii	"LV_IMG_CF_USER_ENCODED_2\000"
 6746      4D475F43 
 6746      465F5553 
 6746      45525F45 
 6746      4E434F44 
 6747              	.LASF49:
 6748 09d0 4C565F49 		.ascii	"LV_IMG_CF_INDEXED_1BIT\000"
 6748      4D475F43 
 6748      465F494E 
 6748      44455845 
 6748      445F3142 
 6749              	.LASF86:
 6750 09e7 4C565F49 		.ascii	"LV_IMG_SRC_UNKNOWN\000"
 6750      4D475F53 
 6750      52435F55 
 6750      4E4B4E4F 
 6750      574E00
 6751              	.LASF144:
 6752 09fa 5F6C765F 		.ascii	"_lv_img_decoder_init\000"
 6752      696D675F 
 6752      6465636F 
 6752      6465725F 
 6752      696E6974 
 6753              	.LASF17:
 6754 0a0f 75696E74 		.ascii	"uint8_t\000"
 6754      385F7400 
 6755              	.LASF91:
 6756 0a17 72656164 		.ascii	"read_line_cb\000"
 6756      5F6C696E 
 6756      655F6362 
 6756      00
 6757              	.LASF47:
 6758 0a24 4C565F49 		.ascii	"LV_IMG_CF_TRUE_COLOR_ALPHA\000"
 6758      4D475F43 
 6758      465F5452 
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 156


 6758      55455F43 
 6758      4F4C4F52 
 6759              	.LASF75:
 6760 0a3f 616C7761 		.ascii	"always_zero\000"
 6760      79735F7A 
 6760      65726F00 
 6761              	.LASF85:
 6762 0a4b 4C565F49 		.ascii	"LV_IMG_SRC_SYMBOL\000"
 6762      4D475F53 
 6762      52435F53 
 6762      594D424F 
 6762      4C00
 6763              	.LASF141:
 6764 0a5d 6C765F69 		.ascii	"lv_img_decoder_set_open_cb\000"
 6764      6D675F64 
 6764      65636F64 
 6764      65725F73 
 6764      65745F6F 
 6765              	.LASF158:
 6766 0a78 5F6C765F 		.ascii	"_lv_ll_init\000"
 6766      6C6C5F69 
 6766      6E697400 
 6767              	.LASF74:
 6768 0a84 6C765F69 		.ascii	"lv_img_cf_t\000"
 6768      6D675F63 
 6768      665F7400 
 6769              	.LASF121:
 6770 0a90 616C7068 		.ascii	"alpha1_opa_table\000"
 6770      61315F6F 
 6770      70615F74 
 6770      61626C65 
 6770      00
 6771              	.LASF139:
 6772 0aa1 6C765F69 		.ascii	"lv_img_decoder_delete\000"
 6772      6D675F64 
 6772      65636F64 
 6772      65725F64 
 6772      656C6574 
 6773              	.LASF104:
 6774 0ab7 6C765F69 		.ascii	"lv_img_decoder_close_f_t\000"
 6774      6D675F64 
 6774      65636F64 
 6774      65725F63 
 6774      6C6F7365 
 6775              	.LASF132:
 6776 0ad0 6C765F69 		.ascii	"lv_img_decoder_get_info\000"
 6776      6D675F64 
 6776      65636F64 
 6776      65725F67 
 6776      65745F69 
 6777              	.LASF78:
 6778 0ae8 68656164 		.ascii	"header\000"
 6778      657200
 6779              	.LASF119:
 6780 0aef 6C765F69 		.ascii	"lv_img_decoder_built_in_line_true_color\000"
 6780      6D675F64 
 6780      65636F64 
ARM GAS  C:\Users\strap\AppData\Local\Temp\ccdl2tNP.s 			page 157


 6780      65725F62 
 6780      75696C74 
 6781              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
